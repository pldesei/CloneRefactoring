(startLine=82 endLine=103 srcPath=/root/Projects/elasticsearchFilter/1893/elasticsearch/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/DefaultClusterService.java)
    @Override public ClusterService start() throws ElasticSearchException {
        if (!lifecycle.moveToStarted()) {
            return this;
        }
        this.updateTasksExecutor = newSingleThreadExecutor(daemonThreadFactory(settings, "clusterService#updateTask"));
        scheduledFuture = threadPool.scheduleWithFixedDelay(new Runnable() {
            @Override public void run() {
                long timestamp = System.currentTimeMillis();
                for (final TimeoutHolder holder : clusterStateTimeoutListeners) {
                    if ((timestamp - holder.timestamp) > holder.timeout.millis()) {
                        clusterStateTimeoutListeners.remove(holder);
                        DefaultClusterService.this.threadPool.execute(new Runnable() {
                            @Override public void run() {
                                holder.listener.onTimeout(holder.timeout);
                            }
                        });
                    }
                }
            }
        }, timeoutInterval);
        return this;
    }

