107f311e182d4b8298a10093ae4c5c6bc02641ec,2bfed8709b80a4bf52f07e9def492a783caa51ff,cpovirk,Tue May 30 13:11:03 2017 -0700,FluentFuture.
303fc3f3a623a7278ff11e114fa935200ff7080f,ae98be88f1ec366a911c19e7aafa1a0704e28422,lowasser,Thu May 25 13:15:01 2017 -0700,Eliminate most holder classes from c.g.c.hash.Hashing, but still keep those constants lazily generated -- e.g. moving the static constant to its own implementation class.
511730968ce8b82708c61e74e9c2c2bdaec51d57,2a6752bf39338d3d861cec436bce9e7600f57385,lowasser,Thu May 25 06:16:05 2017 -0700,Move UnsignedLongs static constants to a static class, to allow other UnsignedLongs methods to get inlined.
a8e515863adcb5de5d698e0a4fc1382fa2afbc4a,0d8ebd19d6463d1bf8db2ba497ea3a5f6573cef9,lowasser,Wed May 24 06:25:55 2017 -0700,Reduce allocation in Iterators.concat.
759ed127385c9d83354b9758fcb8db7c8a79175f,aafc7d686304e3b0b0cecdf4182adc7402c57be3,lowasser,Tue May 23 09:11:21 2017 -0700,Inline some filtering logic, etc. into Sets views to reduce code retention and allocation of Predicate objects.
8297ad4522220c069d4a28a489a0c31d0c577a5e,bc996973fe6ce1ecb67803aa1ff5bdf5df59d182,cpovirk,Mon May 22 11:26:19 2017 -0700,Run StreamsTest and ComparatorsTest under GWT.
bc996973fe6ce1ecb67803aa1ff5bdf5df59d182,58fa7011ce024c0c904d4e0dd6cba78fcd08975d,jrtom,Mon May 22 10:39:27 2017 -0700,common.graph classes: mark types and methods as @GoogleInternal that are not yet ready for release in Guava 22.
4068f7b94c63ffd1d81636be79c42542876c8fd6,cc2b970f45d28a9258dbd9c01fda97a4ba293c20,lowasser,Fri May 19 08:10:22 2017 -0700,Roll forward of [] going back to exactly the original semantics while we're at it.
20472b631602847af5d2797d9b991d4deae5e86d,eb3d015d84cd0bb9804335b3832b63005406dbff,lowasser,Thu May 18 08:00:39 2017 -0700,Automated g4 rollback of changelist 156329581.
54087fa7ccc66021f11e3d1bf478f44542ad9856,abf316f72678d722f0f31b45e7b75cc7209d20e8,lowasser,Wed May 17 11:26:24 2017 -0700,Simplify Iterators.concat and optimize it for minimizing allocations, while preserving the smart behavior for nested Iterators.concats.
24c728189bf1546920e37cffad7c13e15712f380,5b8b71c1375b2222736b3f58528df99180ec8a1d,lowasser,Wed May 10 11:07:14 2017 -0700,Merge some classes in Iterables that don't really need to be split.
a2c6fc17b66424fa2c545531b52f13c3a0afa9ab,e68c0e674b22b9d49d402e0151aa15e8c645bd4b,lowasser,Mon May 8 14:03:08 2017 -0700,Reduce use of Predicates in Maps.filter variants.
8e7ff6a20794497109bcdae369c15d81d35dc3e7,071fcf6e47ae00b76b541c7ae2e253eb2fae09d3,lowasser,Fri May 5 13:26:10 2017 -0700,Implementation of Sets.combinations(Set, int), approved by []
1904b1a8034f208ea18cf849d36315e4ef0a1146,108b8309fae3dc7794d528b9e2c6bafd6a6be726,kvs,Thu May 4 05:35:32 2017 -0700,Added test for addAllImpl.
108b8309fae3dc7794d528b9e2c6bafd6a6be726,6092a4a8b1087f92d0c3169b9e96d53c54ca95c4,lowasser,Thu May 4 05:34:49 2017 -0700,Rewrite ImmutableSortedMultiset.Builder on Android to avoid using TreeMultiset, which allocates a ton of objects and also uses a ton of code.
6092a4a8b1087f92d0c3169b9e96d53c54ca95c4,8f7bbd4c73f72b504d79c9c7fc5cb75396483de1,lowasser,Tue May 2 14:49:14 2017 -0700,Make BloomFilter concurrent.
8f7bbd4c73f72b504d79c9c7fc5cb75396483de1,36f003175073e645d0cf5f8467778ab63879c304,kevinb,Tue May 2 13:49:09 2017 -0700,ImmutableDoubleArray
cd8fb02a9c762707e5b7bbc22507dc8569efe430,c3fe1be6005c7cff988d0b964876c1db967fac5b,nharmata,Thu Apr 27 11:59:41 2017 -0700,Provide specializations of MapMakerInternalMap's internal data structures, notably InternalEntry, for the case where the value type is a singleton. This is Interners's exact use case.
c198afe6dd2938ab972c78fc506c9282592061ea,67cbc789e9cd523c38a75eda917fe7b6e42518f8,ronshapiro,Wed Apr 26 07:31:13 2017 -0700,Fork common.reflect and remove a few tests from the java7 branch that don't work on Android
38e537e6ed6e9e9a1908a68300c7d18327bc5bc5,03f68e64d2b5ae4b30b9376a2643a9ee56fd2e1b,kevinb,Mon Apr 24 10:00:49 2017 -0700,ImmutableLongArray. Regenerated the int-based classes using it as the model.
03f68e64d2b5ae4b30b9376a2643a9ee56fd2e1b,813e0366fa399531035b8359f70da61cc8b499c3,ronshapiro,Mon Apr 24 09:20:24 2017 -0700,Don't release SourceSinkFactories that are java7-specific (i.e. use java.nio)
e8055622b25682f53ff9ca3b2c89a3fcfe9c6c45,c2933b6954dda50676cfbe6eed7acc4230e6b6e4,ronshapiro,Fri Apr 21 12:03:30 2017 -0700,Add missing common.primitives to Guava for Android.
9b94fb3965c6869b0ac47420958a4bbae0b2d54c,a952dac581d7c9207a5b0fa1ff28c6eb81f9c2c9,zhenghua,Thu Apr 20 19:27:51 2017 -0700,Begin exporting sources of Guava for Android.
ede4f49324d2e27f0938d6800df81d2dbd48943d,e7490fa9553356850b8cee77b1b5510780c2ce61,cpovirk,Fri Apr 14 14:19:32 2017 -0700,Internal @AndroidIncompatible docs: - It's not for prod APIs. - It works through a special MOE config.
84a14ed75656d1ff932a1192ad050fe9e12e6450,01bf8d29a279759a576fd86682f83ccce11657db,kevinb,Thu Apr 13 09:55:37 2017 -0700,Add Java8-specific methods: copyOf(Stream), Builder.addAll(Stream), stream(), forEach(IntConsumer). (w/lowasser)
1a6f679f075a3b6fc84298be8d9fadefe3d00e52,62d3295e4a39274aaae0dd2e4a13430c72ec534a,kvs,Wed Apr 12 11:11:09 2017 -0700,First round of adding tests for the Lists.*Impl package-private methods.
4754abf0e349b59f82f8bc959c99808a04f5c432,667a0d0a722edd410c4b900637e211ebae18cc59,clm,Tue Apr 11 16:13:49 2017 -0700,Assign otherwise ignored Future return values to local variables. This change is part of [] which will eventually make it an error to ignore the return value of methods that return Future.
5dee802e8f416d5c5d8bec9a1ea350d33d6698aa,7a68b7bf103b6cd83e60b0d444c63d1a4e6a1479,lukes,Tue Apr 11 13:27:40 2017 -0700,minor enhancements to serializingexecutor
55ea7068c374058ddc6a956957297cd1a881c759,36388ab2659702401a1bef554d102906a158171e,cpovirk,Mon Apr 10 11:35:58 2017 -0700,Make smear() produce accurate results under GWT, hopefully. This appears to solve the problem reported in HashMultiset under GWT.
4ffdee5fc692bf7b5ab8c95269e3aeec1c806eec,bf7bc4923a8b66873e77a98706a8ef14488eaafa,martinrb,Wed Apr 5 07:24:18 2017 -0700,Fix for Android crash caused by mis-aligned call of Unsafe.getLong on a 4-byte aligned field offset.
62156ea9c16daf4e885cdeb99be1a021acdace63,9fad64c2874ab1aa21d3ecad54f19ae4a25f27fd,cpovirk,Mon Apr 3 11:41:32 2017 -0700,Test ImmutableIntArray under GWT.
de8d63f55ce4db93b33025aa4ac6a5823c8c3e57,5090ad5976b8d1641511a62d91cc43716f02e808,jnyman,Wed Mar 29 10:14:54 2017 -0700,Methods that take a node as parameter now take type N instead of Object.
5090ad5976b8d1641511a62d91cc43716f02e808,557649df91e5f8bab4d5f39d56c81bd47e134b06,kevinb,Wed Mar 29 08:15:46 2017 -0700,ImmutableIntArray initial version.
06bf86aa5c00511eb745cb450222054cc4b86e36,09f2c448fbd738fd4bfd5b1015dafe2f187be835,jnyman,Tue Mar 28 08:36:40 2017 -0700,Renamed {Successor,Predecessor}Graph to {Successors,Predecessors}Function.
09f2c448fbd738fd4bfd5b1015dafe2f187be835,8f1a088475b51f03b9f28617893510cc74b82b49,zhenghua,Tue Mar 28 08:36:38 2017 -0700,Added more memory benchmarks for collections.
8f1a088475b51f03b9f28617893510cc74b82b49,f24328a521b3c4fce0cdb854f9d7d36c03a673cf,kevinb,Tue Mar 28 06:24:54 2017 -0700,(w/lowasser) Streams.forEachPair()
d7f2dddae1f04e5040faca34819cb5d1c700d48f,82cf44994fa37cd79d0f2c3a7de3038df5b51843,Thomas Beutler,Mon Mar 27 10:03:01 2017 -0700,Add BloomFilter.approximateCount().
72da1ce15303d395d4e6f659e4ceef41c3dcf935,15ba0ea3f295a2fe322ceebaccba347ae0fe3f21,sunxin,Mon Mar 27 06:47:36 2017 -0700,Deprecate Executor-less Futures methods upon incoming migration completion to the ones with a MoreExecutors.directExecutor(), discouraging internal use, while keeping the open-source version in Guava intact. They and scheduled to be deleted in April 2018.
dbeed4ae4cd45409ef6ad9fa66f203a45250c2f0,85849257e9e7fd27cfa517402c079d268cccd275,jnyman,Thu Mar 23 09:18:40 2017 -0700,Implemented new TimeLimiter methods in SimpleTimeLimiter.
4c67c7213f3080cb8ffcee99d006635df224f149,c5225fc88eccd9990e9e0e2c8f7c6f8255015a32,kevinb,Thu Mar 23 06:52:51 2017 -0700,Reorder methods so we (a) aren't splitting overloads anymore and (b) have them in the order: stream starters, stream combiners, stream chainers, and terminal ops.
c5225fc88eccd9990e9e0e2c8f7c6f8255015a32,14978e59e56fc770853c3fe3cecd6b8c4d97997b,jnyman,Wed Mar 22 11:52:35 2017 -0700,Implemented new TimeLimiter methods in FakeTimeLimiter.
196f59d7e94532f04cbcbf56b34c8dfcd52626a9,af5e29f3fd05df9a05e597380b6922cc9fc15995,jnyman,Wed Mar 22 10:37:53 2017 -0700,Added TimeLimiter.{call,run}WithTimeout() methods with improved exception behavior and more readable method signature.
c817079ac853763127078dcceed4e65e5a9374ad,7bde6040bf36313a5e2567fa0eaf7cefb46d4bdc,kvs,Tue Mar 21 07:17:10 2017 -0700,Added tests to cover some forEach code in Iterables. (Which means these tests should not be in the Java7 version).
7bde6040bf36313a5e2567fa0eaf7cefb46d4bdc,32c885b3cc561f64dae7efed3d5fee516ad359fa,zhenghua,Thu Mar 16 14:31:59 2017 -0700,Fix LocalCache.compute deadlock issue, also added unittests.
32c885b3cc561f64dae7efed3d5fee516ad359fa,2b8af31fb49ecabdbefe66df8b369e1b137d10f2,jrtom,Thu Mar 16 11:58:55 2017 -0700,Preconditions.java: reword the section on Performance to clarify what aspects of performance are actually expected to be an issue in practice.
2b8af31fb49ecabdbefe66df8b369e1b137d10f2,1d3051de806987f41f69edfd21cb0a8cff0e1dcb,benyu,Thu Mar 16 09:51:05 2017 -0700,Fix external bug #2751.
ea7b9e3af6844d4f5a2efe7dc98ee30f88c8cfbb,2848e96221c469b08c7693a18afba72219443f5f,kvs,Tue Mar 14 14:13:23 2017 -0700,Added a test that improves test coverage of the nested class MapViewOfValuesAsSingletonSets (via asMultimap).
31985701e877434941c97891ba732478f0e97258,1445486132811e9ce175ce463356c659d8e6339d,lukes,Thu Mar 9 07:33:30 2017 -0800,Make MediaType.charset() a little cheaper.
1445486132811e9ce175ce463356c659d8e6339d,296972864f901744a7eb16698ecbbcbfaabf1989,kevinb,Tue Mar 7 07:29:54 2017 -0800,It was senseless to hold these nifty collectors back from Guava (sorry).
296972864f901744a7eb16698ecbbcbfaabf1989,3d27caceeb1b90fb868d98e6d690394d3cff339a,cpovirk,Tue Mar 7 07:26:14 2017 -0800,Reimplement inCompletionOrder() (courtesy lukes@). (Also, make it available under GWT, but possibly I could have done that without reimplementing?)
c7769b29de954b3469fb1d9a25a80cb333fdd0ae,f1372238af0da9ba3d3b068fbe244c55a3104b57,cgdecker,Fri Mar 3 10:05:33 2017 -0800,Add CharSource.lines().
4906fbbaeb22559563be02b0e765fda15426baff,2203451442f390f6fb9aeea95a90f790d8a4a061,kak,Thu Mar 2 10:17:01 2017 -0800,google-java-format Stopwatch (and test) to minimize diffs introduced by []
379757e3b1c22fef4b19181e404c6abb7ad58d50,5b1fc2e6dac60e84e8bd59a29e66883a911e7cd3,cpovirk,Mon Feb 27 10:39:47 2017 -0800,Deprecate and better document many hash functions.
9e2592468378e55556e28d643a6437322d35c480,1aea9748a3e0a73e8b82270c01ccf8bb92264f4c,chrisn,Thu Feb 23 08:45:58 2017 -0800,Make ListenerCallQueue functionality available outside the concurrent package internally. Changes: - encapsulate list of listeners functionality - rename Callback interface to Event and make it lambda-compatible - move "methodName" to just be toString() on Event, which also defers/avoids unnecessary allocations - remove @GuardedBy suppression
1aea9748a3e0a73e8b82270c01ccf8bb92264f4c,31efcb491afa1b287f21565e71acc4059729403d,peteg,Wed Feb 22 10:44:05 2017 -0800,Make the tests for Quantiles use up-to-date Truth technology. My main motiviation here is to stop using hasValuesWithin, which is going away. While I'm at it, let's start using comparingValuesUsing for the Map assertions to avoid the unpleasant loop, and inline the helpers, which aren't really useful now that we've done that.
7c11b8d9220b710d5598b774e22cc774f68f40e7,8a930bc2d352cb4c8def02d982b795f0ae48a229,Jason Trump,Wed Feb 22 08:58:46 2017 -0800,Make classpath scans over circular symlinks predictable.
c0b74877c604d6c8190b03d8470435048650f815,5076898002c108516cadc50179856e0bb2815fa4,kevinb,Tue Feb 21 09:27:51 2017 -0800,Explain the segmented nature of maximumWeight better.
623896f9180bd20c05b8c550f4323038f86803d0,5907979766f539d8aa810459bd0194adefd10c95,jnyman,Tue Feb 21 07:14:31 2017 -0800,Added SuccessorGraph/PredecessorGraph.
9f2e28d6ffb74733b397b84ac25139ae3e012c33,92ff172e173dcf16376e9b429827dfc99dd6354f,lowasser,Wed Feb 8 10:59:44 2017 -0800,Automated g4 rollback of changelist 146841288.
6be638b6cd854cc8be93210bc173e22d88d74593,9a0670aeef95035f5caf3814d0daf16ee60a353a,lowasser,Wed Feb 8 04:56:14 2017 -0800,Eliminate SingletonImmutableSet, partially folding it into RegularImmutableSet.
994a379dc3b787c34afb0c3de65e26bede59bd81,484c00a67537285255ac9311e339b0169fc28647,lowasser,Mon Feb 6 11:18:56 2017 -0800,Delete SingletonImmutableList.
484c00a67537285255ac9311e339b0169fc28647,cac2e34369fe1b6b71ef0006e6fc50766fee8147,lowasser,Mon Feb 6 11:12:28 2017 -0800,Don't have a special class for Iterators.unmodifiableListIterator(), instead using Iterators.forArray(ObjectArrays.EMPTY_ARRAY).
aaae2e9a6b9cab0429f4589f89603742f28f6bd0,46a324c292a8c2927bc452956d75134b2f084396,lowasser,Fri Feb 3 14:28:09 2017 -0800,Optimize ContiguousSet.asList() for the three built-in DiscreteDomains.
7356947cb2caf73d6155255bdcc2906e45e973d6,bfbeca9d086110432cda723050f37e1fe7a60e1f,diamondm,Tue Jan 31 09:55:25 2017 -0800,Deprecate several redundant methods in Files, cross-reference functionality added to JDK's Files class (hence not in Guava's MoreFiles).
1ab917eac078a6c9f6cfefee6859855b6037a9b9,39a92f259efe0dc73221af42b8f7e5f84b0130f4,sunxin,Tue Jan 24 08:00:25 2017 -0800,Among the Futures methods that run user callbacks, those that don't take an Executor will be deleted.  This CL migrates them to the counterparts that take MoreExecutors.directExecutor() as such Executor in the parameter list, exactly the way that the old method works.
6dfbabda7906ec343bcc2e54e1c34957d90bae68,7c59e96177901f12491cf25a409956f1649fa42e,benyu,Fri Jan 20 12:45:10 2017 -0800,Support interface static methods and default methods for NullPointerTester.
e3f9ba6a707b03559910bceffb74244ac9a8db13,e616b8ec9612eeb5ad2b616b4809e16ec8a53bc0,lowasser,Thu Jan 19 11:35:34 2017 -0800,Finally add Tables.synchronizedTable, which has seemed to continually fall through the cracks...
e616b8ec9612eeb5ad2b616b4809e16ec8a53bc0,d0dc9ce896df6299de427063fa69bd348937ef1f,jasexton,Thu Jan 19 08:25:13 2017 -0800,Introduce a package-private BaseGraph interface and AbstractBaseGraph class. This allows us to remove a large amount of code duplication. It also gives us a small reduction in constant overhead for Graphs.
d0dc9ce896df6299de427063fa69bd348937ef1f,6c02e370ae4256ea1ed027c41cc20639ca09a1a5,jasexton,Thu Jan 19 07:53:15 2017 -0800,Now that ValueGraph no longer extends Graph, change all the common.graph interfaces to handle equals()/hashCode() "normally". Deprecate Graphs.equivalent().
6c02e370ae4256ea1ed027c41cc20639ca09a1a5,b0b03e7936397e68960383d2086f342f74d1c1bc,jasexton,Thu Jan 19 07:46:22 2017 -0800,Make it so ValueGraph no longer extends Graph. Instead, provide a ValueGraph.asGraph() method. In a followup change, this will allow us to handle equals()/hashCode() "normally" and delete the Graphs.equivalent() methods.
896c51abd32e136621c13d56b6130d0a72f4957a,65ffec58dcbb7547109896d5d96ae0581dca4cc8,benyu,Thu Jan 12 13:50:02 2017 -0800,To fix external bug https://github.com/google/guava/issues/2152.
1efc5ce983c02cfaa2ce3338bdfaa1f583b66128,7b53ffdf0d4c7616566cb6953cce15e9247c04c2,diamondm,Wed Jan 4 12:16:20 2017 -0800,Add RangeMap.putCoalescing() in order to support coalesced RangeMap entries.
7b53ffdf0d4c7616566cb6953cce15e9247c04c2,b710437f4727a57f23fb2b750e13fc89ee8d1012,diamondm,Wed Jan 4 12:16:20 2017 -0800,Add example anti-pattern to getCauseAs() Javadoc.
f74b9dec6b2447b4e81b555a8f8fe0c37e427eb4,424695b378bb2eeb7d147a126aa497e0c196243d,gak,Tue Dec 27 16:01:06 2016 -0800,Add a toString() to the Runnable created by Futures.addCallback.  While not typically exposed to the user, the Runnable may still be seen in logging and/or debugging output.
8dac290de1588c158c3eaea84890776a4986c0a4,dbc3258d66075a766d1a67ca08b8631d617af681,cpovirk,Wed Dec 21 09:56:37 2016 -0800,Fix occasional hangs. Also, include LinkedBlockingDeque in our public tests, since we've required Java 6 for a long time. Plus, use static imports, Stopwatch, and Truth, and reformat.
14c08642e4048ffc5151d31728404edc6bf2562e,4d025889e59ef9fb8e3886ce51cd021022429142,Dean de Bree,Tue Dec 20 08:34:48 2016 -0800,Add a custom gwt serializer for the Range object
b2c7384b371115007567704de13821972cd562e5,770ad744831b14cf051242359181ca51c504c97f,lowasser,Wed Dec 14 09:34:44 2016 -0800,Add {Sets,Maps}.toImmutableEnum{Set,Map} Collectors.
04a28f4dd88f2c8ad85becb3d375cced2d6c86ad,1684cbd29c26cfb6254b8781936a242fd3a3fc2c,diamondm,Wed Dec 7 12:44:29 2016 -0800,Add set-arithmetic operations to ImmutableRangeSet, as discussed in []
2ef955163b3d43e7849c1929ef4e5d714b93da96,16e3f26fd31ced35fa8a71ab2b1091ce9157a90f,jasexton,Mon Nov 28 11:48:09 2016 -0800,Fix two bugs in MinMaxPriorityQueue (introduced in [] First is a bug in removeAt(int) that sometimes causes the wrong element to be removed. Second is a bug that sometimes causes certain elements to be iterated over more than once if elements were removed during iteration.
16e3f26fd31ced35fa8a71ab2b1091ce9157a90f,f67ab864bde63fa6602b5688de0440957ffeaa2e,lowasser,Mon Nov 21 14:35:15 2016 -0800,Add Booleans.{true,false}First.
f67ab864bde63fa6602b5688de0440957ffeaa2e,d773e9f04c5b099b52cde43d37d8d9a21ebf0e3d,cpovirk,Fri Nov 18 12:40:29 2016 -0800,Remove methods scheduled for deletion in Guava 21.
17784aebfdd7c24f5476352361f5e87867a247a4,fb7fb7d39fc523d6f5ddd109250c153effdc776d,lowasser,Wed Nov 16 12:31:34 2016 -0800,Add flatteningToMultimap collectors.
fb7fb7d39fc523d6f5ddd109250c153effdc776d,77a57f215fb6eb5a2c982ac1843299f21deb53d3,benyu,Wed Nov 16 10:58:23 2016 -0800,Migrate last users of ForwardingTestCase and delete it.
77a57f215fb6eb5a2c982ac1843299f21deb53d3,bd3633c4f98b8545c968356c73de18164abe07a2,benyu,Wed Nov 16 06:03:09 2016 -0800,Use ForwardingWrapperTest to simplify last round of ForwardingTestCase subclasses.
bd3633c4f98b8545c968356c73de18164abe07a2,0e2a6cb0fd2f5d95f58f63867d6ff2ff36505b8e,benyu,Tue Nov 15 06:47:04 2016 -0800,Use ForwardingWrapperTester to simplify a few more Forwarding*Test.
98f3b6ae48e3067f0b51e643d52fbb6b503365e8,e38225a3c2a2c611aefe00dd8a40f8eed97cc2f3,lowasser,Fri Nov 11 14:52:21 2016 -0800,Document and deprecate mutations on SetView, which already documents its unmodifiability, as suggested by cushon@.
cd00291bea68804ec55415ce845cafd983c7bdc3,6b1046fbe17c1e40f554df906973a57b28d72e42,benyu,Fri Nov 11 13:27:27 2016 -0800,Use ForwardingWrapperTester in Forwarding*MultimapTest.
cd9a472e2588ec53109be8a1927cd4cb2af0f0d6,503d6949e44f31c6cd9de77c8385947add8e20b9,lowasser,Fri Nov 11 08:50:30 2016 -0800,Add mutable Table collector to Tables, including a version with a merge function to match Collectors.toMap and ImmutableMap.toImmutableMap.
503d6949e44f31c6cd9de77c8385947add8e20b9,c2641e083e31fdbd9c09b33ca6a3546f5f69fe28,lowasser,Fri Nov 11 08:50:24 2016 -0800,Add a value-merging collector for ImmutableTable.
c2641e083e31fdbd9c09b33ca6a3546f5f69fe28,0c2cd39185c3dac8a3ae5f3c3289e77e1c2356ff,lowasser,Wed Nov 9 12:16:56 2016 -0800,Add mapWithIndex overloads mapping IntStream -> Stream, etc.
59bb189b0b06ddaf28c4df833879a645746ca210,709624fafd1540fc1d8144794fa86fb890f0d303,lowasser,Tue Nov 8 06:31:44 2016 -0800,Defer overlap checking in ImmutableRange{Set,Map}.Builder to the build() call, which matches the behavior in ImmutableMap.Builder and allows significantly faster handling of the case where ranges are inserted in predictable order.
700b11a874766945967f37501ed364ac07632ac5,aa06fbd86fd3d0447733202f6a4dc8b3f83ddfb4,cgdecker,Fri Nov 4 10:08:36 2016 -0700,Open source Comparators.
69f8837408af6a4e52c2f2baf0c5e6744e3b9b42,9a3b74501c70289a46fbc09f137990e21bb35423,lowasser,Fri Nov 4 06:41:21 2016 -0700,Add Multimaps.toMultimap(keyFunction, valueFunction, multimapSupplier) collector.
73e382fa877f80994817a136b0adcc4365ccd904,d4593835188550859a05537676d01944fa2eab01,cgdecker,Thu Nov 3 15:39:41 2016 -0400,Release Java 8 changes to Guava.
ef386251e5cc485fb72890fff67830340635e44b,c5231cfd14de78cd50099e095798fba6726cbe9e,nharmata,Tue Nov 1 10:18:54 2016 -0700,Introduce InternerBuilder, which allows tweaking of the concurrency level of the to-be-built Interner. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=137825551
5367a2d0687ec4c1901f693559cd4d2d14ca65d1,40cd7fcba0ab317f106c9a59114964a5a643f6aa,lowasser,Sat Oct 29 07:27:46 2016 -0700,Add ImmutableList.sortedCopyOf.
6b20d80ef7c21dcef3778d43ee54e7a7e9dec881,4cdc40b1b583b410ab7c89ebab9dc9c4ca5861e1,kevinb,Thu Oct 27 08:30:31 2016 -0700,Start on documenting Iterables to explain the connection to Streams.
4cdc40b1b583b410ab7c89ebab9dc9c4ca5861e1,e102fa4a86dad34f375e06c8ce0f52ea264588c3,lowasser,Thu Oct 27 08:30:29 2016 -0700,Shuffling from internal-only change.
e102fa4a86dad34f375e06c8ce0f52ea264588c3,790362755a65efab7c0133060e6f2bded4d6c9a9,dpb,Tue Oct 25 13:26:42 2016 -0700,Lint Javadoc for HTML and syntax, and fix errors. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=137191293
6a3ec685306baefba7e78c0b18cb43771b2ad34d,3637f153e2ed42670583ba07e8dac680f3917f90,kak,Mon Oct 24 13:35:45 2016 -0700,Move ForwardingBlockingDeque into c.g.c.u.c.
c91323f873e93f88d9f30b5e503f72a11e1f0486,9b4c062c1a588509d3948fef8170ee400d3b145b,jrtom,Mon Oct 24 10:40:11 2016 -0700,graphs_explained.md: file being added to facilitate reviewed changes to https://github.com/google/guava/wiki/GraphsExplained.
0915b414d10d0737ac8fbd4819462d8141a09c8d,dbf37a8b12159763f7721ea79644de9080d53e99,jmelcon,Tue Oct 11 07:58:55 2016 -0700,Allow MemoizingSupplier to release its delegate to the GC where possible.
dbf37a8b12159763f7721ea79644de9080d53e99,4f87e773ef3e99c83f224d7f94f961690e073b95,lowasser,Tue Oct 11 07:17:36 2016 -0700,Add new RangeSet methods accepting Iterable<Range<C>>.
fe8d349aa0dd8d57d65c2ab26ec42285f60ed879,536aeaa802fbfe1c53209bc6422976adf5b48ad8,cpovirk,Fri Oct 7 12:37:03 2016 -0700,Remove Iterator tester infrastructure, which has never had any real tests. (We do perform IteratorTester-based testing through CollectionIteratorTester and ListListIteratorTester.)
b0b302c0853f78df97ba9673082bca191c091fe7,3d7c23f11a8a4541daf7cdf3461af97364b054bc,kak,Fri Oct 7 09:27:42 2016 -0700,Delete constraints APIs.
3d7c23f11a8a4541daf7cdf3461af97364b054bc,48daa0a71422bf38fb08f9149df614d411a8192f,lowasser,Fri Oct 7 06:11:23 2016 -0700,Rewrite MutableClassToInstanceMap to avoid using ConstrainedMap. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=135408484
b60f02fc3553cf071fd9a4bf9c1e26b7d83c0467,69496f5940ae16ffafe7ab5102dc6fe04937490a,jasexton,Thu Sep 29 06:26:41 2016 -0700,Use an anonymous class for AbstractGraph.edges() This was changed recently ([] because of some planned changes we ended up going a different direction with, so now I think it makes more sense inlined.
c1b7bf5e39bd7483dc3925a14eb546a89a00ea1e,f3118bffc136c93f0d85ee929f7262e0b2d700e2,Andrei Korzhevskii,Tue Sep 20 09:37:26 2016 -0700,Use ArrayDeque and PriorityQueue under GWT (where they're newly available), and provide synchronizedQueue, synchronizedDeque, and MinMaxPriorityQueue there. This also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally.
6ded67ff124f1be4f318dbbeae136d0c995faf37,69fe97fdf4a0d8e3e4cdaa392e66e8dc2e08821b,jasexton,Fri Sep 16 08:43:21 2016 -0700,Small refactor of AbstractGraph.edges() (move to inner class instead of anonymous class).
2d9d38c335bc38adc7045c90283f8e4f90048b6e,881a0cc8322d3147ae1c11b8bdf3cc6baed04a77,kevinb,Thu Sep 15 10:11:02 2016 -0700,Create TreeTraverser.using().
881a0cc8322d3147ae1c11b8bdf3cc6baed04a77,7009118a0601ea3a2ff2629d10e47c3138078f55,kak,Thu Sep 15 08:57:12 2016 -0700,Delete MapConstraints.constrainedMultimap()
a6995adad802a7d21a8223916d8dcfd4209e5998,db98117f5615aa359d5f34deb39bd57884a91491,kak,Wed Sep 14 15:40:58 2016 -0700,Delete MapConstraints.constrainedSetMultimap() and constrainedSortedSetMultimap()
db98117f5615aa359d5f34deb39bd57884a91491,db5b3f59ba55b87685df20aa8b4dd35a820694cb,kak,Wed Sep 14 15:36:38 2016 -0700,Delete MapConstraints.constrainedBiMap()
6662777b4bbe4bb49f3d044281ea1929af38108d,8883cd544ef886ecd6c939363490c67d2d1958ce,lukes,Wed Sep 14 10:21:36 2016 -0700,Optimization of RegularImmutableMap.
c93a083e9d0c61170e3c0c9183d558d78322dcd4,850e58bc7e01ef3ec12e64f4198881b3b772a81a,kevinb,Tue Sep 13 14:28:41 2016 -0700,Improve docs on the FluentIterable-Stream connection (part 1).
9656d92aa0164845760762769db4b2e786443e0e,112e7eb1358ab4bcbaea7a61e195fba29b7e0d13,jasexton,Tue Sep 13 11:35:49 2016 -0700,Increase test coverage for Networks. Add clarifying statement in javadoc for inEdges() and outEdges(). Modify the sanityCheck method to also check that a set is equals() to its ImmutableSet copy (this will also make sure the set doesn't have duplicate elements).
41e03385ee37287845312b1d15c5d7bb378d660c,2d3386b9a3162c093ca22524711308a5c48b4299,jasexton,Wed Sep 7 08:09:01 2016 -0700,Run g4 fix on all the files in common.graph.
d7a8ec278d82466bef86eecffa03ac8e7c3ad557,fb8a4db811b0153555a69679069d7a28bad5ee62,jasexton,Sat Sep 3 05:27:32 2016 -0700,Refer to Network references as "network" instead of "graph". Note that we've already started doing this, but (as you can see) are fairly inconsistent with it.
0c350b5c61e48d1732ef1f5b1bd82bf92ca4caaa,ece87b099d211a4bc52f18cef24f3cce10fb52e9,tobiast,Fri Sep 2 14:16:19 2016 -0700,guava-testlib: Cover checked{,Sorted}{Map,Set}
38f5a373214a2246393f1274a1e71ee809d33526,c4d971943595a00693cd547b23fac1720957ec77,jasexton,Fri Sep 2 06:46:14 2016 -0700,Specify in the javadoc the behavior of Graphs.equivalent() when both parameters are null. Run g4 fix on the file.
c4d971943595a00693cd547b23fac1720957ec77,db8cac30f1441a9bef0a4ebc47c46bd97716c121,jasexton,Fri Sep 2 06:39:56 2016 -0700,Refactor test utility methods to match graph mutation signatures.
cfe05dfda3ba79aa1bd3acce6b4e766eb7b9bc00,91b0b20cdff4d5cd8ff07befbf1fb3e6b27a7286,jasexton,Thu Sep 1 07:30:43 2016 -0700,Changes to common.graph. Sorry for the churn, but after this things should be settled down for a while (and we'll be launching v20 soon!). Changes include:
91b0b20cdff4d5cd8ff07befbf1fb3e6b27a7286,212b62566935763aeb4d0dd9082b1238b4b6cb58,joshgiles,Thu Sep 1 06:50:53 2016 -0700,Fix the serialization of sparse immutable tables.
fd3c30f0efd09435c010f5fab52495554242ab52,cfd409b2d0b6ed0ee35589d8471a44689eddccc4,lukes,Thu Aug 25 12:07:39 2016 -0700,Make it more difficult to get StackOverflowErrors from hooking chains of futures together with setFuture
3208687a98d6decf4074389d6b2b40e667ac6dae,5ebbc983c70c3be177bcedaed991615f75fa14c5,cpovirk,Thu Aug 25 07:22:55 2016 -0700,Make nonCancellationPropagating available to GWT.
5ebbc983c70c3be177bcedaed991615f75fa14c5,760da0368b49188928c6efd7eb150d3df7fe96e4,moz,Thu Aug 25 07:10:48 2016 -0700,Automated g4 rollback of changelist 131198531.
760da0368b49188928c6efd7eb150d3df7fe96e4,6c63cf3c8a9d94821e2b24a96fb4c3564377051f,Andrei Korzhevskii,Wed Aug 24 12:03:49 2016 -0700,Use ArrayDeque and PriorityQueue under GWT (where they're newly available), and provide synchronizedQueue, synchronizedDeque, and MinMaxPriorityQueue there. This also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally.
c9914b84572ad3fdc572a016a0be4caaf785a00f,ccccbf25427fbc2141ff9b502c6cbe467ac2a967,ronshapiro,Mon Aug 22 13:23:12 2016 -0700,Return the underlying graph/network for multiple calls to Graphs.transpose()
ccccbf25427fbc2141ff9b502c6cbe467ac2a967,4d5f8e0242e94256edd2d59bfb002adb44c083a2,jasexton,Mon Aug 22 13:02:45 2016 -0700,Add Graphs.transpose() static utility methods for viewing the transpose of a graph. See: https://en.wikipedia.org/wiki/Transpose_graph
3a2804bad68215ea046ad679958a29b5cbced8b8,29398f1f2222ac019a57aba9a7bf5d07d03936a4,jasexton,Mon Aug 22 13:02:40 2016 -0700,Change allowsSelfLoops() to default to false for Graph/NetworkBuilder. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130840045
29398f1f2222ac019a57aba9a7bf5d07d03936a4,12ef690bfbb1b28576ffe9b6c54bd17a6ea68410,jasexton,Mon Aug 22 13:02:39 2016 -0700,Delete the unused Graphs.parallelEdges(). Promote Graphs.adjacentEdges (back) to interface method, with a default impl in AbstractNetwork.
d7a12d09fe0f4ee389a7a9bde75415a64fa249cd,7d350c1eba46ad4776ddcf839219e56d15db5541,jasexton,Mon Aug 22 13:02:38 2016 -0700,Add NetworkMutationTest (parallel to GraphMutationTest).
657c5a8fe1ba24d36835f0ae927051654faf3745,d0b8e4a1edf3497aef345e93a170c46f6cbc7036,jasexton,Mon Aug 22 08:50:26 2016 -0700,Some more cleanup of javadoc. Add specific language regarding undirected graphs since I feel the behavior there is non-obvious.
ed63eb90b1f2feba71d7d3cde8c4611b853add6b,e16c9e16b2e645d884944b721522aeb85e4c8bbf,jasexton,Thu Aug 18 13:46:59 2016 -0700,Completely overhaul top-level javadoc for common.graph interfaces in light of the new interface hierarchy. Spend a lot of time answering what I think will be the #1 question users have: should I use a Graph or a Network? Spend a lot less time defining graph theory terms, that's what wikipedia is for :) plus the method-level javadoc defines terms as necessary. Overall, make it a lot more concise. Javadoc that's too long for anyone to bother reading is just as good as javadoc that doesn't exist!
e16c9e16b2e645d884944b721522aeb85e4c8bbf,15dee03f00908a7d621ed93b358e376c4b2c96a2,jasexton,Thu Aug 18 11:19:57 2016 -0700,Update some javadoc in the graph builders, add sample code. Run g4 fix on the files.
15dee03f00908a7d621ed93b358e376c4b2c96a2,eb62df758064852a95a8095b4d3b2ff61a225cd4,jasexton,Thu Aug 18 11:15:58 2016 -0700,More test coverage for graphs! Test adding and removing nodes/edges repeatedly. Currently only for Graph, will add similar coverage for Network later.
eb62df758064852a95a8095b4d3b2ff61a225cd4,a29aed7dd8b3163f9156f1af6d003f004b677e8c,jasexton,Thu Aug 18 10:50:58 2016 -0700,Optimize directed graphs to consume less memory, at the cost of additional code complexity. Some very rough benchmarks also seem to indicate this has slightly faster runtime. I suspect this is due to improved cache performance/locality when using a single Map.
a29aed7dd8b3163f9156f1af6d003f004b677e8c,aad58839648feb938333a92330a99f9fa093a70b,jasexton,Thu Aug 18 10:47:45 2016 -0700,Add *degree() methods back to Graph/Network interfaces, with correct formal definition this time (self-loops count twice).
ed00daeb58e8ba143bb0cdfd4547c57985e2c862,9718ea57e02620a44683465358ca8705438b89ec,jasexton,Thu Aug 18 09:03:31 2016 -0700,Add more test coverage for Immutable graphs/networks.
22936fd61d4ea05644acec71317003812f3f907b,d0a31db68a8ef6ff2d2e53b694dc77308ce0d77e,jasexton,Thu Aug 18 07:31:57 2016 -0700,Rename SimpleEdgesConnecting to EdgesConnecting to be consistent with our naming pattern for NetworkConnections (*NetworkConnections and *MultiNetworkConnections).
41becc60f5e1d8b121846c890478d39e6ec42979,c3f9fef2e589d1555873349cce8c380f2c131653,jasexton,Wed Aug 17 12:19:25 2016 -0700,Rename ValueGraph to Graph.
ceee77fafdc9bdc5e2e6df85e231879c4ab6d755,151e30fc903a5b6ed2c62367fea9150e929d931d,jasexton,Wed Aug 17 10:20:24 2016 -0700,Rename "Graph" to "BasicGraph". Flip the inheritance hierarchy. Now, BasicGraph<N> extends ValueGraph<N, Presence>.
53f72d87a9b98498398fe3d4a583c08961e5a98f,6e62ae569837d8d2fc9d51c3ac6eddf0468f9143,jasexton,Tue Aug 16 07:46:26 2016 -0700,Delete the unused, @GoogleInternal copy* methods (in particular, copyNodes, copyEdges, and their Predicate-based counterparts). We're missing the ValueGraph version for all of these, and in the copyEdges case, also the Graph version. The Predicate-based methods have the obvious issue that we'd want to release with the Java-8 Predicate, not the Guava Predicate. copyNodes() and copyEdges() have the unfortunate issue of there not being an obvious correct answer for the whether the source or destination should come first in the parameters. And finally, copyEdges() requires us to decide what to do in the event that the destination graph doe not contain the incident nodes (and neither option is particularly intuitive). Overall, we'd rather not have to support these methods at this point.
6e62ae569837d8d2fc9d51c3ac6eddf0468f9143,2febb986da9ae9755dc0ead50c7890480ee87a97,jasexton,Mon Aug 15 15:16:52 2016 -0700,Define equality for Graphs so that a Graph never equals a ValueGraph. This allows ValueGraphs to have the expected behavior when you query valueGraphA.equals(valueGraphB) (i.e. values are taken into account as well).
2febb986da9ae9755dc0ead50c7890480ee87a97,0f0f616ef7962d97748e2b1bbbd539e96dcbc7b4,jasexton,Mon Aug 15 15:12:59 2016 -0700,Move GraphProperties.isCyclic() to Graphs, delete the GraphProperties class. Rename method to hasCycle(), because isCyclic() implies that it might be O(1). Also to be consistent if we ever add other "has" methods (e.g. hasSelfLoop(), hasTriangleSubgraph(), etc.).
0f0f616ef7962d97748e2b1bbbd539e96dcbc7b4,afdde25395a15a3f293ec9546eddcbfeb456093b,jasexton,Mon Aug 15 12:27:18 2016 -0700,Add the methods Graphs.reachableNodes() and Graphs.transitiveClosure(). Three teams have already implemented similar logic! Also, looking through the remaining uses of the legacy Digraph, the only thing preventing many from being converted to common.graph is the lack of transitive closure. So I'd say there's very high demand for this.
4b77bfafa9a59414a732e6f298f34b468e5e92a7,dc03be881cc6ff13ef5769c8b2eaa99e24cad4d8,jasexton,Mon Aug 15 10:14:24 2016 -0700,Delete TestGraphBuilder/TestNetworkBuilder. Remove the testing subpackage from common.graph.
57ec8ce480d75c69f90f72e4faaf13dda25a7f67,b476c9eda993dbca13b48880ae61680a4cb6c131,jasexton,Mon Aug 15 09:43:47 2016 -0700,ValueGraph implementation.
3a26a954c12ce3ba0540f93f7be62fc011304748,af1ce0bb68e01c1d04a0886e6f6bc3f537c57f43,jasexton,Mon Aug 15 09:35:58 2016 -0700,Update isCyclic() to work on both directed and undirected graphs. This is part of the effort to move it to Graphs (which I'll do in a followup CL), so we can delete the GraphProperties class!
572fec480544f11385dc8462d88621776fae2ec8,c82e55f354858a7abbf4516db54e13599e1612f4,kevinb,Fri Aug 12 07:37:35 2016 -0700,Update Ordering javadoc to explain the Java 8 situation. Now with branchiness.
c82e55f354858a7abbf4516db54e13599e1612f4,df95c9ee241355679bcda83803d551186b01d727,Andrei Korzhevskii,Thu Aug 11 11:38:06 2016 -0700,Use BitSet under GWT, as it's now available there. This lets us remove our manual emulation of BinaryTreeTraverser, and it moves us a step closer to allowing precomputed CharMatchers there (if we want to someday, which we might not due to memory concerns).
62c8259058f3349cee51b2dd392bfe11664d4e9a,e076a9d722a8eb6bdb3f4da5aee9306a0376821b,jasexton,Thu Aug 11 06:55:06 2016 -0700,Rename addEdgeV2() to addEdge().
80a312f5a6c565d9dfe1355d723222c7ad8f4d1f,5178ace93305d4c203ae866f7c3a442f952d8e99,jasexton,Wed Aug 10 08:22:23 2016 -0700,Some tweaks to the Endpoints class:
5562218b96f0b262deb5c0d2288c1bcc339dbbb2,b3b5b648499b186a5cdd0361339332f224b7b98a,joshgiles,Tue Aug 9 09:32:27 2016 -0700,Make ImmutableTable serializable.
739a6f681c622033709f69b7145b61e226b9a852,a3029230279a9d448bca6be6fd1ba14f941630ad,jasexton,Mon Aug 8 16:08:35 2016 -0700,Add the following method to the Graph interface:
7aa9178daece0553616f192dcd7a2fca771994c2,943bff9a21627e48cdd64f6d53cc8317aaafc76f,jasexton,Sat Aug 6 14:17:35 2016 -0700,Rename MutableGraph.addEdge(N, N) to MutableGraph.putEdge(N, N) (to indicate that Graphs do not support parallel edges and for consistency with the upcoming ValueGraph interface). Change the order of parameters in MutableNetwork.addEdge(E, N, N) to MutableNetwork.addEdge(N, N, E).
943bff9a21627e48cdd64f6d53cc8317aaafc76f,b501c7cec28c94d39c172c58fd7b5f506f019295,chrisn,Fri Aug 5 12:56:59 2016 -0700,Add a service provider for the regex library used by common.base (e.g. Splitter.onPattern). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=129471520
8f4ff6f348be4bf9ffd17e5a90d0f4b5f78aa9e2,62ab4d2820243c1fac6c232a1cf7b7dc455ca107,jasexton,Thu Aug 4 15:38:43 2016 -0700,Demote Network.adjacentEdges() from an interface to a utility method.
e2483714e1cf3cf2ff11c6954f228ed0dc0d8d7e,828103fee56ece0dc1a613a330c995e10e553bbf,jasexton,Thu Aug 4 10:36:09 2016 -0700,Preliminary ValueGraph interfaces.
71766941fdf7c29b88c9ae15e04c8532d603a642,f5b1c23b1604c4bdfb9902801e1fb61f17ac9ffa,jasexton,Wed Aug 3 07:11:29 2016 -0700,Remove the *degree() methods from the Graph/Network interfaces. In a followup CL, we'll add a (correct) implementation of degree() as a static utility method in Graphs. But I'd like to get the client-affecting changes (i.e. ones where the longer I wait the more merge conflicts I get) out ASAP.
3776f45d1054faaa5e368db33dc5ebcc38af0292,5803c43d7e79b969b12fb61ed423dbb07fddfc6c,jasexton,Mon Aug 1 18:45:01 2016 -0700,Flatten the Graph->Network hierarchy. In other words, it's no longer true that a Network IS A Graph. Instead, provide an asGraph() method that allows for viewing a Network as a Graph. Also, update a lot of code that should have been using Graph (instead of Network) to use Graph.
5803c43d7e79b969b12fb61ed423dbb07fddfc6c,c48fdcf1825a68426f205542c77aff30c49804d6,nharmata,Mon Aug 1 08:21:48 2016 -0700,Redesign of MapMakerInternalMap with the motivation of saving a lot of memory by not wastefully having stuff that's unneeded. The algorithm (the j.u.concurrent.ConcurrentHashMap-inspired segments of hash tables) is untouched.
4bfb25c13ad69f837c5171172517b9b109d6d5f6,b6381b286a8cd45f1b7533b4e76abe202e8a5c23,lowasser,Fri Jul 29 11:51:03 2016 -0700,Add guarantee of insertion-based order to HashBiMap. Preserve insertion order in GWT as well.
d6ef78ff26c28401c4bd8a61b75cfdf052b65696,453d9218face0014267fe39fc1e172c231b203a9,jasexton,Fri Jul 15 10:26:41 2016 -0700,Rename NodeConnections to NetworkConnections and NodeAdjacencies to GraphConnections. Have a base interface called "NodeConnections". This change is just cosmetic right now (although we do refer to these things as "connections" everywhere, so it's nice to actually have "NodeConnections" be the base interface), but it will make more sense in the context of ValueGraph (there will be a ValueGraphConnections).
a01998946b92508ab53b3fc8939744c1061dd135,9e54741abdccb0eb10cb1b3e3ccd98485e202db0,jasexton,Fri Jul 15 04:42:39 2016 -0700,Remove the public equal/hashCode/toString methods from Graphs. There are a variety of reasons for doing this:
501e3353f543e2cb3e0f147ec1329dbc7c7a6f3e,522debc80a9d3df903a018ea54f8aa419e82c44e,jasexton,Wed Jul 13 19:19:44 2016 -0700,Update edgesConnecting().size() and edgesConnecting().isEmpty() to be more efficient for Networks with parallel edges. In particular, take advantage of the cached successor multisets. Currently the methods are always O(D). This will also be O(D) if successors hasn't been invoked, but will be O(1) for future calls. For example, with something like:
6439299ec90bf6af70e7651ca4cc8a5a468edbd2,f64d1070bf6f8a5d6778f736ceb2f26254286918,jasexton,Mon Jul 11 19:01:29 2016 -0700,Remove the isDirected() method from Endpoints. Also remove Graphs.addEdge(), which was only used inside Graphs, and I wasn't a huge fan of (it's super easy to implement yourself if you need the functionality). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127142376
78272bb5fda64a50355e82634deb2076dfab3b11,c9839e4799abb13c2504f9cec7fae2743dbf441d,cpovirk,Mon Jul 11 15:28:22 2016 -0700,Split testFuzzyCompare(), which seems to be the main test to time out recently. This should reduce the flakiness to more tolerable levels. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127115918
c9839e4799abb13c2504f9cec7fae2743dbf441d,b610655ef7729fd5870d5a804e5fe48a119268bd,kak,Mon Jul 11 15:25:40 2016 -0700,Migrate from easymock to mockito in javatests/com/google/common/collect ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127112056
b610655ef7729fd5870d5a804e5fe48a119268bd,373d18a79d446b2770b7b16545c6599203088aae,kak,Mon Jul 11 15:18:46 2016 -0700,Migrate from easymock to mockito in javatests/com/google/common/hash ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127106598
1e17b2598bdc8b7257a01f4457230838262132d3,6ed0a709a546f1d2c3de6a56c032c2c5261926ae,kak,Fri Jul 8 20:36:56 2016 -0700,Migrate from easymock to mockito in javatests/com/google/common/cache ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126971307
6ed0a709a546f1d2c3de6a56c032c2c5261926ae,cf2ee16221e38a2e600975f448b71e21fb321275,jasexton,Fri Jul 8 20:25:44 2016 -0700,Update definitions of equals() and hashCode() for Graph/Network. The new hashCode() shouldn't change any behavior (of course) but should be more efficient for directed graphs. equals() does change behavior in certain corner cases (see [] but it was arguably broken before. To keep things simple, we now flat out say directed != undirected. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126965617
df95a87ee451be485889487bd481695e0df8c03e,7850a145998c2dd7c01f256d85f967bab0ca3294,kak,Fri Jul 8 12:13:04 2016 -0700,Delete MapMaker.makeComputingMap() and ComputingConcurrentHashMap. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126901506
6427916a307897e56796f37609506d1062d72163,8a2e1844e0b16cc476a5fc9bb5e4b78691610bba,jasexton,Fri Jul 8 12:07:51 2016 -0700,Add the method Graphs.endpoints() that does what you expect: returns the endpoints corresponding to each edge in a graph. The whole "we print every edge in an undirected graph's toString() twice, and that's a feature not a bug *wink*" annoyed me. Also there's other cases, such as copyOf() and and getWeaklyConnectedComponents(), where we don't want to process each edge twice. In those particular cases they happen to be no-ops, but for cases where it's not, or where you do something computationally expensive, doubling up on undirected edges is bad :( ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126884706
f1f4c88f47c7c2a260a0d9410392e233eaada068,f941b2d560f71d98c07c049d0a22cdf2f443f5b7,jasexton,Thu Jul 7 19:14:04 2016 -0700,Move oppositeNode() from Graphs to Endpoints and rename it otherNode(). Also make a few methods final. It changes the following code:
f941b2d560f71d98c07c049d0a22cdf2f443f5b7,d215851eaa46fe012abc4232a9a65544c52e3a9c,jasexton,Thu Jul 7 07:17:33 2016 -0700,An optimization for Graphs and Networks, inspired by Michael. Introduce "MapIteratorCache" and "MapRetrievalCache". MapIteratorCache is extremely light-weight and optimizes the follow case:
49c91f7d855d2334b1417e3b64767b2aed29a2bb,50b4633420711d95606d42e5a2f0abd862771d6d,jasexton,Tue Jun 28 06:05:26 2016 -0700,Makes copyNodes() and copyEdges() @GoogleInternal. kevinb mentioned earlier that he thinks those methods should be @GoogleInternal for now.
50b4633420711d95606d42e5a2f0abd862771d6d,e5a731c3b7507efadc2a61b7c1bf69b964a646c4,jasexton,Mon Jun 27 13:20:37 2016 -0700,Delete the common.graph.algorithms subpackage. Move the... unusual retainWithTransity() method into the same package as its only caller. Move inducedSubgraph() into Graphs (dropped the "get" prefix) and tried to apply some sense of ordering to the class. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125983079
ef3b720d2a51b973c567416e97e3a7514517f737,0ad7e8f68622fc13eb9bb4a881b9ae3ec63a8f47,jasexton,Mon Jun 27 09:12:17 2016 -0700,Move the static "constructor" methods in ElementOrder above the class methods (as done in e.g. Endpoints). Also, remove "final" from the static methods, since it's not standard practice to include on static methods (and the class itself is final). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125901101
a54c34542dc5c3c2bfa4d9f10a8bc9c565d3835b,3b64d9c34377736ece64aec0207f62b6e5bc376a,jasexton,Mon Jun 27 09:04:12 2016 -0700,Fix broken generic types in ElementOrder. Added two tests, neither of which compile with the existing code! ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125863282
29976218c6e986bc836706fa5e5fef737f10a2f0,2278f6654038473e7e9dc09e07686fe6913c78ce,cpovirk,Thu Jun 23 06:24:59 2016 -0700,Remove trailing whitespace. It's marginally complicated a couple Java 8 branch integrations for me. Also, add trailing newlines, and replace tabs with spaces. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125668183
ea4973c60724570d957f25bd827a8cadbba71ce6,25468d9a32c4723dd0d13087c0611960c6028dc5,gsim,Tue Jun 21 10:56:41 2016 -0700,Remove a retain cycle in FluentIterable. Even though "this.iterable = this" is a legitimate java code, it causes a memory leak when it is transpiled to objective-c via j2objc. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125467534
e246cf9a801497b64c54de03ca7331d767e8588f,1148cc947810a8cbad6177d15d9a05ee97d14ed9,jasexton,Tue Jun 21 06:57:07 2016 -0700,Improve the performance of addEdge(). This doesn't change the big O runtime (it's already O(1)), but it does eliminate several hash lookups :) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125397749
ef0b70ed311c37e0f9d64c5bd36895d4c02235df,f1871a75754a1f26d0f15722a6a0e5aaa03ec76e,jasexton,Fri Jun 17 15:46:22 2016 -0700,Mark methods in Graphs that take a Predicate as @GoogleInternal until we can migrate to JDK 8's Predicate. Rename the merge*From() methods to copy*(). Change the behavior of copyEdges from copying over all edges (and adding incident nodes as necessary) to only copying over edges where the incident nodes are already present (and thus not adding any additional nodes), as was discussed in API review. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125178123
f159e3fc4d9dec1beea0cc39cd887250e6ea36b5,7fbd99f23566e293a6b89db4639b91e31b6053b8,jasexton,Fri Jun 17 08:11:24 2016 -0700,Delete the existing Hypergraph interface. We're pretty much 100% sure this is not where we want it in the interface hierarchy, and leaving it there as a public interface isn't helping anyone.
7fbd99f23566e293a6b89db4639b91e31b6053b8,dfe6f1663fff4181d3e24828324b18beabe83a1f,jasexton,Fri Jun 17 08:05:30 2016 -0700,Change the return type of Network.incidentNodes() from Set<N> to Endpoints<N>. This also replaces the source() and target() methods on Network and moves them to Endpoints. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125092926
ce340b320b78e7c3c758ece0a56ae17dd8e09a09,c550125af4a0da6d2ba5a6dc6d44fa400824d9d4,jrtom,Wed Jun 8 16:48:43 2016 -0700,*Builder, graph classes: support element ordering using a new ElementOrder class.
681566ebd5f060433f9dfc5324d84b0454ce4fdb,e53a8154368689026b3216fe259be4129c89fcd5,benyu,Tue Jun 7 18:58:08 2016 -0700,Support owner type subtype relationship in TypeToken.isSubtypeOf() and TypeToken.getSubtype() ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124038295
7037b865b955e0bbe697e735ed62d644d3a6ff01,7086f2ee96caee74013128bfa80b9fcb21b6a01a,lowasser,Mon May 23 14:44:46 2016 -0700,Add a fallback in Ordering.leastOf to ensure the worst case of the quickselect component is bounded to O(k log k). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=123038053
7086f2ee96caee74013128bfa80b9fcb21b6a01a,b09e955cf24482736cd6559786cfc10120ab867c,jasexton,Mon May 23 06:58:14 2016 -0700,Make iterating through predecessors() and successors() more efficient on directed graphs. Avoids doing a hash lookup for every element in the table. A rough benchmark shows that iteration takes slightly less than half the previous time. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122853102
2268de5221f052673c7ec2e883f8f8c2afe001c2,c234ed7f015dc90d0380558e663f57c5c445a288,lowasser,Wed May 11 07:05:57 2016 -0700,Expose {Int,Long}Math.isPrime to external users. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121998832
18b794aba3d0bedcc0f65b41e66521db25f63323,695f19022688ac1a724aeffa7eddf0f8deb6f0fb,jasexton,Tue May 3 12:06:16 2016 -0700,Rename ConfigurableNetwork->ConfigurableMutableNetwork and ConfigurableGraph->ConfigurableMutableGraph. A followup CL will rename AbstractConfigurableNetwork->ConfigurableNetwork and AbstractConfigurableGraph->ConfigurableGraph (this is being done in two seperate CLs otherwise critique doesn't understand it's a rename). The above mentioned classes are not actually abstract, so calling them Abstract* is wrong. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121393585
027e336819e18d7ac9b0d65301c3eed9ceaf3264,d300191a42cbfa410c7f8c5c82ecb4383c01e119,kak,Mon Apr 25 12:58:32 2016 -0700,Delete GenericMapMaker parent class now that generic parameterization is no longer needed (caching APIs are gone). Delete unused NullEntry and AbstractReferenceEntry. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120734317
5ab9ab92200446e240934fb0b06d9cb497622f57,f206690a68af12667fea42eb6df515c98dedf575,kak,Mon Apr 25 09:58:41 2016 -0700,Delete MapMaker.softValues(). Delete unused NullConcurrentMap and NullComputingConcurrentMap implementations. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120709309
f206690a68af12667fea42eb6df515c98dedf575,2ee69f587c4285cbb80f40d0d81c517d4778878c,kak,Mon Apr 25 09:47:36 2016 -0700,Remove MapMaker.expireAfterWrite(), the expirationQueue, ticker related functionality, and all expirable/evictable related implementation details. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120703596
02dad9587b008a333a9985fe7e043c0c82618549,80dad6bf149f9b8d66e4db4436034cf6b7018398,jasexton,Wed Apr 20 10:34:57 2016 -0700,Clean up the impls of edges connecting in the no parallel edges allowed case. Slightly optimize contains() by avoiding constructing an interator. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120347747
80dad6bf149f9b8d66e4db4436034cf6b7018398,717146e3910cf4e5243defa3760c456c4dc16ecb,ashersb,Wed Apr 20 08:11:48 2016 -0700,Support reflection-less atomic updates in AggregateFutureState and InterruptibleTask as in AbstractFuture.
dd6b0e8b0f143d357784ddb4c16223a3ac125113,660634db9f0aca515d34931e6afa0f032b197918,jasexton,Wed Apr 20 07:18:00 2016 -0700,Make mutable directed graphs about 40% smaller. Another nifty benefit: directedGraph.adjacentNodes(node).size() is now O(1). Remove (unused) equals/hashcode impl from NodeAdjacencies.
660634db9f0aca515d34931e6afa0f032b197918,e6003692500352e1ba59eee5c93bc21acb3f46c0,jasexton,Wed Apr 20 07:17:55 2016 -0700,Reduce the memory usage of Networks by roughly 20%. Delete the IncidentNodes class. Remove (unused) equals/hashcode impl from NodeConnections. Additionally, removeEdge() is now O(1) in all cases (used to be O(D) for networks with parallel edges). edgesConnecting() is now O(1) for networks that don’t allow parallel edges (used to be O(D), even though a network without parallel edges cannot return > 1 edge for this method). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120272801
d02eda3dc4e1066f90b091d29f0323287cbd5b95,03e61eefd8bb423859d35809d50877f8af8874cb,cpovirk,Mon Apr 18 08:24:41 2016 -0700,"subType" -> "subtype" "superType" -> "supertype"
49e7d716f0f72d00c490864c3d11b815cfe93ec4,c2abe9fd5346ed443ace463d31b2673f0a1e3d97,Andrei Korzhevskii,Fri Apr 15 11:20:02 2016 -0700,Make some of Throwables available under GWT.
946ebccece2c45cce528cdc6d2db1aa31d2cfa73,2645626b6c724f1b9535e8bb49663c11e661a5a7,mboyington,Wed Apr 13 10:03:04 2016 -0700,Currently, SomeClass<?>.getSubType(SubClass<?, OtherT>) returns SubClass<?, OtherT>. However, if we do NotGeneric.getSubtype(SubClass<OtherT>), we get SubClass as a raw type instead of SubClass<OtherT>.
c1c5dae45283129c67eb7d5d2b5b90eff4c92c4c,693e95371e544e927a2f6c3f3ebcb9b3d6c2f525,jrtom,Mon Apr 11 08:05:46 2016 -0700,Graph.java: break out mutation- and edge-specific methods into subinterfaces: * Network.java: edge-specific methods (extends Graph) * MutableGraph.java: mutation methods for Graph (extends Graph) * MutableNetwork.java: mutation methods for Network (extends Network) Graph<N, E> becomes Graph<N>.
2bcf189a62275bb23fd92edf4dc72e9ad849a89e,2f3f7b1e766d4831c87cfc210c5ab46b12d289c9,cpovirk,Thu Apr 7 11:21:34 2016 -0700,Add throwIfUnchecked and throwIfInstanceOf. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119271623
2f3f7b1e766d4831c87cfc210c5ab46b12d289c9,2b4067d26e1533a878349434b73deb1282f8432d,kak,Thu Apr 7 08:42:01 2016 -0700,Delete MapMaker.expireAfterAccess(), including it's recencyQueue. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119225281
2b4067d26e1533a878349434b73deb1282f8432d,f753b087158d3b0f5bda8b5788ef2ab4f3d54581,kak,Thu Apr 7 08:42:01 2016 -0700,Delete MapMaker.maximumSize(), including it's evictionQueue. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119208974
0b556868431f6bc11c12e41ad18b7ea4b8b226f8,bcd212c9c7134555114ef6892cd61916f1f5ad71,kak,Wed Apr 6 09:13:09 2016 -0700,Remove MapMaker removal notification queue and removal listener support. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119165768
519be107c031c05b506d407a7b7cf5578a2764a0,5249b00e4df2097166a7536992a842a18e6880d5,cgdecker,Wed Mar 30 15:55:50 2016 -0400,Remove the use of static, shared buffers for skipping/discarding data.
5249b00e4df2097166a7536992a842a18e6880d5,45e1848250b10d88aadf726005612d1b2d328a1b,cgdecker,Wed Mar 30 15:45:48 2016 -0400,Add ByteSteams.exhaust(InputStream) and CharStreams.exhaust(Readable).
8992cc01ce05904e3e91da265df0b832cc925546,0657551ce26c5c1e2f43c3e191f05f238fdd2acf,kak,Tue Mar 29 05:09:19 2016 -0700,Re-run google-java-format on //java[tests]/com/google/common/ (up to escape) now that some formatting behavior has changed. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=118071047
0657551ce26c5c1e2f43c3e191f05f238fdd2acf,65e6bd2efb54b9f6a94de0771db698cea8d2a1ca,peteg,Tue Mar 29 04:56:13 2016 -0700,Changes to the LinearTransformation API: add inverse(), remove transformY(y), and rename transformX(x) to transform(x). Note that inverse().transform(y) is the new transformY(y).
94f1bf053ee27fa06b1f350646d57dab42d413df,72f1743e7c365f6d979625d55fdfda8c18ab127b,cgdecker,Tue Mar 22 13:07:07 2016 -0400,Deprecate all CharMatcher constants.
95953a50badf3b966ca35423e3146455aab9b107,2ce6c11ff71122bd9b55766f9116ee3b7bdb2d75,cpovirk,Tue Mar 22 07:09:02 2016 -0700,Make all AbstractFutures behave like TrustedFutures under GWT.
807760488eaaab1ced435ec07dab6be7e991fc47,76cc848bf7f739d05789d9d7b4f83b9c7bee6906,jasexton,Sat Mar 19 10:02:26 2016 -0700,Major refactoring of the com.google.common.graph APIs (including updates to client code): -Remove DirectedGraph and UndirectedGraph interfaces; a Graph's directedness can now be queried with graph.isDirected(). -Remove GraphConfig class; use the query methods directly on the Graph interface instead. -Add GraphBuilder; use this instead of Graphs.create[Un]Directed(GraphConfig) -Remove ImmutableGraph.Builder; ImmutableGraph construction is now done with ImmutableGraph.copyOf(Graph). -Rename multigraph() to allowsParallelEdges(boolean). -Rename noSelfLoops() to allowsSelfLoops(boolean).
660e86d7f4f6bdc165d923fb7851d11648ab88fe,99ec8ccc644bc13a85836251b0885af810465114,cpovirk,Wed Mar 16 14:58:25 2016 -0400,Restore documentation that Futures.catching is available under GWT but with some caveats.
ba2024d4e147cedc3fb442746872b46b11fef8a9,9a2c0e531ee7202ec0aeae35b7e4bacf6b8dc88e,cpovirk,Wed Mar 9 14:33:34 2016 -0500,Fixes, standardizations, and noise reduction in Futures tests.
3875a1b95070b2a8305814c8f009c20d1981529b,6daefa4c432de3b3c26010bae33bbbefc347db64,cpovirk,Thu Mar 3 15:45:55 2016 -0500,Add Futures.getDone().
f5855cd04305aefaf519b42a737a6651e84546d1,2d97fd8466f9bf00c7a90d1795b3ce0b891c030c,cpovirk,Wed Mar 2 10:54:51 2016 -0500,Add missing rejectionPropagatesToOutput tests. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116137704
2d97fd8466f9bf00c7a90d1795b3ce0b891c030c,2b384af7d7c63afa06cf684c24867757d7e54969,cpovirk,Wed Mar 2 09:15:46 2016 -0500,Never return a (Sorted|Navigable|Bi)(Map|Set) from the plain (Map|Set) overloads.
892e323fca32945cdfb25395ca6e346dd0fffa5b,b76c4183becbcfceb618dcecdfb46951209889da,lukes,Mon Feb 29 15:15:23 2016 -0500,Add overloads to Preconditions checkState,checkArgument and checkNotNull to avoid boxing and varargs for the most common parameter combinations.
fe11eeb686f44feae84b180f76c9304528d993e5,f6da31136af15dd324d56d253bc17c5b9afe9759,lowasser,Thu Feb 25 08:32:55 2016 -0500,Add {floor,ceiling}PowerOfTwo as discussed at API review. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115483556
0c063801f91f10891339ec9ce5127e26f9f00931,8613c4dbde2aaeb871dce3ea0e52811039ee203d,cpovirk,Tue Feb 23 17:12:58 2016 -0500,Fix 6-year-old test bug.
8613c4dbde2aaeb871dce3ea0e52811039ee203d,517267d764f32383fdac36fcd6eabad855dd2f93,cpovirk,Tue Feb 23 13:49:57 2016 -0500,Reformat parts of util.concurrent that I had mostly already reformatted. Now that I have some more automation, I've caught some more problems. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115358094
517267d764f32383fdac36fcd6eabad855dd2f93,8b970eb934595d903be555de6ac0d5a27722da21,cpovirk,Tue Feb 23 13:14:25 2016 -0500,Strip mentions of soft references from Guava. Reformat. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115352566
e719a651ba846fd77d9a132d69f4e79a0ddadccc,a2981bf2a683ccf67665a790de07055c06710d4f,cpovirk,Tue Feb 23 10:56:54 2016 -0500,More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115333807
55f03321aea35bf38d2aa7c766aab02b8204da71,ac083ab0599d9b3b4a59191b397e1da8fc39a99f,cpovirk,Mon Feb 22 13:29:17 2016 -0500,More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115240986
428f6f0cc751bc7c2f11b3ed5d4a2f9e3ec2cfb6,65663e795c406001f93d82c9bc69ef1d9031dc18,cpovirk,Fri Feb 19 16:00:50 2016 -0500,More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115089318
018ed188c7066fc16a5242759bb352ce2271549e,1aaf7ae4b4b2773664d2462a258de506f7e1de73,cpovirk,Fri Feb 19 15:56:50 2016 -0500,More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115088232
b9731bcb3345be0f9a184fae26c6747351365c90,2e3bb314df50a750c2298d3d0a13a30b95d49734,jasexton,Fri Feb 19 09:39:48 2016 -0500,Create an abstract base class for our graph implementations. Eliminate lots of redundant code! Also improves the (currently incorrectly documented) runtime of removeNode() in IncidenceSetUndirectedGraph on multigraphs from O(degree^2) to O(degree). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114995238
2e3bb314df50a750c2298d3d0a13a30b95d49734,a6c137ef10842ee31a0749a121fbd44af4350559,cpovirk,Thu Feb 18 15:59:56 2016 -0500,More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114992641
b47da45d0ef44dac5f7cc82c7f1b2dff68b2f7a9,a5cbbefac2ccc846dedfa0608125b85e92f20d75,cpovirk,Thu Feb 18 13:29:18 2016 -0500,More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114976442
f06590cea537116b82d2b24184c81729692425e6,6cca4e75672e214007598cb805e660e82259696a,cpovirk,Thu Feb 18 12:52:02 2016 -0500,More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114972304
6cca4e75672e214007598cb805e660e82259696a,728300cfd7c7303d78fd272ce53bb61d85e7a567,cpovirk,Thu Feb 18 12:48:03 2016 -0500,More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114963965
20078868d0e6b7739cc806319dcfe1534f82d74d,529027a088829cfa7985d65fa7e095b61e5cdb76,jasexton,Wed Feb 17 18:31:22 2016 -0500,Introduce AbstractGraph. This is a bare-bones base class that all Graph implementations should be able to extend (analogous to e.g. AbstractSet for Sets). It ensures there is consistent equals()/hashCode() across different Graph implementations. Additionally, this CL drops the requirement that two graphs have to have "the same type" to be equal. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114901380
529027a088829cfa7985d65fa7e095b61e5cdb76,955584656132fb7b8d76daafb73aac5cb404974c,cpovirk,Wed Feb 17 18:27:52 2016 -0500,Reformat FluentIterable, moving some "Stream equivalent" sections above @tags so that they appear properly. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114900720
024e56a668b8a1d2653655a5530ed9f4ed5bb166,9f94aa41d9abc300f049064160deedcb74c31ba2,cpovirk,Wed Feb 17 10:33:56 2016 -0500,google-java-format the rest of util.concurrent. I also rewrapped Javadoc and comments (mostly using the built-in Eclipse formatter). I made almost no hand changes. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114854530
9f94aa41d9abc300f049064160deedcb74c31ba2,c6e21a35f3113a7a952a9615a0e92dcf1dd4bfb3,cpovirk,Wed Feb 17 10:32:17 2016 -0500,More reformatting. I've restricted myself to files that are part of open-source Guava. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114854445
2d38cd44602886d7871861fea4acc1a22320387b,b14197ec461092de12ebb8657f247412a84a5ff2,cpovirk,Wed Feb 17 09:46:06 2016 -0500,google-java-format common.escape. I also rewrapped Javadoc and comments (mostly using the built-in Eclipse formatter). I made almost no hand changes. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114785034
683d4271104c48889011f92e0c8e7a9ba45c5033,a24fa94bd10240b17e205dc571f4126f9dfccfd3,cpovirk,Thu Feb 11 16:04:06 2016 -0500,Run more tests against MutableClassToInstanceMap by defining a type that implements 5 interfaces. Eliminate a suppression for MutableTypeToInstanceMapTest that is unnecessary because put() is unsupported, anyway. Do some assorted other cleanup. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114449200
f976f2b8cffcebb525dc2c8f06a99356578a4449,b1f52443f73317a68e79417cba536ef6f69ebd5f,jasexton,Wed Feb 10 14:33:32 2016 -0500,Simplify some code in directed graphs. In particular, make removing the incident edges when removing a node more intuitive. Note that removeNode() in undirected graphs currently is O(degree^2) (for multigraphs), but that will be alleviated once we have AbstractIncidenceSetGraph and it moves to this implementation. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114345530
8d8eebc9fe60c8c06b18f4d684813e537040f3b9,5f2e2d68051197dfdbec7c400dd7d97ce097f569,cpovirk,Mon Feb 8 13:24:05 2016 -0500,Release most of UninterruptiblesTest and UninterruptibleFutureTest to Guava. I've excluded the CountDownLatch tests, which are currently intertwined with some other Google-internal tests.
fb3b3245bb5f2393870438e8540d7d363f917b07,5a16769ee190e50e5c7429f159c8ca16a8c7fb0d,jasexton,Fri Feb 5 21:37:51 2016 -0500,Replace "DirectedIncidentNodes" and "UndirectedIncidentNodes" with a shared "IncidentNodes" class that implements Set. This avoids the call to .asImmutableSet() that the directed graphs were performing, and also makes it so that we are now very close to having an abstract base graph implementation that will almost entirely replace the 4 current implementations. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114000977
5a16769ee190e50e5c7429f159c8ca16a8c7fb0d,d3d542d7ea00afd5b0e2b99f2b8f16d62d65200c,jasexton,Fri Feb 5 21:35:55 2016 -0500,Move toString() implementation for graphs to Graphs.java. This is similar to how Graphs.equal() is implemented, and will allow Graph implementations to get toString() for "free". ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113999189
693c8d94861f627fd772c347b4644773167b3990,c58adc6f56ab8eee54f597d279a711f977474ae6,jasexton,Thu Feb 4 16:12:56 2016 -0500,Make Graphs.oppositeNode() slightly more efficient. It performs the same number of equals checks (1 in self-loop case, 2 otherwise) but without the additional call to contains() - while still providing the incidence check.
248ce9fde9013bb1562b1f1647abc6017c37811d,eed5980c2e584151af3c674b74945ba003968c03,jasexton,Thu Feb 4 10:42:24 2016 -0500,Remove "SetView" from all graph implementations. See [] for why it should be killed with fire. In particular, it made the returned Sets have O(N) (in both time and memory) size() and contains() methods, and in one case, O(N^2) iteration!
c0fe985c62855adaa3a89cae1ec797e1150af3b5,d9fafc8ac2a52ffc2343efbffd163005dff94d4c,jasexton,Wed Feb 3 12:09:15 2016 -0500,Add validation that checks that predecessors, successors, in edges, out edges, and all sorts of other relationships are in sync after every test. Add more test coverage for removing edges. This would have caught the breakage in [] ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113690611
2067e7725ee32d373a253d1fb24578751f3d712a,6575f8aa9c348c9a73dc1e327e4bafb116442b44,lukes,Tue Feb 2 14:13:52 2016 -0500,Automated g4 rollback of changelist 113559037.
6336404e539bb948caac14b4a00152409c3e7120,8b0ec570c69b969b47262eff5935ddc7a80ced50,jasexton,Tue Feb 2 08:59:30 2016 -0500,Automated g4 rollback of changelist 113583321.
8b0ec570c69b969b47262eff5935ddc7a80ced50,2e112b74caa773d6d57c3766a8086e9c59d39bce,jasexton,Mon Feb 1 20:53:42 2016 -0500,Remove "SetView" from all graph implementations. See [] for why it should be killed with fire. In particular, it made the returned Sets have O(N) (in both time and memory) size() and contains() methods, and in one case, O(N^2) iteration!
2e112b74caa773d6d57c3766a8086e9c59d39bce,4aa5ff256cd0d3e609d1b08485ed01a5c23ce69a,cpovirk,Mon Feb 1 16:58:35 2016 -0500,Document which exception is used by catching()/catchingAsync(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113563893
1ef638f369964c1d1f56bd0ae588535c6abd99a4,18c84380cb56e74d7e5c7209199624ac112f86e4,lukes,Mon Feb 1 16:29:07 2016 -0500,Add overloads to the Preconditions.check(NotNull|State|Argument) varargs methods to avoid varargs and boxing overhead in the case of 1-2 template parameters.
a66c6ebb733d54c28b71fdbaf295f5f0d799996b,026d168a41b35855a35b80f92aba440585f8e5a0,jasexton,Mon Feb 1 13:48:20 2016 -0500,Refactor the test classes from the previous hierarchy:
6e8370d443dc3f2da70ca0befda68cf8d687216b,4a68440ab9d8d60e13a48bd4441fbb36347efc58,lowasser,Fri Jan 29 14:22:40 2016 -0500,Some optimizations to AbstractIteratorTester based on profiling data on MapsCollectionTest. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113299505
f001be54c2e3676d39623942e96b97699d42467a,5b587abdfa0e513db8a11b7265ce8689d1edf277,cpovirk,Thu Jan 28 09:06:18 2016 -0500,Remove APIs to be deleted for Guava 20.0. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113254099
5b587abdfa0e513db8a11b7265ce8689d1edf277,52b5ee640da780e0fd2502ec995436fcdc93e03e,lowasser,Thu Jan 28 07:40:48 2016 -0500,Some minor improvements to FeatureUtil in the hope of speeding up c.g.c.collect tests. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113178622
52b5ee640da780e0fd2502ec995436fcdc93e03e,88e42e657a32f9aaf0fa705d40a164431133d342,cpovirk,Thu Jan 28 07:30:20 2016 -0500,Don't silently swallow Errors. https://github.com/google/guava/issues/2254 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113152082
cf39936b578f6b312c08540a4e9d0078e724f566,cf7c48bd97f354e0d9a4cd3d9b8fbe85add66184,kak,Mon Jan 25 10:47:11 2016 -0500,Move @CheckReturnValue to package-info.java so it applies to all of com.google.common.base. Annotate some methods with @CanIgnoreReturnValue. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112870719
9b845ef22fb91a6d842cf03c94b85f1bb5c9e00c,3ec45222114150ad45305d58daf80d916c99b16c,jasexton,Mon Jan 25 10:47:00 2016 -0500,Some updates to Graph javadoc. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112818614
f1f1d3d9bb0b989e87f6ff4a56972270d14b1d9c,4760f6ca0d68b3a374bf8754967c0cb50b54977d,dpb,Fri Jan 22 11:00:06 2016 -0500,Add FluentIterable.concat methods, and make Iterable.concat methods delegate to them. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112713876
4b6ffd496674b55a6893bbd705a7486d661b1b53,445c56885ce2616cf2b7690d8331964a3e099e85,jasexton,Thu Jan 21 14:42:38 2016 -0500,Improve performance of nested calls to Iterables.concat() and Iterators.concat() *without* using any additional memory. This CL brings the runtime from O(D^3) to O(D^2), where D is the nesting depth of concatenation.
c72972d162e161284f3516c69066752d6e19b791,6fef0b0dba5dfa40fe30cdd6fbcc9d3908801e23,kak,Thu Jan 21 10:16:32 2016 -0500,Add new MediaTypes. See https://github.com/google/guava/issues/2132 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112612873
3ddefd829e9fc0ed033613cd7d74427e6397c745,af89d96d586a8b4da1d864cc985ec58093b00ee5,jasexton,Fri Jan 15 17:15:37 2016 -0500,Reduce the memory consumption of undirected graphs by storing the incident nodes explicitly in an "UnirectedIncidentNodes" class, rather than in a Set. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112273670
b467432088344f2d805744c5bb175e167843e497,6f260ee8a40a6cc9a98fff1312d52d69dd1e3b9f,cpovirk,Thu Jan 7 14:43:30 2016 -0500,Stop ignoring http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6533203 in iterators now that the bug has been fixed in GWT for a while and the JDK for even longer. (This is like CL 57745078 but for a different bug.) Also, go a step further, and remove support entirely for ignoring both bugs.
1b0831c9f9229cd7049e24b2f62360b5e05bd78f,e5f4c665001e8801cce23aa2a5fb493b7219fc04,cpovirk,Wed Jan 6 11:11:26 2016 -0500,Use Collections.newSetFromMap directly. It is available in GWT as of 2.7.0. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111510442
15950e79dfe33c36051c58441d7fda9d74509677,dedde5b419970441726a6699a065e30bd496bf93,cpovirk,Mon Jan 4 12:19:17 2016 -0500,Convert all @GwtIncompatible.reason values to implementation comments. (redo of CL 110542459) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111321187
f4bbaf7cc919ac885c5b3df424313f5b568cec25,7d3af5b5b6a4427220581b5d69df68d6d00418b8,kmoon,Tue Dec 29 11:24:33 2015 -0500,Adds an addAll(Stats) method to add a Stats object to a StatsAccumulator, and corresponding methods for PairedStats and PairedStatsAccumulator.
5d4abb0e70b63105f08baf156999580d53d1ad40,89b3eb1405241540dda1313953127fb01d4fc98f,cpovirk,Mon Dec 21 16:32:13 2015 -0500,Release Futures.whenAllComplete and whenAllSucceed as @Beta. We may still develop these further by integrating allAsList/successfulAsList into them.
354a91a308566d10cb72535622fc6882890642b7,cd78ca12b249fb1c2ad0ec6aca324e7d733da4b7,cpovirk,Mon Dec 21 10:08:51 2015 -0500,Automated g4 rollback of changelist 110542459.
cd78ca12b249fb1c2ad0ec6aca324e7d733da4b7,71643094aca01d7386f8a84609aad7fa7632086e,cpovirk,Fri Dec 18 10:46:30 2015 -0500,Convert all @GwtIncompatible.reason values to implementation comments. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110542459
8ffc1e3d94e3ef9f87734ff10eed8837bc020098,d904bddd5194e3ebab7130a8394c1a4e93e9ebdc,kak,Thu Dec 17 17:00:01 2015 -0500,Remove @SuppressWarning for "CheckReturnValue" and "CanIgnoreReturnValue" in favor of unused variables. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110486602
bd899fd215b9b60db94f6b1156ebca175c0bb66e,888fba24b94fc0538a28d6f7ee667a043afc4356,lukes,Mon Dec 14 17:21:48 2015 -0500,Add saturated(Add|Subtract|Multiply|Pow) IntMath and LongMath ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110188732
1b7e2844d82c1114c208bb98ee851f1aade328cc,2fa06edd823eaa29cb6a5af3e98f296ec1ec0356,eranliberty,Mon Dec 14 10:50:07 2015 -0500,Adds to PairedStats toByteArray() and fromByteArray() to facilitate (faster) serialization. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110027472
2fa06edd823eaa29cb6a5af3e98f296ec1ec0356,621ce7fe1057d8b826093037c58b35bfa4fa6368,peteg,Fri Dec 11 15:26:12 2015 -0500,Prepare Stats et al and Quantiles for beta release in Guava 20.0. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110013555
621ce7fe1057d8b826093037c58b35bfa4fa6368,55573e6f04c4d1c1f131f9d7b88306264713e3f8,kak,Fri Dec 11 14:06:30 2015 -0500,Open source com.google.common.graph into Guava. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110008126
82810968135e9ac4c9120f44b0936d478492066e,3f825ffd9d4485afeb70bb73fa10daf2facf0893,cpovirk,Mon Dec 7 12:39:39 2015 -0500,Remove support for deprecated GWT Dev Mode (but continue to support Super Dev Mode).
c85eacce7d0358d0489d93ef60a4e7cd79aea080,a87b7038cdc5b59169943ad7af71317ad8454d4c,diamondm,Fri Dec 4 14:37:50 2015 -0500,Add subSet and subMap methods to Sets and Maps (respectively) which use Ranges to construct the views. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109360209
0a686a644ca5cefb9e7bf4a38b34bf4ede9e75aa,69a42c5e6fcdba03e1445a8eb9acad7177c6a714,Ben Manes,Mon Nov 30 17:14:11 2015 -0500,Ensure the correct removal notification is published.
8dc7b6fd4168a0d984262d1254cdfc2c350bae97,71e57ee88a921c820d44897c3e9f5593709f8cf8,maxscheiber,Thu Nov 19 10:40:18 2015 -0500,Adds documentation to various Sets and Maps factories to discourage their usage. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=108181363
eef1c0b22f32fd966f19b3c3f049a113b992fe4c,0ff281075eee2af8e87d14857911c89a681dfc20,lukes,Mon Nov 16 11:15:21 2015 -0500,Add a third AtomicHelper strategy to abstract future
e20bfcfa976182e4f435807ae0c58e7707fefa75,e809a66d3a851cc39bbde3774806ea99e15d7bab,gpike,Tue Nov 10 11:24:23 2015 -0500,Implement FarmHash's Fingerprint64 in Java. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107440675
d3d3c98dcf1cd356c5afe1e5345b1398d5d1835c,987230520c1871fd196df1d7a685813d3680b28f,cpovirk,Fri Nov 6 15:06:43 2015 -0800,Revise CL 103553690's scaretext, and propagate it to Cache.
acb83ead07974893aa37d5e30fe8c4e1bf814241,107078903eaf1898ad0986257e69444378c13bf1,chrisn,Wed Nov 4 13:36:28 2015 -0800,Implement CharSource.asByteSource(Charset).
8c412a725f91ccf05fc5231ce2cdae99141edc8e,bc913b7d0ab3b230943fb666b3d05be56aa7a6f6,benyu,Tue Oct 27 15:37:02 2015 -0400,Re-apply wildcard translation fix. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106415574
3197768314b6f9e0b7078d40176c8b9220415db5,42f98108422f92cb6620d6f22ff78d7ce491d76e,cpovirk,Mon Oct 26 16:35:26 2015 -0400,Rename SuppressUnderAndroid to "AndroidIncompatible," since we treat it just like GwtIncompatible: stripping, not @Suppress-style suppression. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106329942
d76cd8770c519d3341c91fb01aeb2b0e4026ab24,ff7e92eb82e83b3da3b01ece5a0150c7d2f11c3d,cgdecker,Mon Oct 26 12:25:49 2015 -0400,Automated g4 rollback of changelist 105235264.
44a2592b04490ad26d2bc874f9dbd4c1146cc5de,c071822d399b5c0e066790067d575c6a56740762,perceptron8,Fri Oct 23 12:52:39 2015 -0400,Fix RegularContiguousSet.intersection to handle singleton results.
63360f3f588a4a30d2d2e43ee6ec3f724d38b546,73da46a848acc327b956d6ef6263647fd6457d2d,cpovirk,Fri Oct 16 09:41:53 2015 -0400,For public Guava only, rely on the GWT compiler's built-in @GwtIncompatible stripping instead of our custom stripping. The custom stripping dates from the days before GWT 2.6.0 added it to the compiler: http://www.gwtproject.org/release-notes.html#Release_Notes_2_6_0_RC1 This change has been possible for a while, since Guava has required GWT 2.6.1 since Guava 18, but we hadn't had the motivation. Now we do: This lets us avoid checking the stripped sources into Github, which lets us avoid mixing stripped and handwritten sources, which lets us simplify our MOE inverse mappings. Internally, we will continue to rely on the custom stripper for now.
69a75be1f1f8b15a03fe8aaf985aceadc7a10f41,7eb6b3de60691344f52234184a44f22eb2eefde0,cpovirk,Thu Oct 15 11:12:34 2015 -0400,Reformat much of util.concurrent.
b5c5f028e0b5fe178fca45a71b9b1e16e0b403e5,728a990f9b455bbebcaaf1111c766101893135f6,cpovirk,Tue Oct 13 14:20:48 2015 -0400,Remove @GoogleInternal from GWT emulation of ForwardingSortedMultiset. ForwardingSortedMultiset itself has been GWT-compatible since CL 43412779. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105327321
bb5673f60ce9dcda1c228b0d0e2ce2485468f965,e3142eea5770e267524c280c8fbb23be130fac5a,lowasser,Mon Oct 12 15:43:33 2015 -0400,Attempt to address https://github.com/google/guava/issues/2131 by removing the if (count != 0) check. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105235264
43081bd66bd9a4881a91001abb7d62855de3e4cc,40c67d60770905d5dbb3a4966f492b95e9052886,cpovirk,Tue Sep 29 11:08:23 2015 -0400,Test rejectionPropagatingExecutor under GWT. This would have caught the bug since fixed in CL 104101156. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104199812
1667927759ca66835d3154c99d25fa4799e507d6,1269ba4833c8ed134444963069bb3b664c945fcf,cpovirk,Mon Sep 28 11:24:11 2015 -0400,Move many implementations out of Futures.java (https://github.com/google/guava/issues/2091). Mostly I've moved them to new classes, but I've also moved rejectionPropagatingExecutor to MoreExecutors (unmodified except for a new null check).
c115c594de2f63bc710260cfadbe44b3b0e6ba25,508681f2a02cee7865a9b7ef82d8d64dbdf8cd6a,lukes,Fri Sep 25 15:44:36 2015 -0400,Disable cancellation causes by default and make them enableable via a system property.
d3d57fb445d239f2045de1d65d0fc10fda6bed9f,54dc1b0b18f5f77e675101ddb48e9ddfb1f1666f,cpovirk,Fri Sep 25 14:46:33 2015 -0400,Test the current propagation of cancellation (but non-propagation of interruption) from the input Future to the transformed Future. Arguably we should test this for methods like catching+catchingAsync and perhaps others. Maybe we already do; these tests are kind of a mess: https://github.com/google/guava/issues/2091 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103769878
8238e01ac71a9ee16a64e581e96801d488d06fdd,37aa9ba6c22fa8285f137b34c309ef288374c35c,kak,Tue Sep 15 11:12:56 2015 -0700,Open source the HMAC hashing libraries (@since 20.0). Clone the underlying Mac instance (if possible) during newHasher() invocations. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103098597
3f1d2e422a12a29e5ac7425dc323c4b99470f0d2,e45dc70105840d3816a6a1f08c9b6365ab7d8aee,cgdecker,Thu Sep 3 17:00:38 2015 -0400,Allow slicing a ByteSource starting at an offset that is >= the source's total size.
1f2b8775c6b29a89261cef3ddf33523b043c9056,c94fe82560e55debf0778af2db287e091d01b419,cpovirk,Wed Aug 19 07:35:23 2015 -0700,Convert much of Guava to Truth by using Refaster.
703ef758b8621cfbab16814f01ddcc5324bdea33,1cabf8aac191b2628205e84b30ecafb1e88c2a3e,cpovirk,Fri Aug 7 09:04:35 2015 -0700,Fix an ancient bug in Iterators.cycle: Once we spawn a second iterator, we shouldn't remove from the first one. Android caught this bug (by returning true from hasNext() rather than by throwing ConcurrentModificationException as the new test does). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100115203
1cabf8aac191b2628205e84b30ecafb1e88c2a3e,9e56ef17c335319d21f1f2c454176c9d32687a59,kak,Fri Aug 7 08:53:56 2015 -0700,Make EvictingQueue GWT compatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100063347
8ff490732db7a71adcf561171b5444ddc61c8990,5cc546f8688ded5fe8c0ceb5d36a631f00b758c2,kevinb,Thu Aug 6 08:21:48 2015 -0700,Reformat with google-java-format (a few hand corrections necessary). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99979179
5cc546f8688ded5fe8c0ceb5d36a631f00b758c2,273f6961656c6c5512ea8be49a0086fb0f6a29e7,kevinb,Wed Aug 5 08:06:06 2015 -0700,Finish explaining the Stream equivalents. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99831803
273f6961656c6c5512ea8be49a0086fb0f6a29e7,0fa6eac941722326e776f000089d4065b66354ae,goktug,Tue Aug 4 05:45:09 2015 -0700,Eliminate our custom emulations of java.nio.charset.Charset and java.nio.charset.StandardCharsets. The classes will be including in GWT itself in the next release. To get our code to compile, we must change to build against a GWT snapshot. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99780060
0fa6eac941722326e776f000089d4065b66354ae,c5a469757a46757302030da1a00cedc22c6afa6a,kevinb,Mon Aug 3 18:35:27 2015 -0700,Update FluentIterable to explain its relationship with Stream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99760803
c5a469757a46757302030da1a00cedc22c6afa6a,d1bf05846f63faf0d63b375dfc88eca00e11ebbf,cpovirk,Mon Aug 3 15:34:26 2015 -0700,Suppress tests on Android. - BigInteger and BigDecimal appear to be buggy on Android (at least Gingerbread, where I'm testing now, since we claim to work with it). - Some c.g.c.math utilities appear to be failing there, presumably because of other Android bugs, but I suppose it's conceivable that there's something wrong with our code. Ideally we will investigate further at some point, perhaps after testing on newer versions of Android.
7a3389afb9f97fe846c69e46d106ac1dbf59f51d,dde3133a3b9b84e9349849af6ec5a62da67ec706,mboyington,Mon Aug 3 15:34:18 2015 -0700,Fix for TypeToken[Map<?, String>].getSubtype(ClassToInstanceMap.class)
6221f96f36240f5b0296ec2910306ac326af3590,d394ad4710a658c1ccf8bace32ff94f2bd10517a,kstanger,Mon Aug 3 15:34:17 2015 -0700,Fixes J2ObjC reference cycles in c.g.c.util.concurrent. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99482445
755b2a8a851a15e7d9fbe32fc8d99e7670717631,05daed8a64abd271faf51962cf505d5ce60b1001,cpovirk,Tue Jul 28 09:09:25 2015 -0400,Use Ascii.truncate() now that our copy of Guava contains it. Actually, I think we could have done this back in CL 97895305, if not earlier.
05daed8a64abd271faf51962cf505d5ce60b1001,1cb299387932d97e38eef63f52e5b20dd6943ab6,cihatbas,Tue Jul 28 09:04:26 2015 -0400,Optimize the GWT TimeUnit library in terms of performance.
31fc19200207ccadc45328037d8a2a62b617c029,26342f6fe1f8b629a2ce1bdb3ef872f84a7e960a,bul,Fri Jul 24 13:38:43 2015 -0400,Introduce tryParse function to Longs which accepts radix parameter. This makes it consistent to Ints which support this function as well. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=98915993
f1ffbe598cec1c91a87926fb05df4b3176c3232c,43804c29191423a33e5cf24a36ae7920a64ddad6,cpovirk,Fri Jul 10 11:09:24 2015 -0400,Eagerly check for an appropriate exceptionClass constructor during calls to Futures.getChecked. This way, callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails.
43804c29191423a33e5cf24a36ae7920a64ddad6,cbe012e7d5c8315a4418b3ea2be1e288a07a8ee9,Chris Povirk,Fri Jul 10 11:08:56 2015 -0400,Stop stripping lowasser's username. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97814212
62c3f0a82c32cda85df28f77d08fc7967e52aa6f,15284f71149325e6f389512cf5ba946031ea835f,cpovirk,Wed Jul 8 16:02:55 2015 -0400,Automated g4 rollback of changelist 97776570.
15284f71149325e6f389512cf5ba946031ea835f,4fbb165ebf208d75100d5d47f56750d247f7d181,cpovirk,Wed Jul 8 15:37:19 2015 -0400,Eagerly check for an appropriate exceptionClass constructor during calls to Futures.getChecked. This way, callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails.
4fbb165ebf208d75100d5d47f56750d247f7d181,ee50c94031ae9449d52802d03241791cc2964194,cgdecker,Wed Jul 8 15:29:44 2015 -0400,Add static factory methods to CharMatcher equivalent to the existing constants.
01aa613e2132bc3bfcce03c6b2b4d5c3596713f2,5bab9e837cf273250aa26702204f139fdcfd9e7a,kevinb,Mon Jul 6 12:19:34 2015 -0400,Explain the relationship with java.util.Optional, in some detail. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97336621
5bab9e837cf273250aa26702204f139fdcfd9e7a,ee2abfb80839ce9d58ad3253c443e3473a8eda17,Chris Povirk,Mon Jul 6 12:19:34 2015 -0400,Use key insertion order in HashBiMap.
e9a23fe5ef043723c428a47ca96049306fcf813d,d3ee94d93f08ff7cde4c3bbc1ee10fd0feaf73c3,cgdecker,Tue Jun 23 00:28:13 2015 -0400,Remove usage of Truth from Guava Testlib.
8d6b948d4608bd16b777425ca4928cabcaf1aef4,3afb7b79ab5fcfecd85dc8f558ad8a1c579b3cbd,martinrb,Mon Jun 22 12:47:44 2015 -0400,Minor readability and coverage improvements to Utf8Test: - static import of Character constants - more thorough testing of invalid strings ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96321934
05e283065ac6a51f16a432d87be869c5d21db8cc,0b22e5b3662340e30afdd0b6ef33bfff356c6fb3,cpovirk,Mon Jun 15 12:13:42 2015 -0400,Scaretext for everyone! Followup to CL 95568320 and CL 95480161.
a7e9bf049e6036cec29542befd4ee2495ccd7abb,67862aee98a823bc8ce926e4599b1eb83fc695b1,cpovirk,Mon Jun 15 11:53:55 2015 -0400,Change the order of timeoutFuture.setException() and delegate.cancel(), which no one seems to depend on anymore. This allows us to rely on done() for almost all cleanup. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95839519
76b76a8491d7e1cfe1f69ee00c796d907be3e8ef,d210c7af763d7045fa35034cab3b4151ae93686e,cgdecker,Thu Jun 11 12:15:42 2015 -0400,Re-add create() methods with an int expectedInsertions parameter.
e1ec3b363fb27208053fd9b6a8c079631e9af19c,578a7944a7611b7433c05d5674fe390171004798,cpovirk,Thu Jun 11 12:01:18 2015 -0400,Move cancellation propagation from cancel() to done().
d871deaba5b832cd60784595035cf3a305a63635,736f404aed944516aba96812ae0eab6781bf869a,kevinb,Tue Jun 9 23:30:38 2015 -0400,Try to teach users how to understand complex chained Ordering statements.
736f404aed944516aba96812ae0eab6781bf869a,fe9c2ab0865e85793eceba59dd6c9dc6638bf50a,kevinb,Tue Jun 9 23:28:56 2015 -0400,Random collect javadoc improvements, including replicating the pseudo-deprecation information found on Lists.newArrayList for Sets.newHashSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95474959
3df4c67da61c5fdda14db0e9789ac18a32fb3f31,23ce3eb540003adf1095c550aefbcd02bb1f8c98,emcmanus,Mon Jun 8 15:01:06 2015 -0400,Remove the test code from TypesTest that tries to ensure that Types.newTypeVariable functions correctly in the presence of a SecurityManager.
b1bec6df36b82498ce1dc9c91dd5567d074a7808,93f2646608858620706b8293dda8236bb4346ca9,lukes,Tue Jun 2 13:10:41 2015 -0400,Some enhancements for Futures.transform and Futures.catching  * extract a template method and 2 subclasses from CatchingFuture and ChainingListenableFuture.  This will allow us to eliminate asAsyncFunction() and 2 allocations per transform  * make CatchingFuture implement Runnable and save a Runnable allocation  * have CatchingFuture/ChainingListenableFuture clear all their fields on cancel, which should prevent pinning the transformers  * have rejectionPropagatingRunnable short circuit for directExecutor() which should save 2 allocations for users who prefer to pass directExecutor() explicitly  * have Futures.catching use the rejected execution exception logic when it makes sense
924be3363a15007dd3888ad85e878591412e4a68,1027abc546e85d679cb273f9a59b96b98277f883,lowasser,Mon Jun 1 13:33:58 2015 -0400,Add testers for ConcurrentMap.replace(K, V, V). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94784595
1027abc546e85d679cb273f9a59b96b98277f883,b9fdc929c6f19d8a4592643a637d9fd24e6976eb,lowasser,Mon Jun 1 13:33:58 2015 -0400,Fix a bug where NavigableMapTestSuiteBuilder was not using NavigableMapTestSuiteBuilder on the descending map tests, due to an oversight discussed in [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94779653
b9fdc929c6f19d8a4592643a637d9fd24e6976eb,0773e1f33527e782da18b73e33dd9aed54a08c8d,lowasser,Mon Jun 1 13:33:58 2015 -0400,Use ConcurrentMapTestSuiteBuilder to test CacheBuilder and its flavors ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94773095
0773e1f33527e782da18b73e33dd9aed54a08c8d,5a9636bff2add7ddc39d2a6cd995d8ac00bd8b38,lowasser,Mon Jun 1 13:33:58 2015 -0400,Add a tester for ConcurrentMap.replace(K, V). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94772513
27e74e7aae5afc816887e29c77e05757bf3fe315,7da6133e7d4b5c7691e7031f412f3b1d557630fd,lowasser,Mon Jun 1 13:33:58 2015 -0400,Add a tester for ConcurrentMap.remove(key, value). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94711404
7da6133e7d4b5c7691e7031f412f3b1d557630fd,cc65b4f51f110c01cf5a10c2966bac767b270327,lowasser,Mon Jun 1 13:33:58 2015 -0400,Start ConcurrentMapTestSuiteBuilder, adding a tester for putIfAbsent.
fd29d0ef46498aae20a9b98c2e598168ff63bb99,df63c1841305fac43b6b4990df4a81de2ee66d6b,kevinb,Mon Jun 1 13:33:57 2015 -0400,Reformat collect.[A-I]* with google-java-format. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94617505
df63c1841305fac43b6b4990df4a81de2ee66d6b,df2054b1bd40a1382a86c9796086c619045a4948,kak,Mon Jun 1 13:33:57 2015 -0400,google-java-format com.google.common.hash ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94607659
40e74b7943eaf871ab3781661e155ecbf9a41527,aa63148561009f5f4b4a07ea4174f3e8b09450bd,kevinb,Mon Jun 1 13:33:52 2015 -0400,Reformat common.primitives with google-java-format. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94602682
aa63148561009f5f4b4a07ea4174f3e8b09450bd,1ad071f27ee0b96d5ca9e45bad7ae973e3a19e76,kevinb,Mon Jun 1 13:33:52 2015 -0400,Reformat common.base with google-java-format, to 100 columns. A few changes by hand as discussed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94602205
516a02f67b37e7ef2045faaa35124f104f844825,b52c926ad08f04f2d5c95e313cffaac6a9c28d9c,cpovirk,Tue May 26 16:35:10 2015 -0400,Enable tests that are newly runnable under GWT:
e72e09f8516936c000f25118b0dead2adc8e3930,590036122e482c28affda893efd5e0e2e01732ee,chrisn,Wed May 20 13:51:02 2015 -0400,Add size-related methods to Byte/CharSource:
9f5e84957ebe770949265c3eadd9ef355edc0e95,e15b12c85581128298a9e499d8b0655aa9b2a257,chrisn,Tue May 12 12:04:58 2015 -0400,Add specialized slice support to ByteArrayByteSource. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=93334857
8da635118880351587de56de99f3988e1d466f2a,88853aca64ea245be0b4bc325b67754b5ea040ac,kak,Tue May 12 12:04:31 2015 -0400,Don't rely on MessageDigest.isEqual() for constant-time evaluation in HashCode.
8ac7104b2383f40ccccaa18298022f130a72c113,9e23ac36e8fe0f54d399d54b67b3c484c46eccb1,sdh,Mon May 11 16:32:31 2015 -0400,Add RangeSet.asDescendingSetOfRanges() and RangeMap.asDescendingMapOfRanges(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=92378397
ba240ccb80fe88e1ee6793800622ec3dca53a575,d4ecd71653f4c2c466960d4ba56aa547f5fdfdf5,lukes,Fri Apr 24 15:39:32 2015 -0400,Add Maps.newLinkedHashMapWithExpectedSize
45d5463b53e9e327cf1f86ea954853f781773677,c33a718d699ee03efbd40d12ecac844ae97643c3,benyu,Thu Apr 16 17:21:03 2015 -0400,Refactored Scanner.onJarEntry() and onResourceFile() to scanJarFile() and scanDirectory().
a904e91af4eea83b91f7bf3acff90b14927eced7,7fa5082e6b920d243cb9d273b97de7e8dd3bb1d4,benyu,Tue Apr 14 16:29:47 2015 -0400,Fix ClassPath by exposing Scanner for internal clients to customize.
07a06bccf9cac98feafc6c279840e866c6bb9ba8,bd929fa5dc6066aa6576fb4591189b913a749b7c,lowasser,Tue Apr 14 16:28:27 2015 -0400,Add RandomAccess implementations for Lists.{equals,indexOf,lastIndexOf}Impl, to eliminate allocation of the iterator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90193421
5797777fc85b0ae703f8e1fa15a0512952dca938,ffd15fd686ce71ac32a347e1d97aa5d7e19bf67a,lowasser,Tue Apr 14 16:28:08 2015 -0400,Fold RegularImmutableSortedMap into ImmutableSortedMap, since that is now the only implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89888434
ffd15fd686ce71ac32a347e1d97aa5d7e19bf67a,3823dde77be1ce60b962c0d49f036683c7421c84,lowasser,Tue Apr 14 16:28:06 2015 -0400,Fold EmptyImmutableSortedMultiset into RegularImmutableSortedMultiset. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89740927
3823dde77be1ce60b962c0d49f036683c7421c84,0dc5ba45824130e7c09beeeb450cc3d430382c19,lowasser,Tue Apr 14 16:27:58 2015 -0400,Fold EmptyImmutableSortedMap into RegularImmutableSortedMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89737176
e7e0abefddbb35c60ef73e96df197db90c707db2,77b134cd1dbf2ceface9956f9598e786c5c5f5b7,lowasser,Tue Apr 14 16:27:12 2015 -0400,Eliminate EmptyImmutableSortedSet, while we're at it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89712042
b1cfcc56043bb78c947fc08628d71981acada3a7,cdcd91f198719d87c71d4079494acdf7ca321133,lowasser,Tue Apr 14 16:25:55 2015 -0400,Delete EmptyImmutableBiMap, instead using a RegularImmutableBiMap with null hash tables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89629248
cdcd91f198719d87c71d4079494acdf7ca321133,402ab069ddf128db18588ed2617cdb618900bd2f,lowasser,Tue Apr 14 16:25:44 2015 -0400,Eliminate EmptyImmutableSet, replacing it with a RegularImmutableSet with a null hash table.
d8e73b37d62f2dabb9731adbe929c54d28246fb0,ab56ef398baea2b4da007ba1de62b32245d70c00,cpovirk,Tue Apr 14 16:25:15 2015 -0400,Remove the version of getChecked() with the old parameter ordering. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89606673
51148d02e4a61d5f99c716f365a039f4b884366b,4f60b48ec264366c86ec91d3219638266a7d2d40,kevinb,Tue Apr 14 16:24:40 2015 -0400,Round 3 of the immutable collections classdocs rewrite. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89434768
4f60b48ec264366c86ec91d3219638266a7d2d40,9131ddb3bd2ff2f3ad08dd06f59d0597d33b8bdf,cpovirk,Tue Apr 14 16:24:23 2015 -0400,Add a new overload of getChecked() with a different parameter order.
7af428ed5883d5237849d44a76d8ec0f41c10080,8d6c68415db141d7e44e7132f0ed39c571d47468,lowasser,Mon Mar 23 16:12:10 2015 -0400,Simplify the ImmutableMapEntry shared code by making the base ImmutableMapEntry class terminal and sharing the subclasses for non-terminal nodes in the hash table. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89319446
c1e0e671a775886c16ddfab543711f002460b538,56456cb58c0cb71d7c0f05047e13718ad202b748,lowasser,Mon Mar 23 14:20:32 2015 -0400,Eliminate boxing in RegularImmutableMultiset by inlining the hash table implementation.
56456cb58c0cb71d7c0f05047e13718ad202b748,b3855ef79650e282563561368577253d7abcc385,kevinb,Mon Mar 23 13:58:01 2015 -0400,Round 2 in the great ImmutableCollection javadoc rewrite. Try to make it a little tighter, and widen the circle to a few more classes.
b3855ef79650e282563561368577253d7abcc385,ca402cd09435eec98bf662eac1a74dad6376f36a,kevinb,Mon Mar 23 13:55:07 2015 -0400,When a new entry exceeds the segment's maxWeight all by itself, don't bother evicting anything else, only the new one. Still go through all the motions of actually adding and evicting it; otherwise I fear the code complexity will skyrocket.
02c3c8719a8f6f200447c7dcf31398d92738df32,94ded7f70ebcb9014480326f24df552c48bd327a,cpovirk,Fri Mar 20 17:39:02 2015 -0400,Migrate calls of to-be-deprecated Futures.get to equivalent Futures.getChecked. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88435725
94ded7f70ebcb9014480326f24df552c48bd327a,0f8d0d846684d73f5fd9928afe946355c45b4f18,cpovirk,Fri Mar 20 17:38:56 2015 -0400,Add Futures.getChecked, the new name of Futures.get. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88397579
2fe1415c5c2a1ee771a1616cc5d30d12e656026c,1628be3168a63d2cab94f8122bfe04c0024961d2,yetanothernerd,Fri Mar 20 17:32:06 2015 -0400,Optimize BaseEncoding by removing GwtWorkarounds and using an implementation without streams ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88332628
1628be3168a63d2cab94f8122bfe04c0024961d2,a7acd431fa71b18a09310216c47cef48533fe109,cpovirk,Fri Mar 20 17:32:06 2015 -0400,Add tests for current transformAsync/catchingAsync interruption behavior, namely "It doesn't do anything." ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88255363
a7acd431fa71b18a09310216c47cef48533fe109,aaac377a8f326df3589ebefad48ab0ae6b223b2c,mboyington,Fri Mar 20 17:30:48 2015 -0400,Refactorings in util.concurrent so more code can be shared. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88247030
4a0e33df4e09b8e0a21c5a08e6ec83239c3db803,f3099c7e01df0f240615eea996ec0c973a47aa11,cgdecker,Mon Mar 16 14:42:43 2015 -0400,Re-enable compilation of benchmarks in Guava now that caliper 1.0-beta-2 is out.
1a5b0b9caaa5b6aaef77c9e7ace4f8cac4025738,99a1407216220f3f0e14813bc1677f97ad12c60e,lukes,Mon Mar 2 17:44:30 2015 -0500,Fix a signaling bug in newDirectExecutorService()  Also switch to implicit monitors to take advantage of biased locking.
812621b76b50dca9cbcea061df0d7c2abca039d6,1a1589cb0069d6476977d8f09af6fa076dc5a9bb,kak,Thu Feb 26 16:17:49 2015 -0500,Expose Hashing.concatenating() in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87106619
d42e32781bc40bcc6df53d5d5d2120b91d8782a2,58994f12df2f3a11c1ca10a2a81553627df361e4,kevinb,Thu Feb 26 16:16:15 2015 -0500,Rewrite javadocs for immutable collections. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86995462
c9dbd3f6b754d10d1ea7ffffec829373e3328277,1f6f5a3a56078740bf31066650da711b9247ff3f,cpovirk,Mon Feb 23 14:20:36 2015 -0500,Remove ClassPathTest tests from Guava for the moment. They're failing there. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86968210
0fd4c5832699b3fb43bfe280794e02d29ba51ea2,20b7c04a528bcb8ac46752204eed5890d9d2c01f,lukes,Mon Feb 23 09:50:27 2015 -0500,Collect all resource URLs in the ResourceInfo objects.
20b7c04a528bcb8ac46752204eed5890d9d2c01f,ac4dddb89b7557e20f17c9464f3adf439373ac0d,clm,Mon Feb 23 08:58:45 2015 -0500,Make Files use transferTo, which can copy files without bringing the bytes into userspace. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86744917
4b6523ea39b8e476471e98a132335623a63e59f6,b547d033e5c3e8958242c8d01de491ceac19c126,yetanothernerd,Thu Feb 19 11:22:15 2015 -0500,Rollback of BaseEncoding change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86442772
b547d033e5c3e8958242c8d01de491ceac19c126,bba5c312ac4011e5fd2184768ee086596ba81486,yetanothernerd,Wed Feb 18 17:51:28 2015 -0500,Optimize BaseEncoding's encode method by using an implementation without streams ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86425194
bba5c312ac4011e5fd2184768ee086596ba81486,db73f380913db5e09bfc148e7fc31247985c6d85,lowasser,Wed Feb 18 17:35:10 2015 -0500,Optimize LongMath.isPrime. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86298499
a8ed2f87e111ef6781b816d683c7e51946295805,2a18d13799f5de8bd39c25a5f51de859ef979e76,lukes,Thu Feb 12 16:20:41 2015 -0500,Add newCancellationCause() again. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86206373
2a18d13799f5de8bd39c25a5f51de859ef979e76,6500bd897f3d93da90a5d813ffabed4d5ff5f361,cpovirk,Thu Feb 12 16:02:08 2015 -0500,Add Futures.transformAsync() to replace the AsyncFunction overloads of transform(). This will make the methods work better with Java 8 lambdas. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86188098
3e47a32fe38b0e36f6c3a614a146916914c922e9,5a7ce45092fdcc00f7a5ba9eaaf7431e6c8d25b9,cpovirk,Thu Feb 12 16:02:03 2015 -0500,Add Futures.catching{,Async} to replace Futures.withFallback. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86180055
8f743f950cf4eaaa4ac4dfff65a93c14da9f25d2,e176380df8b0bd2d3b921858aa8a5a960d6ea15a,cpovirk,Wed Feb 11 17:28:57 2015 -0500,Avoid generating calls to GWT-incompatible setUp or tearDown methods.
e176380df8b0bd2d3b921858aa8a5a960d6ea15a,b167ae5ebb5aa7bedc7ca3dccaf9c6cf14895a84,peteg,Wed Feb 11 17:02:42 2015 -0500,Inline the implementation of DoubleMath.mean rather than using a helper class. This is called inside loops often enough that I think it's worth avoiding the object assignment. Also improve the javadoc.
b167ae5ebb5aa7bedc7ca3dccaf9c6cf14895a84,c95402345ac633cacb9fb2615aa6914eb92688d5,aravinds,Wed Feb 11 17:02:26 2015 -0500,Roll back addition of newCancellationCause. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86068136
54d04a7fc97bfd8e43f62d13d25248385cf586a3,94a8062b93d60f4fb08714403761c4323c85a18a,lukes,Wed Feb 11 17:02:11 2015 -0500,Add newCancellationCause. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86054805
bcd8abb54113d4ebd3f245d18da8af99ba67098f,5bd76be2e74fde183e6c43788bf5d8f5e572ada2,lukes,Mon Feb 9 12:46:15 2015 -0500,Re-remove Google-internal getAllEntries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85767223
5bd76be2e74fde183e6c43788bf5d8f5e572ada2,8e34d36efa806ec7978a4d4f9c9b15463303c900,lukes,Mon Feb 9 12:46:15 2015 -0500,Re-add Google-internal getAllEntries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85742568
8e34d36efa806ec7978a4d4f9c9b15463303c900,2e2f86ffa67242e99fb0074a49e69f461b63b179,gridman,Mon Feb 9 12:46:15 2015 -0500,GWTify Futures#withFallback and its tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85631779
d8e9481c8f2b64fe8e8466d2571ce0de1d2e19cb,6f64db53bb4380125fd70feea45faaea5c774ce8,cgdecker,Mon Feb 9 12:46:15 2015 -0500,Re-add Multisets.removeOccurrences(Multiset, Multiset).
6f64db53bb4380125fd70feea45faaea5c774ce8,42b35e1ea6626ba910a9c17ef1a70af60cae2190,lukes,Mon Feb 9 12:46:15 2015 -0500,Roll back addition of getAllEntries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85379241
42b35e1ea6626ba910a9c17ef1a70af60cae2190,1db30126d9c27c0df51b89baef9820416baf3dd0,lukes,Mon Feb 9 12:46:15 2015 -0500,Add Google-internal getAllEntries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85375065
9f90d2c3f0c897b030941a2d8f424f2a06048439,c2bb9d23a9b8d142f0c530c89252683e1fb60f85,cpovirk,Mon Feb 9 12:46:15 2015 -0500,Add isSupertypeOf and isSubtypeOf, deprecating isAssignableFrom. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85327607
c2bb9d23a9b8d142f0c530c89252683e1fb60f85,1eda69c0d7ca4c88a92c11d27dc3e921c4fd3b44,gridman,Mon Feb 9 12:46:14 2015 -0500,GWTifies Futures#allAsList and friend. Enables some but not all FuturesTests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85168289
a451495691f7e57de33344899e3ea2e0383a14be,0c8a5acc7d06943d426ee99f310ebeb590c9f3df,tobe,Fri Jan 30 10:01:47 2015 -0500,Fix after rollback changelist 84974387.
966f3b23cbf9c8e568f681f62436836530f1453f,9028da557b552ae2d3dcf79f1978a566f5825768,cpovirk,Thu Jan 29 17:44:25 2015 -0500,Add lazyStackTrace. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85099500
15384c305a3e1550d2829982a9944769e0778cc0,982e665c3c5d24ff53b2574ac216ffd57c7045dc,gridman,Thu Jan 29 16:16:36 2015 -0500,GWTifies Futures#combine(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85081294
da7359985e92e84d57ba18f554fe40d1d42e2cc7,31f45cbb587b7407120991ab0b5d7345e412696c,cpovirk,Thu Jan 29 16:16:36 2015 -0500,Run dereference() tests under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85079832
31f45cbb587b7407120991ab0b5d7345e412696c,201bb362a9b6de3fec6507ff435ac6022b92da7b,cpovirk,Thu Jan 29 16:16:36 2015 -0500,Add a few final(?) tests.
201bb362a9b6de3fec6507ff435ac6022b92da7b,424c567c4dda17b56735ec8f9c30e324869f658b,cpovirk,Thu Jan 29 16:16:36 2015 -0500,Add and use helper methods like assertDone() in tests. This found no bugs -- well, maybe one if you count the inconsistent propagation of interruption from the delegate, though I had suspected as much already.
c1160f0226bc00b88db9d80152584d8f299f226c,8078019d64be76a97cd9f964a03cd2d1c8024d36,cpovirk,Thu Jan 29 16:16:36 2015 -0500,Run many tests for addCallback and transform under GWT. Make the no-Executor overload of addCallback available under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85070996
3ecb65ed9929066408b0feee0161a6829e753fb7,0f19a0653a3fcf208f1722528d362f5eadfb4dc9,cpovirk,Thu Jan 29 16:16:21 2015 -0500,Rollback of: Add some functionality to SerializingExecutor and rework its code.
87caee69fa9a53850ea31a8dd8287e2dacd2083f,782032c03df5282bbedb1935b95a69e086affabf,yetanothernerd,Thu Jan 29 15:15:12 2015 -0500,Add BaseEncoding benchmarks for decode and stream methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84860248
782032c03df5282bbedb1935b95a69e086affabf,9cd3ea9cedd399648488142f7e1eefd0f5a63866,tobe,Thu Jan 29 15:13:22 2015 -0500,Add some functionality to SerializingExecutor and rework its code.
57bcd2456c9a057f49d3ffecc171a524a432b1e3,e376c4d3c371bf52b84c56b2524a44a5d7120d96,lukes,Thu Jan 29 14:27:32 2015 -0500,Move LabsFutures.makeTimeoutFuture to Futures.withTimeout in prep for releasing in guava.  This changes the signature to avoid joda time Duration and also eliminates the AtomicReferences which i believe are unnecessary.
a89e931d811ad4cab0a48351ef4c95fd58e8d53d,b3bf62e8a34d41e70df4ab07a4d30b930909c7a4,cpovirk,Tue Jan 20 14:00:58 2015 -0500,Take advantage of new GWT AbstractFuture tests to enhance overall AbstractFuture testing: - Run the tests not just under GWT but also under "normal Java." - Run the test as part of our open-source build (which happens mostly "automatically" as part of the above change). - Expand the tests to run with a TrustedFuture input and a non-TrustedFuture input. Currently this matters only in non-GWT mode, but I expect that to change in time. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84152832
07df39abc6fe9c8e58006be255b2b2995dca8483,3c090f535a548473adf3a7bd66520c377e6a696b,gridman,Thu Jan 15 19:08:11 2015 -0500,GWTifies Futures#transform(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84084635
d7a7585be9c0f5d70238133a2e194a43cb5e545c,3dc2bbe30d61a97ad5426de39fdee619cf6dcf7f,gridman,Thu Jan 15 16:12:46 2015 -0500,GWT emulation for some of util.concurrent. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83996751
3dc2bbe30d61a97ad5426de39fdee619cf6dcf7f,62bb8bd4f4756cdd796651397eead05637491e0b,cpovirk,Thu Jan 15 14:43:02 2015 -0500,Fallout from MOE update: We now preserve some more usernames in comments. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83975277
e370ddeb7558f0028302c5aada1f89b469417b25,99d2816f0a099430f28b69639e9f6f5aae388812,clm,Tue Dec 30 11:05:46 2014 -0500,Hide Utf8Benchmark, which has taken on some internal-only code. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=82987350
99d2816f0a099430f28b69639e9f6f5aae388812,b480594c212d7664412dcb7880fa33e40b21239d,lukes,Mon Dec 29 09:52:04 2014 -0500,Create TrustedListenableFutureTask so that our listener executor services can produce futures compatible with the new setFuture optimization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=82743827
b480594c212d7664412dcb7880fa33e40b21239d,77ccd12bd901f83637293ddf760253ef57c305a5,lukes,Tue Dec 23 15:11:53 2014 -0500,Create TrustedFuture (name TBD) a trusted 'less abstract' subclass of AbstractFuture that we can use to optimize setFuture and try to use it everywhere in util.concurrent.
f4aa25e74a9466c2f93a2147a7cf9b01850dd41f,1ab659d452ecddb90b508f6fba9e5ef5bde97d63,emcmanus,Wed Dec 17 12:10:48 2014 -0500,In com.google.common.reflect.Types, implement the TypeVariable interface using a dynamic proxy rather than an explicit implementation.
002f39f8c165bbf1581fab6fc585dcdf976eb96d,c0b37db12875fe340dbf82fabfea8264f7c61de6,barcalow,Wed Dec 17 12:10:08 2014 -0500,Optimize UriParameterMap.parse() by making fewer passes when parsing and by checking requiresByteLevelDecoding() more efficiently.
c0b37db12875fe340dbf82fabfea8264f7c61de6,c828c438355896e16cfae49c8c044403d19d3377,lukes,Wed Dec 17 12:09:38 2014 -0500,Rollforward the previously rolled back AbstractFuture change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81501035
8ffa41f28347579fbd3363543fd9afae89ef0b48,b5eb4953579952edd753540e2919463a3ac1630d,aravinds,Wed Dec 17 12:09:20 2014 -0500,Rollback previous change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81455024
b5eb4953579952edd753540e2919463a3ac1630d,a70f009926809b9a37ebbc16ebbc9cf71030be11,lukes,Wed Dec 17 12:08:10 2014 -0500,Increase the guarantees about what happens when you call setFuture with a completed future.
d585b1b7a5d307b8b800cb25adb558a5d21faae4,81b23cdc840018da4fc07ccfcd55c78391f44df0,benyu,Fri Dec 5 11:09:15 2014 -0500,Refactored the overloads of isAssignable*() methods to instance methods with simpler signature ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81364016
81b23cdc840018da4fc07ccfcd55c78391f44df0,e152cfd14c610c68341de805bcf71589652f6133,benyu,Fri Dec 5 11:00:03 2014 -0500,use Map<File, ResourceInfo> instead of Map<URI, ResourceInfo> to work around the problem mentioned in https://github.com/google/guava/issues/1899 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81339582
c239c19f92b118b7afa33894a743c8c54de44adc,269d98573f4e6eed051a8ae2cdb392a7b606e939,lukes,Wed Dec 3 11:27:28 2014 -0500,Delete AsyncSettableFuture. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81197333
269d98573f4e6eed051a8ae2cdb392a7b606e939,5f9fd1479fcae935fb89f8c1127074c41e2751cf,benyu,Wed Dec 3 11:16:59 2014 -0500,Fixed isAssignableFrom() for <? super T> wildcard types, as pointed out by Guava issue 1898.
5f9fd1479fcae935fb89f8c1127074c41e2751cf,f8d4d38d5fc0bcfba725a7daf32aeea797468534,cpovirk,Wed Dec 3 11:07:20 2014 -0500,Steer some consistentHash users to WeightedConsistentHash. Steer all weightedConsistentHash users to WeightedConsistentHash.
f8d4d38d5fc0bcfba725a7daf32aeea797468534,3d0512c9e7cf138add01a594a21ec4d46f836515,lowasser,Wed Dec 3 10:59:19 2014 -0500,Add benchmark for BaseEncoding. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81099316
2a7a3634f562f2a473850ff0373db66bc3b23cbf,353ae349a24fb6c9b3e233ca03e4012761c7f3d8,lukes,Mon Dec 1 13:13:40 2014 -0500,Two quick followups to take (minor) advantage of the new setFuture implementation
353ae349a24fb6c9b3e233ca03e4012761c7f3d8,44eac674e407b95698625bbd4a402805264d3287,lukes,Mon Dec 1 13:12:49 2014 -0500,Rewrite AbstractFuture to fix the following issues
c633d07f26e9859529e79e7da4057ad097d9f5f4,72ae31fcc225cea1184ed75d82892a0d06339a19,lukes,Wed Nov 19 10:31:52 2014 -0500,Remove the rethrow on failure behavior from all the threaded service implementations.
149f052a790d7a1722a5b652e4faacc5e354ff14,63e9a0eccaca49df91e06e6397f496588b60e859,cpovirk,Fri Nov 14 15:52:16 2014 -0500,Test that far-future scheduling means "effectively never" rather than overflowing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79870651
d14649091d1f368c326125fdbe70c0d1dac58495,1c5554dedb0924689285a34489ec1d6b57d076e9,kak,Fri Oct 31 16:46:39 2014 -0400,Migrate from Truth's deprecated iteratesAs(...) to containsExactly(...).inOrder(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78848834
1c5554dedb0924689285a34489ec1d6b57d076e9,366efb31c4b5f1a04490d76d2c1405de6bfe1697,lowasser,Thu Oct 30 10:07:01 2014 -0400,Add an IteratorBasedAbstractMap class to simplify map implementations in common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78776528
366efb31c4b5f1a04490d76d2c1405de6bfe1697,86e4a8d67b1898c3a947f24c59c5ae720c86b975,cpovirk,Thu Oct 30 09:39:57 2014 -0400,Introduce Multimap convenience methods (k0, v0, etc.), and migrate to them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78763814
730a5d308a4e5e3423ff3f3eea1209072a8e6e75,e052e3edf713c0c20dc5ab8ee98d3fde09473727,cpovirk,Thu Oct 30 09:39:56 2014 -0400,Add convenience methods for samples.e0(), etc., and migrate to them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78756024
d6a9346dd6ca7170756a2a6d939d7b55384229ac,b8515f3f490f3f9d3127570e9ac21c4a7c59d586,cpovirk,Wed Oct 29 14:07:52 2014 -0400,Hide samples.e0, etc. behind methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78677562
da04fede442227bba94623e0a184f4dbed68552d,6d55c174c91f5ff4c9a26956227b111c1fc15e7e,kak,Wed Oct 29 14:07:51 2014 -0400,Clean up usages of deprecated Truth has() Collection methods: -has().item(...) -> contains(...) -has().allOf(...) -> containsAllOf(...) -has().exactly(...) -> containsExactly(...) -has().exactlyAs(...) -> containsExactlyElementsIn(...) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78664552
2a35e947679a898d86ee9f655f6b121b3c75d1f4,810e9ec4d94baff856d12905ec26390c6be09eee,kak,Wed Oct 29 14:07:51 2014 -0400,Migrate off of deprecated Truth methods (created using Refaster) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78472045
9113082b77c6f80e0d4d80b24eb16bcee1a23a08,582bce8560ea41d8adbbfc5d6ce7fbed5b9fdf66,kak,Wed Oct 29 14:07:51 2014 -0400,Migrate off of deprecated Truth methods (created using Refaster) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78471417
d0a0c8fb1c7df372e617878c1d8414861558637d,f7e4a609d40d6ff422e5c90c860525b45b526250,lowasser,Mon Sep 29 11:19:37 2014 -0400,Add copyOf(Iterable<Entry>) to ImmutableMap, ImmutableMultimap, and their subtypes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76459632
055f93996fe9dba92972a7a1742b182fd80ed133,1c73b2d932d3951ebee432c11c0f5aac9ea1b696,lowasser,Mon Sep 29 10:53:36 2014 -0400,Add a common superclass for ImmutableMap implementations that create a custom Iterator to iterate, reducing the total number of nested classes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76350704
f2fb1352a5ee1b808635f699b93311698d9c5bef,390198de59b9c782b6749eab0af8d55a20e965a5,Chris Povirk,Tue Sep 23 16:04:14 2014 -0400,Refactor ImmutableSortedMap construction paths.  The previous implementation did some redundant copying. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75853973
01b8a2c4d4cfb32ced9143560b75f26fd2923e67,3b47a3006a9ee32731107b080923d718444ad0fd,Chris Povirk,Tue Sep 23 16:04:08 2014 -0400,Don't frontload CharMatcher.toString() computation, that's silly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75555670
e7f902c768e974552f954a1a55970d6ef39dc6fb,0b4e7e5df7f985026f731f10f2c37a44543a5355,Chris Povirk,Tue Sep 23 16:04:06 2014 -0400,Fixed a FreshValueGenerator bug that causes failure in generating fresh values recursively when there are finite number of distinct values provided by user.
0b4e7e5df7f985026f731f10f2c37a44543a5355,bf6a7fe2ec6c516bc7a1b6c2968db4666dca2b66,Chris Povirk,Tue Sep 23 16:04:05 2014 -0400,Modify SmoothRateLimiter so that the ratio between maximum-permits-per-second and minimum-permits-per-seconds can be specified -- currently this ratio is hard coded to 3.
ac25c5019e61dae7a993562235b8de4fdada0394,ffe2d77c9d3b349d72bc1ebec39345ff0833a43e,Chris Povirk,Fri Sep 5 10:03:35 2014 -0400,Integration of Justin Sampson's fixes to Monitor and addition of extensive tests.
6c9f886357a277e0fde19b87556eb7c0fa617e14,8ec4c42646f590daf72bed88a92db6f4ac2de65e,Chris Povirk,Thu Sep 4 07:51:05 2014 -0400,Temporarily duplicate Ascii.truncate() for internal build-system reasons. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74746985
7c85e1303b7a506d500652d608329adf5dd90813,7378c5c2c1736900d4c67ea338e20dc4dca81abd,Colin Decker,Tue Aug 5 16:38:02 2014 -0400,Major refactoring of EventBus, in preparation for further changes.
c20d7397dd89acc5e27e33bf5aff0ca0f316d587,166bff55633bf814bc6d7827f93c8578c4091d48,Colin Decker,Tue Aug 5 13:09:21 2014 -0400,Open source Hashing.crc32c(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72569582
d77a109189f137c5b1403656f16d05e9266c9928,495f60836c95faa28955a1183a92b0ecd3b50365,Chris Povirk,Wed Jul 30 10:07:46 2014 -0400,Migrate guava to directExecutor now that it will be in the next release.
495f60836c95faa28955a1183a92b0ecd3b50365,875f8ee6168b5822169f47273fb700271e43c744,Christian Edward Gruber,Mon Jul 28 13:28:40 2014 -0700,Open source directExecutor and newDirectExecutorService, deprecate sameThreadExecutor ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71699710
26cc1dad451e5c3075a107247e116f25876e8318,a757aba0992b7b0450c90715f9c44750f21fa956,Christian Edward Gruber,Mon Jul 28 13:28:13 2014 -0700,Add failure causes as supressed exceptions for each failed service in the exception thrown by awaitHealthy.
91cdb2b7ed631bd3cb4e93783b087d52ab8ce82c,db57e5ee43bc3d8eb16091e28aaa060e68bf9c93,Christian Edward Gruber,Mon Jul 28 05:40:24 2014 -0700,Update to new Truth package. Use assertThat() instead of ASSERT.that() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71286559
00512e5a16832c9ea983ae0894fc9f47025291d5,db59832ed7f0e81c9e9184242ae50c3eac4ed957,Colin Decker,Wed Jul 16 16:52:43 2014 -0400,Fix errors in @GuardedBy annotations.
0f91c0fe460a9a753d7040a5691c38cee31dad92,2c785e44b9cf071b86d5196ee0a41a494d5946ed,Colin Decker,Mon Jul 7 17:25:55 2014 -0400,Open-source tests for Monitor (which is already open-sourced as part of guava) by removing @GoogleInternal, removing the dependence on TearDownTestCase, and also open-sourcing the helper class TestThread. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70653606
1c285fc8d289c43b46aa55e7f90ec0359be5b69a,5ffb527b53a698f39224c0a5511556dba63d441f,Christian Edward Gruber,Wed Jun 25 13:23:37 2014 -0700,Remove methods scheduled for removal in Guava 18.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69856875
f1e5de9761dca6f12714bd96deef2c9a634b06d3,39534cb20b1ae63e5a516ceacd9ba71fddeaa8c5,Colin Decker,Fri Jun 20 16:45:39 2014 -0400,Disable incorrect @GuardedBy annotations.
39534cb20b1ae63e5a516ceacd9ba71fddeaa8c5,8ace44c43ce4074e1d4fb91d1df0b1e3d9aac64a,Colin Decker,Wed Jun 18 18:27:48 2014 -0400,Open source base.MoreObjects and add appropriate @since tags. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69310042
62d17005a48e9b1044f1ed2d5de8905426d75299,e74918e47be511c7da2035b968d6c4967fbd1f05,Chris Povirk,Mon Jun 16 09:57:58 2014 -0400,Release BloomFilter#writeTo and #readFrom, which provide custom serialization that is more compact than standard Java serialization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69172238
cd997b58a6e34cb0222339bc11cc99451b0a8632,99437ee96716f7dc38e671370a7da53d03276d1a,Chris Povirk,Fri Jun 13 11:10:08 2014 -0400,Disable incorrect @GuardedBy annotations.
1a8ec5098d5dc075c88e4b9ae4af846905c3ee23,78ca8b54b85878a77cb20026ab39c857e74f1275,Chris Povirk,Wed Jun 11 14:54:13 2014 -0400,Add a benchmark for [Google-internal -- this CL will be rolled back in Guava] isPrime on positive inputs.  The input distribution is logarithmic. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68733770
be016c7ff468c6bdb347f8d4104c50846b18a821,42e607b8d299d4ee79d4952becd964fb2238aebf,Colin Decker,Fri May 23 17:10:48 2014 -0400,Release FutureCallbackTest to Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=67707789
351d53fd2e07cfe5c6d008a8e45403cb4e2b0a13,477abc4b8e5f256592f79f00a67d7579cd7c0cbe,Chris Povirk,Thu May 15 14:10:01 2014 -0400,Split RateLimiter implementations off into separate files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=67034085
04846be2de2d3841f2ea4f756588af8b1470635f,7811f97b5dd9b75762f6868a8b0098d826139332,Chris Povirk,Tue May 13 15:44:12 2014 -0400,Fix Guava issue 1751
cb6c9ba6a85a7d759eb4fb6efe279dd498385d55,3ba3d53f4d16117e74d1aed5786887dd8dab4ce6,Chris Povirk,Tue May 13 15:02:43 2014 -0400,Reduce differences between "when is the next permit available?" and "request a permit": - Standardize the method name format. - Standardize on returning the next available time (rather than the wait time that one of the two currently returns). - Standardize on allowing the return value to indicate a time in the past (rather than requiring it to be a present/future time as one of the two currently does).
3afc6e45c39504ece02d14f4a462f65acfa98652,9c681417c3681d4a09cc72298f5c12eecd1e7be1,Chris Povirk,Mon May 12 13:34:50 2014 -0400,Add documentation to all versions of Lists.newArrayList methods to discourage their usage; all the other collection factory methods to follow (Sets.newHashSet, etc.). Tweak verbiage of other obsoleted-by-Java7 methods to match. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66644002
197e6e88f63f5b31725d87c929735b5863cfa413,987f4dbffa66a90dfe83bade31d993cb3127c57c,Chris Povirk,Wed May 7 18:08:15 2014 -0400,Beef up documentation and validation of parameters. Also, fully hide/remove some unusable methods, and fix up a return type. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65883612
14d8ae4015e5e686f45d428c7e1879e689f818ff,bf0c83465f77ae6cbea51c45969572b1dbbf3ecf,Chris Povirk,Wed May 7 18:08:14 2014 -0400,Make Ints.tryParse available under GWT.
a2abf8960ea9e0936eb024ff171f4cd58d871220,a2bd644d2f49b2c7a24d8916627ab8d0aba975c5,Chris Povirk,Fri Apr 25 12:25:16 2014 -0400,Change the implementation of Futures.combine to be faster!
6543d89f2a8b6d3230eae8eb4a1a3760f3ffaceb,3d8c430e2c047aa400512e4eaee8d3dd25a0ad09,Chris Povirk,Fri Apr 25 12:25:16 2014 -0400,Propagate RejectedExecutionException to transformed/combined futures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65412634
07f99e57570b6e81d89c86f4f36fb9a6784d34b3,a3145339d95331cf948a9da2030b65762127f28a,Colin Decker,Thu Apr 17 16:56:11 2014 -0400,Push current RateLimiter implementation down into a subclass. This will make it easier to provide alternative RateLimiter implementations to replace our legacy rate-limiting APIs. Also, random cleanup: - Static import stuff. - Use Stopwatch instead of reimplementing it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65119596
01572c00d3f0ced8f7ad899182ee74b1a397a313,07d24eb4decacd7d9f03a0b7e4d3a0c337aeb201,Colin Decker,Wed Apr 16 18:51:49 2014 -0400,Replace usages of deprecated IterableSubject.iteratesOverSequence(...) with iteratesAs(...) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65045496
555e872a0b8341d95c62f9d8a21777de5d1f67a8,0a291554ff41e68d0437321c726f43da09f8e3bf,Colin Decker,Wed Apr 16 18:41:52 2014 -0400,Roll-forward:
0dc1684fd14dcda25be4dc5ee9fcc1a680c3fb22,6c2d78402229cc267bddb26f174078d1353337d0,Chris Povirk,Thu Apr 10 09:59:11 2014 -0400,Rollback of changelist 64659484 ("Make common.reflect build and pass tests against both Java 7 and Java 8").
6c2d78402229cc267bddb26f174078d1353337d0,2ec1b12a1af770e39d7a837858097a6470c4516a,Chris Povirk,Wed Apr 9 18:52:51 2014 -0400,- For a Collection<T> parameter that we don't know how to generate, fail the test. Previously, we would sometimes generate a Collection<String>, since the value is usually used only for equals() and hashCode() testing. (All this also applies to most other JDK and Guava collection types.) http://code.google.com/p/guava-libraries/issues/detail?id=1665 - For Optional parameters, generate Optional.absent() before generating any Optional.of(...) instances. - Deprecate setSampleInstances in favor of setDistinctValues. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64661899
2ec1b12a1af770e39d7a837858097a6470c4516a,6138e53e53f25b68427c7aeec917875270b45e2e,Chris Povirk,Wed Apr 9 18:51:05 2014 -0400,Make common.reflect build and pass tests against both Java 7 and Java 8.
cbb55be43e7d21aa42f3c46d442a088386e66cf5,2ad3463f7715fef432bad3778af5125d9863352c,Chris Povirk,Mon Apr 7 13:53:34 2014 -0400,Generates fresh value for Range. It was an oversight not adding it in the first place. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64481937
41828f6247e33a29730f9fd1cf892c3faf48d37f,353b6e69db0e6538adf6a6ecd773883207b0633c,Kurt Kluever,Mon Mar 31 14:31:56 2014 -0400,Add a new BF strategy. The old one is subtly broken. For more information, see: https://code.google.com/p/guava-libraries/issues/detail?id=1119 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63970075
e6888aadc42b1f3181a09b5c18a55f65218d5a0d,a401007f557ab438dffe6ae5b5f36bc455884a65,Kurt Kluever,Mon Mar 31 14:24:14 2014 -0400,Change the behavior of Service.Listener and ServiceManager.Listener such that we guarantee that listener callbacks (for a single listener) will never be called concurrently.  Previously, the only semantics we guaranteed was about the order in which callbacks were submitted to executor.execute.  This significantly strengthens those guarantees.
965c296fb6fb394e9724b9056bfb95d2e1080e4d,f3a3c4d96c54558f6c1f2fe328bf2c977c06d0bd,Christian Edward Gruber,Fri Mar 21 18:46:02 2014 -0700,Make Enums.getIfPresent ~16 times faster for 80% hit rate, ~72 times faster for 20% hit rate.
70784731274a3ca222430857f68aca8254009130,fa8103a40cab574bad32779d45c38118adfed092,Chris Povirk,Wed Mar 19 13:15:30 2014 -0400,Mark DoubleMath as @GwtCompatible, allowing these methods to be used from GWT code: - log2(double x) - factorial(int n) - fuzzyEquals(double a, double b, double tolerance) - fuzzyCompare(double a, double b, double tolerance) The other methods are marked as @GwtIncompatible due to aspects of their implementations not being GWT-compatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63356280
ad2474572cd3becd882fd6366a8fd16e0e9e3bda,54d74f6ba8e8aeb1108a307c8e00aed3a764afb2,Chris Povirk,Wed Mar 19 13:15:29 2014 -0400,Run some common.collect.testing tests under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63261660
b0171601101a650bcfc1e53c88220f6e6a708558,6652c5f1f624ae3c524123ab277df6993cb300d1,Colin Decker,Thu Mar 13 14:37:33 2014 -0400,Release Converter.from(Function, Function) for Guava 17. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63073973
4be45420671b59f417961b5849230799fd425ba9,1511c17c0621f3a21921aed4b655c5b1306eaf32,Colin Decker,Thu Mar 13 14:37:32 2014 -0400,Adding stream based factory methods for ByteArrayDataInput/Output and tidying up to minimize actual constructors. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63021371
1511c17c0621f3a21921aed4b655c5b1306eaf32,4061b1a8ce5b668b076bb0877091e1c4322ee539,Colin Decker,Thu Mar 13 14:36:54 2014 -0400,Add Futures.inCompletionOrder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62970544
4061b1a8ce5b668b076bb0877091e1c4322ee539,e52de0d4ab9a66b30d75bc4d96ad4269551e9884,Colin Decker,Thu Mar 13 11:29:20 2014 -0400,Open source base.Verify in Guava 17.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62936772
deff3845959d6be8b6eeb802d76b2b7637d1cc02,ca1bb340d73748ddd91038b258a16cf361eb8262,Kurt Kluever,Fri Feb 28 14:10:20 2014 -0500,Changed ArbitraryInstances to use public constant instance if present. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62232146
ff9bf6d8eee80fcee46bdb3da4fdbd00d8381d44,b3cf6a14b776a4973191318d9008a489018c89a7,Christian Edward Gruber,Thu Feb 13 11:33:21 2014 -0800,Method to shut down an ExecutorService in two phases included in j/c/g/common/util/MoreExecutors. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61230873
1fad9ae5cd05bbbd9549fac199ddd2881bea97f1,1e2a1b645d743a350f8ebf260ad6bf847219285d,Colin Decker,Wed Feb 5 14:02:09 2014 -0500,Delete AndroidInteger. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61067964
5f913f5e6411698a4e50a0593ea4db4632e2c912,7a8148a7bbd7aaa5e9e157118c824ab502f9b052,Chris Povirk,Mon Feb 3 12:42:58 2014 -0500,Change TypeResolver to not construct new TypeResolver when all the bounds remain the same. This is to work round the change in JDK TypeVariableImpl.equals().
af5afeffaddbd3de5b44d3f1b49c2462e19795f8,f24f6eea4e07858b9715b5c8afde081944c4f00b,Chris Povirk,Fri Jan 31 13:31:55 2014 -0500,Rewrite Ints.tryParse(int) with a copy of the Longs.tryParse implementation, which accepts only ASCII digits. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60660931
698bed9c310d07bc0e0af8ff9585a9fbba8e34a3,edfbb7e5f5b7d64c8e4a4eeeb49f17030de178b8,Chris Povirk,Fri Jan 24 19:51:37 2014 -0500,Remove the deprecated Service methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59981888
6a122f12efebc6c79e539b2ede91514eb2e21103,39a4f96687c910b5194007a0bb499a9ccb41f0ce,Chris Povirk,Fri Jan 24 19:38:57 2014 -0500,Add some performance enhancements to Striped:
0a355043906514163253d50ad68a1a419159a373,d115ed28283c47d57532552f18195d2063325a51,Colin Decker,Thu Jan 16 17:21:25 2014 -0500,Fix a number of test failures running the backport under JDK5.
bbdac75eb17feb528fa8020ddead73d767ec62ed,3b2035d0abf57f1cf434ed6b90b4e131543ced46,Colin Decker,Thu Jan 16 12:31:55 2014 -0500,Add SortedCopyBenchmark and document its findings in the Ordering javadoc. First rename away the existing benchmark for measuring comparator delegation overhead. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59694095
3b2035d0abf57f1cf434ed6b90b4e131543ced46,68c83489321042f5c49f7bd88ce0caf6c99a53a6,Colin Decker,Thu Jan 16 12:31:45 2014 -0500,Fix up ExecutionQueue docs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59677053
16c64dd29ccbd4c1f497c56ba8dd4cafc25c3f3d,cb8c67aa2142f4d22d4b87dacfa0ffdb57790b59,Colin Decker,Tue Jan 14 15:24:24 2014 -0500,Add tests for inserting null values into a Multimap. I was unable to reproduce the behavior reported at http://stackoverflow.com/questions/21078379/guava-null-pointer-on-multimap-with-multiple-null-values Maybe it depends on the JRE version, since, as you noted, old JREs had a TreeSet bug. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59522383
f18ec39405a76ee6c5ef68e4d9da2266f796a9a4,426c4422430609b4d63a35d66b014643b621139d,Chris Povirk,Mon Jan 6 11:47:16 2014 -0500,Release CacheLoader.asyncReload() in Guava 17.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59050926
426c4422430609b4d63a35d66b014643b621139d,33e370a64e217f946250cf2398ce1133c54bc10e,Chris Povirk,Mon Jan 6 11:47:10 2014 -0500,Change toString() methods of returned Predicate instances to consistently use the "code-like" style. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59050444
e7887ccb996ac5d36bc22714671767e80a24a5a8,82f5fb1d81269201546b02b093a568830a60e0c3,Chris Povirk,Mon Dec 30 14:29:04 2013 -0500,Small Converter cleanups: -move all @annotations to individual lines -fix some @Nullable annotations ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58824450
4ab391e4924ef436da8e3d1363bc5d57e3b75514,4d6d964435561584e3860640a28bdc409648ab5b,Chris Povirk,Mon Dec 30 14:28:34 2013 -0500,Converter.from(forwardFunction, backwardFunction). This will be essential in JDK 8. It's probably not that useful before then, but... why not?
032fcbc8f8c83f9779df0b697ae238468ba0335d,37e50544094d3f9ccd8d6efacf201a5a7dcb3275,Chris Povirk,Mon Dec 30 14:27:10 2013 -0500,Remove doc references to the deprecated service methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58500316
00caedba5f5f1a16be7b7b63fb6d833c8ea750e9,ee211636ee9bc983338f76732e87cd730f0ce022,Colin Decker,Thu Dec 19 17:39:32 2013 -0500,Make some changes to MultimapBuilderTest to make it build in GWT (2.5.0-rc1, which Guava is using currently). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58497528
1b890d1bd2937634df2c5d57e5d649cca7f16ef3,fe592e08dd536532a18cb35eb2a706dd6af7b254,Colin Decker,Thu Dec 19 17:37:16 2013 -0500,Open source HashingInputStream and HashingOutputStream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58485637
2a8a6a72d8f274d2b77e3b092197288bb5cebf86,a54908de3a64640f33c26349bef5a6b8b81d2d0e,Colin Decker,Thu Dec 19 17:35:14 2013 -0500,Open source MultimapBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58480935
4f37c83bb0dc8abc03144b9a03e0e2613666eb01,4d75431608106c4e7a25bff35e22d2474ed30689,Colin Decker,Wed Dec 18 16:54:45 2013 -0500,Deprecate InputSupplier, OutputSupplier and all public methods in common.io that use either type. Also release methods on Byte/CharSource that take ByteProcessor and LineProcessor so that the equivalent methods in Byte/CharStreams can be deprecated reasonably.
4d75431608106c4e7a25bff35e22d2474ed30689,5313166b8407e06bf63c8fea4531bd57c3039f54,Colin Decker,Wed Dec 18 14:44:54 2013 -0500,Make CaseFormat.converterTo(), Enums.stringConverter(), and Maps.asConverter() return serializable converters with reasonable equals(), hashCode(), and toString() representations.
5313166b8407e06bf63c8fea4531bd57c3039f54,75fda2a9fea9e3415c661e8688332c24ffddc940,Colin Decker,Wed Dec 18 14:44:54 2013 -0500,Import publicsuffix.org's test data. Run the tests as part of the tests of InternetDomainName.topPrivateDomain(), suppressing those that fail. (Plus miscellaneous no-op changes to the test.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58354304
75fda2a9fea9e3415c661e8688332c24ffddc940,4ea03a82b9e8e8a679758d7f15d1a88c634d3524,Colin Decker,Wed Dec 18 14:44:53 2013 -0500,Open source Converter and friends in Guava 16.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58300985
4ea03a82b9e8e8a679758d7f15d1a88c634d3524,412824abd116810f0468d560e6cf655f326048a6,Colin Decker,Wed Dec 18 14:44:18 2013 -0500,Improve some javadoc in Preconditions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58300765
8f062a880a3102d6d8f909c0754d3d2cd468c9dd,3958664f3818520c899268dcbfe508354a6a4e62,Kurt Kluever,Mon Dec 16 18:21:29 2013 -0500,Remove DI annotations from ServiceManager.
3958664f3818520c899268dcbfe508354a6a4e62,9039e31abe100dfb9820e83e03d9e022c80e6a3c,Kurt Kluever,Mon Dec 16 18:20:26 2013 -0500,Reformat file to 100 columns, except the class docs which will be completely replaced by [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58284754
845f87592875faaa9c4b561fbe96da44565a29c6,bdd5652fd300a866ca74c48b9cc36f22b2bd85f5,Louis Wasserman,Fri Dec 13 12:18:19 2013 -0800,Simplify EqualsTester/EquivalenceTester/RelationshipTester by pulling the common assertions up into RelationshipTester. This reduces duplication and removes the need to rewrite exception messages.
d660cc4a89e987d3377a2e1aa81bee2953fda987,80280954a43bfb813f8a019774e06c2a88842ede,Christian Edward Gruber,Sun Dec 8 07:55:24 2013 -0800,Multimap method javadocs: a few improvements. This doesn't by any means complete the job of perfecting all the docs in this interface.
80280954a43bfb813f8a019774e06c2a88842ede,f86cc3b3fbabe619ece14621d543133b44933614,Christian Edward Gruber,Sun Dec 8 07:52:45 2013 -0800,Automated g4 rollback of changelist 57771110.
f86cc3b3fbabe619ece14621d543133b44933614,d1270e046449afe3a12ac525de255f7a8e2bfb67,Christian Edward Gruber,Sun Dec 8 07:51:16 2013 -0800,Change toString() methods of returned Predicate instances to consistently use the "code-like" style. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57771110
ab29b173055a1ff647516848b176265fc6792ba0,c2b87dfc444952ba159da9f16e26f1921e5367fc,Chris Povirk,Tue Dec 3 13:45:22 2013 -0500,Move GenerateTldPatterns to a new directory. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57607554
c2b87dfc444952ba159da9f16e26f1921e5367fc,7de3cbca3854ae0d9e9f7973a8f3cfe855a2407a,Chris Povirk,Tue Dec 3 12:42:53 2013 -0500,Adding equalsIgnoreCase for ASCII only. This exists because there's generally no good reason to use String.equalsIgnoreCase() with non-ASCII data (you should be using proper unicode normalization).
952ea2a5afa82239d572786eb62dc9758c0984eb,38586b409895a183f879831b0f1fede693bcbe3d,Chris Povirk,Tue Nov 26 16:33:42 2013 -0500,Rewrite the Tld Pattern generator, take 2. This CL adds the possibility to reuse the pattern generator for other template files. Also now the generator keeps track about which tld patterns are from the official ICANN list, and which patterns are private. (Roll forward of CL 56906311, which was rolled back in CL 56996630, with a fix for the multiple internal-only GWT modules in com.google.common.net.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57258531
4c91448410b3e4c8b566c0fa4bf9ae047f5294e6,f799ed7f2fe50f259c29bf39fd0d26c2c537dfd0,Chris Povirk,Fri Nov 22 11:48:25 2013 -0500,Some documentation improvements for Ascii.truncate.
78f29ce2cc5a71253073a3ffb2c1ee52fb295429,5e6f89d817aa9d7f1c54c0fa7d17ce3bed5d7be8,Chris Povirk,Wed Nov 20 22:50:26 2013 -0500,Add Ascii.truncate methods, which truncate a string to a maximum length, appending a string such as "..." as an indicator if the resulting string was truncated. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56998047
5e6f89d817aa9d7f1c54c0fa7d17ce3bed5d7be8,351689a60bfb2c754c7f24e5d673d5d3ef183856,Chris Povirk,Wed Nov 20 22:50:08 2013 -0500,Rollback of changelist 56906311.
7b006c485b0774137c05f17dbf29de7e59efd8ce,a4a491611174be8cfb37e816f06f32e32b3b4414,Chris Povirk,Tue Nov 19 11:22:12 2013 -0500,Rewrite the Tld Pattern generator.
8923e48737bb4dc5d4ceea7d09926cff1bc50af4,b33a527769bf0b2866289143879dbed7fcfe8fd3,Kurt Kluever,Tue Nov 12 17:50:50 2013 -0500,Optimize Utf8.encodedLength even more, at the cost of increased complexity. I continue to be surprised by the size of the branch-mispredict penalty.
db10165f367fe754b81731ff5ac87896b65f4823,e45d675657f1df34ceb9e84c5f998ee9856e8614,Kurt Kluever,Tue Nov 12 17:28:12 2013 -0500,Lazy-initialize all the things (in Hashing). For some of these this may be overkill but we have reports of major <clinit> slowness on Android.
53a99310959a8d91420162a1116225acce5082dd,516d029c5b65f833df58c3cc0cdd0f8e3b06c6a8,Colin Decker,Wed Oct 30 14:54:34 2013 -0400,Remove the jsr-330 annotations from ServiceManager and remove javax.inject from the guava pom.xml since this was the only use.
fc8c61cf703155f85b00b30cd11fc11b53947953,ec0554c2e39714da35a95615787645ad4b611337,Chris Povirk,Fri Oct 25 17:54:19 2013 -0400,Warnings-related cleanup to c.g.c.base and its tests. Ruthlessly standardizing the comment we use so these can potentially be replaced with string constants one day. In some cases I have actually removed unjustified suppressions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55637082
4ba03ac7acad8f1d24e88e65b2aa9c721e6f6d11,6b3b405c4a1da01f308851207970248803b6d807,Chris Povirk,Wed Oct 23 15:45:32 2013 -0400,Add benchmarks for Utf8.length.
0ca8ce566c15916295bd1301c32640be12192714,aeeec807bd606f5db4845ec95a788857bb2cc4c9,Chris Povirk,Tue Oct 15 18:53:32 2013 -0400,Remove the use of deprecated Service methods from the Abstract*Service test cases.
a3c6d2e03dd0afa4d13574094611639675dbc576,a9ab3b8fcedba375d8f64e89a4aeba02a508de95,Chris Povirk,Mon Oct 14 13:23:26 2013 -0400,Instead of just tracking our state via 2 integers in ServiceManager.State track all current service states via a Multimap<State, Service>.
433f64828909352f32b20450880824b52f947e35,1062b4a17750aff3005ce5a57ec6a8002cc840ad,Chris Povirk,Mon Oct 14 13:14:09 2013 -0400,Port protobuf's UtfDecodingBenchmark for Utf8. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=54140446
ae827772191979fab74a46f64425187d747d1aa5,d339b8b42b44c4f11f6a74cc127b38132d1034df,Chris Povirk,Mon Oct 14 12:54:08 2013 -0400,Rename methods in the new Utf8 class, rewrite some javadoc, and a few very small code improvements.
d339b8b42b44c4f11f6a74cc127b38132d1034df,7f6521c18e86cc7467b9a8aed8fb6a77342fd8b9,Chris Povirk,Mon Oct 14 12:48:26 2013 -0400,Delete ForwardingService.  it has been deprecated for two guava releases now so i think it is time to drive the stake through the heart of this beast. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53861773
8c7fbd6d742eefad76a61442f4d78d37d9e5079c,d88df71d5ff0dfdda5e2cb557fca81164df0578b,Chris Povirk,Fri Oct 4 12:29:08 2013 -0400,Remove or hide APIs scheduled for deletion in Guava 16. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53732502
d88df71d5ff0dfdda5e2cb557fca81164df0578b,10e33c03a6d68fe1404aa721a4a7e37c1e63c43b,Chris Povirk,Fri Oct 4 12:28:59 2013 -0400,Clone c.g.protobuf.Utf8 to c.g.common.io.Utf8 and add new utf8Length(String) static method. Callers will be migrated in future changes. It is currently unknown whether protobuf itself will be able to depend on Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53696008
e301bb7064b1c7f23485060408c48149cf9e8374,7fbd3fa9fa13234e1d11d69df0366125f2fdede2,Chris Povirk,Mon Sep 30 10:41:41 2013 -0400,Make it possible to use class path to retrieve non-top level classes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53297583
7fbd3fa9fa13234e1d11d69df0366125f2fdede2,c3c3bad0804af06d390856b5a6c468ca2b54ac2f,Chris Povirk,Mon Sep 30 10:41:40 2013 -0400,Ensure that AbstractIterator does not hold onto its next reference after it has been returned by next(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53283705
af79a1939d2900ecaae92a5538760369eaa60b9b,95f8cde53603cd02c212e279c64f87caa5c6dc94,Colin Decker,Wed Sep 18 14:57:58 2013 -0400,Change all the reference to event handler to event subscriber. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52404442
7d9ac453a5fdea0e0a0b99500814107b4fa47098,578686226d7245be5f72dc3007c8e29217ecbfc8,Chris Povirk,Fri Sep 13 13:00:12 2013 -0400,Add @since tags and nitpick Javadoc formatting from CL 52250001. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52286822
578686226d7245be5f72dc3007c8e29217ecbfc8,23bdab2632a91b8a731f5ae977e617d5edb80d75,Chris Povirk,Fri Sep 13 11:14:43 2013 -0400,Introduce the SubscriberExceptionHandler. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52250001
23bdab2632a91b8a731f5ae977e617d5edb80d75,d56e501e83d6c17b3a2cf0524f797a4b5f38fdbd,Chris Povirk,Tue Sep 10 16:53:41 2013 -0400,Change PathByteSource in MoreFiles to not use Files.readAllBytes() for its read() method, as Files.readAllBytes() creates 2 unnecessary copies of the byte array the file is read into in the normal case where the file doesn't change size.
d0f71799a44d004a1ce837b2ffa434699dd59c4b,cc75db0727f283900fe601fc2905fa0b220c46b2,Kurt Kluever,Wed Sep 4 17:44:53 2013 -0400,Avoid array allocation in HashCode.writeToBytes(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51848312
31e1f16989ec41b360b074caebdc58e0117ecf68,c8fb5480bf698f28da3f1b3836d7c71e5e56d504,Chris Povirk,Wed Aug 28 18:30:49 2013 -0400,Replace CharMatcher.WHITESPACE by a much faster implementation as it doesn't deserve to be slowed down by division. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51342342
53811089cf234fd2aacffa9d8f7aaa321f8c798c,1756a9478ef5c5545a72080d2db39db8a2bc6bc3,Chris Povirk,Thu Aug 22 20:16:02 2013 -0400,Add DoubleMath.mean. (Includes a few drive-by lint fixes on DoubleMathTest.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51173415
6bd126800bda431b5c92031860a0218005281868,be863aad5ebb288314281db5c3a45a0a5f04fbe3,Chris Povirk,Thu Aug 22 20:15:40 2013 -0400,Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51059733
47afc85796c53a48f2ef6e236ee3f1ac41c0133e,3a534d35b632476ca1a01520005a63914168d24c,Chris Povirk,Wed Aug 14 11:31:36 2013 -0400,Small simplifications to LocalCache to extend AbstractReferenceEntry where possible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50778090
6b3dd12bb8960885afedb1807660d923fe3bfce8,3c09dbf36b034c6b60f1ad9d0e1a30f6435e3756,Chris Povirk,Mon Aug 12 10:15:46 2013 -0400,Fix division bug in HashCode.writeBytesTo() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50635321
3c09dbf36b034c6b60f1ad9d0e1a30f6435e3756,da7157938e5ff11b46f9ffe713ee4dd96eb6a786,Chris Povirk,Mon Aug 12 10:12:00 2013 -0400,Service rewrite!  Add new methods to service so that we can move users away from the confusing ListenableFuture based methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50634823
da7157938e5ff11b46f9ffe713ee4dd96eb6a786,5de36fdaf41f71d04478de0cb074ff83953dc2e3,Chris Povirk,Fri Aug 9 17:21:04 2013 -0400,Move hashCode() implementation into abstract parent class instead of subclasses. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50632699
88e7a44f78968bcac26550166dec81a6176cb22d,5b19db451f68be2d4707174492ecad58467e6983,Chris Povirk,Wed Aug 7 11:37:22 2013 -0400,Add HashCode.fromString(String). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50449901
5b19db451f68be2d4707174492ecad58467e6983,62fad0aca86ea8385261bb7ca62f023cf84d25f1,Chris Povirk,Wed Aug 7 11:32:41 2013 -0400,Copy static factory methods from HashCodes to HashCode. Deprecate the old methods in HashCodes. Update usages in com/google/common/hash to use new methods. Move the tests from HashCodesTest to HashCodeTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50448177
9e513787c859c6ea922574ef30c66f17eb9158f1,8ea0f20aac47a603c01c1fe895777df0f3afbedf,Chris Povirk,Mon Jul 29 18:58:04 2013 -0400,Elements of Sets.powerSet should support contains() in O(1). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50069151
af87e6536353841a280a1d73d6a70cc4460c2ead,728c1d5d82ebd313d049831456585968ae32ab85,Chris Povirk,Mon Jul 29 18:32:11 2013 -0400,Don't ignore exceptions thrown by tearDown() (unless they would mask exceptions from the test itself). This puts our generated GWT tests in line with what JUnit normally does. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50062431
95466d0c4b6f4db596676de7fd9fc8004c8610c5,78a5053adfbe5fd3f6a166463bae40d1c51bbc66,Chris Povirk,Mon Jul 29 13:09:27 2013 -0400,Overhaul of the Queues javadocs on the static factory methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49900450
0802228cd7df2c0c8fdcbb6c2fecea117cc2e74f,bfec5b3a3e7ab0cbb7202902378a2e7d9d4ee28e,Colin Decker,Tue Jul 23 16:55:14 2013 -0400,Change AbstractListeningExecutorService to extend AbstractExecutorService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49779273
651c628d515dbfe6614d8b3e23b47a389a3d9d1c,fe3680db04a0874a86ebb6e91ce2b76c07380f06,Chris Povirk,Fri Jul 19 12:50:22 2013 -0400,Delete DiscreteDomains for Guava 15. Remove erroneous @since 15.0 on deprecated method InternetDomainName.name(). Unstrip a couple of classes that are now public in collect/package-info.java. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49570015
952d4e85528e725a9e9851d4b262f4c9e1037d8d,ae6bc9be431d7601b1f4713679efea126673378e,Colin Decker,Wed Jul 17 17:01:06 2013 -0400,Add Queues.synchronizedDeque(Deque<E>). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49514053
35df6e874f188730e5f16441607999715615760a,b4d0b679c1f67f895b92cc5ff456e22b55a9c03d,Colin Decker,Tue Jul 9 12:14:34 2013 -0400,Open source Hashing#sipHash24() and Hashing#sipHash24(long, long). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49085958
9f7b2061de289f7167dbabf8fd48870b6f22f78d,10c89fa1f17a4f5d7b79318ccb8f8438d3d11222,Chris Povirk,Wed Jul 3 11:08:03 2013 -0400,Redo: Use the context class loader in Resources.getResource(String), instead of the class loader of the Resources class. Continue to use that loader if the context class loader is null, though. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48888869
045be6e5700cfba46d8409459f7318138703607e,8ac2bbf85c9599ddbf553a8f06d531b573680d3c,Chris Povirk,Tue Jul 2 12:10:37 2013 -0400,Change MediaType to add constants to the known types map as they're created, eliminating the need to explicitly add them all after they're created. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48801732
7eb5f329410c413ca9d19fadf60cb18f294d4597,da6eb34410a1fb324a5d6c0655c6720dcc173f3f,Kurt Kluever,Thu Jun 27 19:23:22 2013 -0400,Get rid of usages of TestUtil from common.io test classes and open source most of FilesTest.
da6eb34410a1fb324a5d6c0655c6720dcc173f3f,fab8b9744496a0ebca5232863ab186b7ac63c8e0,Kurt Kluever,Thu Jun 27 19:23:21 2013 -0400,Delete AbstractSetMultimapTest, whose remaining tests are all covered by SetMultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48590510
fab8b9744496a0ebca5232863ab186b7ac63c8e0,1feb507ee7bc2febd26ab8af061c19741c72d01d,Kurt Kluever,Thu Jun 27 19:22:51 2013 -0400,The fact that ClassPath does a lot of I/O in its creation makes the two added methods unnecessarily expensive.  They still make sense, but perhaps not on this class.
1feb507ee7bc2febd26ab8af061c19741c72d01d,e9dc7846c13cec948c52099c2e8c25a7840275f6,Chris Povirk,Tue Jun 25 20:15:59 2013 -0400,Migrate the remaining Multimap.values() tests from AbstractMultimap to MultimapTestSuiteBuilder, and delete AbstractMultimapTest, which no longer contains any tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48537940
e9dc7846c13cec948c52099c2e8c25a7840275f6,d20b08ea72dc8fc16e040fd9d86c3b307d826135,Chris Povirk,Tue Jun 25 19:56:40 2013 -0400,Update open-source Guava to Truth 0.13, and tighten up tests from allOf->exactly and allFrom->exactlyAs.
d20b08ea72dc8fc16e040fd9d86c3b307d826135,cd9b3291a91b3b802930ebad062ed35b6d3d6347,Chris Povirk,Tue Jun 25 17:41:39 2013 -0400,Update ClassPath to expose the URIs that comprise the classpath.  Also add an asClassPathString method that lets you quickly go from ClassLoader to a classpath suitable for Java's -classpath flag. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48519216
cd9b3291a91b3b802930ebad062ed35b6d3d6347,16829e682639508f5d018dddfab9c979bdf21434,Chris Povirk,Tue Jun 25 17:41:39 2013 -0400,Remove com.google.common.collect.Ranges (the static methods have been moved to com.google.common.collect.Range). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48509690
5027441c818d9b1737982fce55e0bdb7973eef2b,31b625a38cf0967e155ac1f4b1c288f31dd885ca,Louis Wasserman,Fri Jun 21 12:39:18 2013 -0700,Remove deprecated appendTo(Object&Iterable&Iterator) overloads. These methods existed only to support classes that implement both Iterator and Iterable. If you need to add such a call in the future, cast the argument explicitly to Iterator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48293496
b4c04c1ab7cd2804ff1f4d27aa8c3c857d76280f,83cc342cfcea485f312baaeaa348970430e1db5c,Christian Edward Gruber,Mon Jun 17 10:34:19 2013 -0700,Create sameThreadScheduledExecutor(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48036849
8e7d357e239696a1b7674447a72958027a1ec332,99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0,Colin Decker,Fri Jun 7 14:08:33 2013 -0400,Delete AbstractListMultimapTest, which no longer has any tests not already part of ListMultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47674443
99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0,b8dc3cf5402498ec452f5d427122ae3686563ebc,Colin Decker,Thu Jun 6 16:28:45 2013 -0400,Delete AbstractCollectionTest, which is now only being used in multiset implementation tests, and which has no remaining tests that aren't already part of MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47666389
dac081ddbe0bffe8423bfd051ff03f90a558d401,d085a922d99276ad5a965030ca6c5ffc58d228a1,Colin Decker,Thu Jun 6 15:34:55 2013 -0400,Migrate Synchronized{,Navigable}SetTest to the SetTestSuiteBuilders and off of AbstractCollectionTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47662426
d085a922d99276ad5a965030ca6c5ffc58d228a1,6ca2091f598a6427b3075c7cc4a7ba00b31ebbb3,Colin Decker,Wed Jun 5 14:03:12 2013 -0400,Kill AbstractMultisetTest.  All its remaining tests are tested elsewhere by MultisetTestSuiteBuilder.
6ca2091f598a6427b3075c7cc4a7ba00b31ebbb3,05bf2d68025bfd054f430ef02453c14ebbda9d4e,Colin Decker,Wed Jun 5 14:02:11 2013 -0400,Migrate remaining Multiset.elementSet() tests to MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47554296
05bf2d68025bfd054f430ef02453c14ebbda9d4e,92d3b5e287634d7254ae823544dcc1611bd0fade,Colin Decker,Wed Jun 5 14:00:25 2013 -0400,Migrate the remaining Multiset.entrySet() tests from AbstractMultisetTest to MultisetEntrySetTester, fixing a few genuine bugs encountered in the process. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47552716
92d3b5e287634d7254ae823544dcc1611bd0fade,be16c8a4d33fa0e519f53bc07b66d514911c9ba6,Colin Decker,Tue Jun 4 16:23:49 2013 -0400,Add MultisetEqualsTester to MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47550101
1e53ba78519220d8780d7542471cb5a8698fc604,212e5bb0ab79a02ac3ccbfd306191730ef99e71e,Colin Decker,Tue Jun 4 16:21:08 2013 -0400,Finish migrating Multiset.remove() (and removeAll, and retainAll) tests to MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47547148
efdc4065a1c234beaa61120c753d0a8cc991c84e,59c28bb1365a31cd22bf42b74764bd7508ee3fd1,Colin Decker,Tue Jun 4 14:05:53 2013 -0400,Remove tests of Multiset.elementSet() that are redundant with the SetTestSuite generated for Multiset.elementSet() by MultisetTestSuiteBuilder.  (Some tests will still need to be migrated.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47543353
59c28bb1365a31cd22bf42b74764bd7508ee3fd1,de16613436dacf69aa5d1216da24ac3c5de7a569,Colin Decker,Tue Jun 4 14:04:54 2013 -0400,Migrate tests for Multiset.add from AbstractMultimapTest to MultisetAddTester, split off from MultisetWriteTester as part of MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47542388
e90e3c84968b4dd67ca4a07f8db0e645b43eedfc,21a6374ff7c3d2675e69795d8788c78714c2c5cd,Colin Decker,Tue Jun 4 10:50:01 2013 -0400,Remove Multiset.iterator() tests redundant with the CollectionIteratorTester tests from MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47509316
21a6374ff7c3d2675e69795d8788c78714c2c5cd,ddf4239134e1ab7cf41560044bf782d900d1e762,Colin Decker,Tue Jun 4 10:49:05 2013 -0400,Migrate Multiset.remove() tests from AbstractMultisetTest to MultisetRemoveTester, split off from MultisetWritesTester, as part of the MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47508469
ddf4239134e1ab7cf41560044bf782d900d1e762,2b3e4dc71d31eaf168d9881f23061e35f6b01d6d,Colin Decker,Tue Jun 4 10:47:40 2013 -0400,Delete Multiset.count() tests from AbstractMultisetTest that are redundant with MultisetCountTester in MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47507664
bf56054562666d43b275579cd4012c3e82448dfc,86f50adc5e6a3b1b9c39a02a162c1570942f473f,Colin Decker,Mon Jun 3 16:08:11 2013 -0400,Use a radix trie approach to serializing TLDs for TldPatterns.java to minimize code size. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47356985
86f50adc5e6a3b1b9c39a02a162c1570942f473f,2118534d13aafd68eac74c43111b6cc6081f3dd8,Colin Decker,Mon Jun 3 16:08:05 2013 -0400,Clean up most usages of Input/OutputSupplier in tests in common.io. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47348463
0cc0c30a58251b5e48655c368bde3b17867ef46e,ef05341d7de489e653e4abac4294ccff409704a2,Kurt Kluever,Wed May 29 17:34:30 2013 -0400,Migrate tests for Multimap.keySet() from AbstractMultimapTest to MultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47283976
8e796ca3f7146f6929f711f35e03983e6e71f468,1eb9f7dc7ae032be53db39d107e0b74dbc810f26,Kurt Kluever,Wed May 29 17:31:24 2013 -0400,Migrate tests for Multimap.keys() from AbstractMultimapTest to MultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47273152
1eb9f7dc7ae032be53db39d107e0b74dbc810f26,a912609acc77b5694c05d53270fcb00c61f4ad7b,Kurt Kluever,Wed May 29 17:30:25 2013 -0400,Instead of suppressing iterator().remove() tests, make iterator.remove() support an independent property of a collection implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47238893
36bef97796fa79d49a4d8592a599b520acdaf3e9,292320335ac395b15352881bb4f5f3a0e6d3e43b,Kurt Kluever,Tue May 28 01:10:16 2013 -0400,Migrate AbstractMultimapTest tests for Multimap.asMap() to much more exhaustive and detailed MultimapTestSuiteBuilder testers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47111812
292320335ac395b15352881bb4f5f3a0e6d3e43b,dd2d69a8eed71e0404350c31d6ba16cea496279d,Kurt Kluever,Tue May 28 01:07:33 2013 -0400,Preserve SortedSet-ness of value collections across serialization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47106820
dd2d69a8eed71e0404350c31d6ba16cea496279d,bb81dac792bbbaa3072a0a49f91cb66d63e0894c,Kurt Kluever,Tue May 28 01:05:52 2013 -0400,Make sure all implementations being tested by SortedMapInterfaceTest are also tested with SortedMapTestSuiteBuilders, and remove tests from SMIT that are redundant with SortedMapNavigationTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47103324
791e4add29fa08a760816173a41a4e92b9a7f62d,b95fcde29c1ab99cfd08fabeb1005bde6f060f94,Kurt Kluever,Tue May 28 01:02:52 2013 -0400,Migrate AbstractMultimapTest tests for Multimap.entries() to a MultimapTestSuiteBuilder tester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47101119
b95fcde29c1ab99cfd08fabeb1005bde6f060f94,b14e334fd2cc3377470e02dea7b7f189ef5be776,Kurt Kluever,Tue May 28 01:01:31 2013 -0400,Add MapTestSuiteBuilder tests for MapConstraints.constrainedMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47100566
b14e334fd2cc3377470e02dea7b7f189ef5be776,3d0bd8ca07c9bfd7605cc703e61c5637cf16e0c5,Kurt Kluever,Tue May 28 01:00:11 2013 -0400,Add TestSuiteBuilder tests for Maps.transform* ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47098965
79d4012841dd3ec708a50b97924dd833ebed162d,c84d0031c8af6e00a9bb25a86bade4cf1d5af9ed,Kurt Kluever,Fri May 24 11:59:35 2013 -0400,Delete completely unused ConcurrentMapInterfaceTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47004919
76f33bbfb9c0f5954461ce705a5c4b7f71e26ef9,ad68eedd50815c0b1f11aa5cdc26f6c033096979,Chris Povirk,Wed May 22 15:01:33 2013 -0400,Remove tests for Multimap.get from AbstractMultimapTest that duplicate tests in MultimapTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46990147
ad68eedd50815c0b1f11aa5cdc26f6c033096979,d09f9c94653ae470050f55032df7ad81eb7aef3f,Chris Povirk,Wed May 22 14:57:29 2013 -0400,Add test suites for Multimap.equals to MultimapTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46989151
d09f9c94653ae470050f55032df7ad81eb7aef3f,73365e53f81c02e231c9e3a68276d74a61408373,Chris Povirk,Wed May 22 14:48:26 2013 -0400,Migrate Multimap.clear() tests (and tests to clear Multimap views) to MultimapClearTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46987144
73365e53f81c02e231c9e3a68276d74a61408373,ae2c37b1ba5de61df02e1f018e294f255c071c32,Chris Povirk,Wed May 22 14:43:51 2013 -0400,Remove tests from AbstractMultimapTest that overlap with MultimapRemoveTester and MultimapRemoveAllTester in MultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46986379
ae2c37b1ba5de61df02e1f018e294f255c071c32,91305e4d1ebee9da5de58e1fac09293db154f1eb,Chris Povirk,Wed May 22 09:17:39 2013 -0400,Add MapToStringTester and MultimapToStringTester, and fix ForwardingNavigableMap.StandardDescendingMap.toString() to correctly iterate in descending order. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46952541
91305e4d1ebee9da5de58e1fac09293db154f1eb,12f610ed3f6e78289505fe102b27075954f941f4,Chris Povirk,Wed May 22 09:13:01 2013 -0400,Remove get().subList() tests from AbstractListMultimapTest that are redundant with ListSubListTester in the derived test suite for ListMultimapTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46951757
9faddd05f325ad1e885abafc9f6d96eb9844bd58,6a80b2ed3b2f841dbb67e73bd268af21b5cf651a,Chris Povirk,Tue May 21 18:27:06 2013 -0400,Delete tests from AbstractMultimapTest of the multimap views in isolation, that is, tests that initialize the multimap, get the view, and don't reference the multimap afterwards.
6a80b2ed3b2f841dbb67e73bd268af21b5cf651a,16cbef3e29addf218fa6872282575c7840eb8ca4,Chris Povirk,Tue May 21 18:05:40 2013 -0400,Migrate all remaining Multimap.replaceValues tests from AbstractMultimapTest to MultimapReplaceAllTester ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46948091
16cbef3e29addf218fa6872282575c7840eb8ca4,2b96e112a9383ee72c957a15012ece829abbbbec,Chris Povirk,Tue May 21 18:00:59 2013 -0400,Add tester to MultimapTestSuiteBuilder for Multimap.putAll(Multimap) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46946989
2b96e112a9383ee72c957a15012ece829abbbbec,1feb7a1a7bc73ca4b23ce576559775ffb8ff364c,Chris Povirk,Tue May 21 17:39:26 2013 -0400,Replace Multimap.putAll(K, Iterable) tests from AbstractMultimapTest with more exhaustive tests in MultimapPutIterableTester ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46945862
1feb7a1a7bc73ca4b23ce576559775ffb8ff364c,ad6a935e15ca12b3c429b753efa6876e549a7c29,Chris Povirk,Tue May 21 17:35:16 2013 -0400,Add the TestSuiteBuilder for Multimap.values(), and fix Multimaps.filterXXX to pass those tests properly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46945446
2aa76241fb4d27b78d4eaa074c6f1f502e68056a,a829dfef2d7ef2df54212d8fca416f4a3efdcef4,Chris Povirk,Tue May 21 16:16:37 2013 -0400,Delete tests from AbstractMultimapTest that duplicate tests in MultimapSizeTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46940075
a829dfef2d7ef2df54212d8fca416f4a3efdcef4,f585a2ee4c14ddcdcee3f48b370c05a6fe5ecc2b,Chris Povirk,Tue May 21 16:12:30 2013 -0400,Add Multimaps.asMap() helpers that return a Map with more strongly-typed values than ListMultimap#asMap(), etc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46939830
f585a2ee4c14ddcdcee3f48b370c05a6fe5ecc2b,04f34ed3e87104aaefb17d3da6ef57ca9aa720a4,Chris Povirk,Tue May 21 16:07:49 2013 -0400,Add tests to the asMap() views of ListMultimap, SetMultimap, and SortedSetMultimap to verify that the asMap().values() are of the correct type (List, Set, SortedSet) at runtime. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46939057
7f1c522ef811e207367e974bf1c93e327e9b4dfb,542600dcff42f6846f662ac3a946348a7cf8ed3c,Louis Wasserman,Fri May 17 14:20:41 2013 -0700,Implement Object#equals() and #hashCode() for stateful HashFunctions. Add tests to verify the behavior. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46751376
0aa888b199bc12eae29633c71a424bd28750961b,049475ece6864ddcff3f337373e33a0c49d719df,Christian Edward Gruber,Fri May 10 17:25:58 2013 -0700,Fix the logging in Futures.CombinedFuture such that:
ab384d44a6e6c14671d5c5a5345a9ddd14052162,65be1c541649612d6fe3aeac68da57a24521efe3,Christian Edward Gruber,Fri May 10 17:25:57 2013 -0700,Update Mozilla PSL. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46368166
ceadf9a57ade329799f0bb61fafe77c5dc98d1dc,50c376c305a85881acb049b09dd5edeb854739ba,Christian Edward Gruber,Fri May 10 16:55:35 2013 -0700,Remove the rethrow Error behavior from AbstractFuture. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46315153
3a03624df74595b4dd953a4ca9fed43408249ca4,7a844bbe7806a613d3500df616f7283d72f85453,Chris Povirk,Mon Apr 29 20:12:44 2013 -0400,Changed Invokable.from(constructor).getReturnType() to return ParameterizedType instead of raw class when the class is parameterized. This makes constructor invokable more consistent with factory method invokable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45912432
e758192597c410ffed5ff2603ed15f6e6fdb74dc,6c3884a677d2e4194be338367cd5d3b0da4ee73a,Chris Povirk,Tue Apr 23 16:25:26 2013 -0400,CHANGE: Make HostAndPort GwtCompatible by getting rid of a regex. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45669298
cafb21d020445be9819d047961b2c8c3d8b956db,2f3fc9c4c2952acad8ba0159cbf426528de5631c,Chris Povirk,Mon Apr 22 11:27:53 2013 -0400,Added TypeVisitor to make it easier to navigate type hierarchy, and used it to replace a few code duplications.
0beafad032035936df0898c71229d63acd57a0ac,a257c66ce0695b9052cccfffd51d5dc063d4b092,Chris Povirk,Mon Apr 22 11:25:46 2013 -0400,Release base escaper classes, HTML escapers, XML escapers, and URL escapers into Guava. Keep the source-code escapers internal until we figure out which ones to recommend and what to name them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45374049
31978328af5af66bc67bcbdda12b20710c2cfcad,f03c9d816c1c5d149a983db8097543ad845dafff,Louis Wasserman,Mon Apr 15 09:01:39 2013 -0700,Run "normal" GWT tests in public Guava. We still don't run the suite-builder tests, so the run is incomplete, but at least it's fairly quick: Tests run: 6667, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 155.218 sec
f03c9d816c1c5d149a983db8097543ad845dafff,e4ddb97b0403cf90f18ea70823e2224c93234d8b,Louis Wasserman,Mon Apr 15 09:01:38 2013 -0700,Use the renamingDecorator to ensure that Services always run in appropriately named threads.
e4ddb97b0403cf90f18ea70823e2224c93234d8b,8cc057266b0704e98678df6d595affca17b59299,Louis Wasserman,Mon Apr 15 09:01:38 2013 -0700,Provide ExecutorService decorators that will rename the threads in which its tasks run for the duration of the task.
f8d47319ee710ecbf55eab44016a8f3355c6d7b1,09f11c0477dc918147cafbc70268d7b4f9f4df5c,Louis Wasserman,Mon Apr 15 09:01:38 2013 -0700,Internal refactoring to make it easy to expose a factory method that configures the burst size ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45016791
09f11c0477dc918147cafbc70268d7b4f9f4df5c,4c27d5012bf6cb2605bcc9f5fca398351c72cb7e,Louis Wasserman,Mon Apr 15 09:01:38 2013 -0700,Convert GWT-only tests into normal tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44698403
8768c424f9809dd34ded53b222610ff4d0992b86,0863294405ea8c7ba302e25626703cf8db318c14,Christian Gruber,Mon Apr 8 09:37:02 2013 -0700,Add nullWriter(), a Writer that discards everything written to it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44805209
efa4d2b38592c8ab69b560733eac47d3914e78e7,36bdd84d73ea42ce598240bd3167a8660d7f66e8,Christian Gruber,Mon Apr 8 09:28:12 2013 -0700,remove the queuedListeners lock from both ServiceManager and AbstractService.
36bdd84d73ea42ce598240bd3167a8660d7f66e8,357dea3f21b11b054727df3a6e551b7988ec3b70,Christian Gruber,Mon Apr 8 09:27:00 2013 -0700,Convert GWT-only tests into normal tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44698403
0eafd7694a41c40f3dee6c3e8c1cae0acd6a2dc7,6066b33620f52cb4a8d30c272527f8118c94881f,Colin Decker,Wed Mar 27 17:09:46 2013 -0400,Change ByteStreams.asByteSource calls to ByteSource.wrap and deprecate it. Change CharStreams.asCharSource calls to CharSource.wrap and deprecate it. Change both deprecated methods to delegate to the replacement method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44516201
2643ac3c65213b1bb222d6eb971d1f282c6d2e8e,c6c66536dc903ef9e870d3c8562d25808bbe66b2,Colin Decker,Wed Mar 27 16:26:27 2013 -0400,Copy ByteStreams.asByteSource(byte[]) to ByteSource.wrap(byte[]). Copy CharStreams.asCharSource(String) to CharSource.wrap(CharSequence).
c6c66536dc903ef9e870d3c8562d25808bbe66b2,8914ff92b9e8e788a16b56f95dc0f0377c43f5c0,Colin Decker,Wed Mar 27 16:23:53 2013 -0400,Add Class-Path cycle detection to avoid StackOverflowError ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44466033
8914ff92b9e8e788a16b56f95dc0f0377c43f5c0,90a9774f3bfde1d0354368592e36814235cb12d5,Colin Decker,Wed Mar 27 16:22:43 2013 -0400,Throws UOE in MutableTypeToInstanceMap Entry#set() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44465568
5401a778bfddd5ff34a3902d6c756479149602e4,3212103020bedd2abf04927204f61f87bfcf8745,Colin Decker,Wed Mar 27 16:20:01 2013 -0400,Some more refactoring of TypeResolver.TypeTable. I was in a hurry. The TypeTable code wasn't in a form I'd LGTM. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44403308
3212103020bedd2abf04927204f61f87bfcf8745,56244f6d37cc6d99cd9b68cfd50445e556b8f4de,Chris Povirk,Mon Mar 25 11:02:23 2013 -0400,Make TypeResolver public in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44329762
81cc624e0695dcf5133f57256e3263abbe18266c,a94293f5e2b131267792bd3af67af71c019ebc79,Chris Povirk,Mon Mar 18 11:08:37 2013 -0400,Update the hashing benchmark to include all of the different hash functions.
a94293f5e2b131267792bd3af67af71c019ebc79,d8b765c09c121ba16994df9084002bad6c620d57,Kurt Kluever,Fri Mar 15 15:27:36 2013 -0400,Automated g4 rollback of changelist 44002262.
d8b765c09c121ba16994df9084002bad6c620d57,29bcd86f4fbb1ef2a47cf96ef2b6ec941843ba0d,Kurt Kluever,Fri Mar 15 15:26:03 2013 -0400,Make ImmutableMap extend ImprovedAbstractMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44002262
c4a6f8f55e0f07b2413540371025bb9aacee15eb,d0a148bac00eebe5659bd9a33871b3a878237611,Kurt Kluever,Thu Mar 14 15:20:05 2013 -0400,Add boolean parser to cache builder. add flag for record stats. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43956416
c8a3113091ba181971969da60898439e18812b6b,68591abad922e0fc89c96c52ed5be39ecac09365,Kurt Kluever,Thu Mar 14 15:01:28 2013 -0400,Add Funnels.stringFunnel(Charset) overload. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43908416
e624382dadd8eb2b1bcf66c30572a8d519e5d8c8,becf0f62ce7620fc5b76c307527e5863ba231c9e,Kurt Kluever,Thu Mar 14 14:58:23 2013 -0400,Test and document LoadingCache's behavior in the face of InterruptedException (mostly by linking to the new <http://code.google.com/p/guava-libraries/wiki/CachesExplained#Interruption>). Also, update some unrelated broken links: http://web.archive.org/web/20090301165914/http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#101089 => http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.10.6
becf0f62ce7620fc5b76c307527e5863ba231c9e,0202617129f4c0132f3285ac9d5db36439b73dd8,Kurt Kluever,Thu Mar 14 14:56:53 2013 -0400,Simplify StandardTable implementation in common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43866642
0202617129f4c0132f3285ac9d5db36439b73dd8,aac56f9bb9f71a5cee93888663de0a63e469da3e,Kurt Kluever,Tue Mar 12 19:31:22 2013 -0400,Add benchmarks to determine the overhead of the various stats calculation algorithms. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43849595
6b0f80d75843cd7b8623861198a9b7eee4d3eb6b,6ff6acf5bb62084118b6a613928643138b7cf731,Louis Wasserman,Fri Mar 8 13:25:59 2013 -0800,Automated g4 rollback of changelist 43443903.
6ff6acf5bb62084118b6a613928643138b7cf731,e89537bade715f1962b8f358c53b3cb36899ab10,Louis Wasserman,Fri Mar 8 13:24:53 2013 -0800,Simplify the implementation of LongMath.sqrt.
a07134858ae51e4caee1ff56fc475b0a4a0dc8cb,3e2950b1da46e4c976d2f79907bf61373770587e,Louis Wasserman,Fri Mar 8 13:22:50 2013 -0800,De-GoogleIternalify some APIs for Guava 15.0: -c.g.c.collect.TreeTraverser -c.g.c.collect.BinaryTreeTraverser -c.g.c.io.File#fileTreeTraverser ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43443966
3e2950b1da46e4c976d2f79907bf61373770587e,e6949fd57066ac483f173c71af32ff266258e69f,Louis Wasserman,Fri Mar 8 13:21:48 2013 -0800,Automated g4 rollback of changelist 43314514.
e6949fd57066ac483f173c71af32ff266258e69f,60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97,Louis Wasserman,Fri Mar 8 13:17:23 2013 -0800,Open source ServiceManagerTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43414005
60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97,b8282012c5e03e349c926eebd68e16800e5f56f4,Louis Wasserman,Fri Mar 8 13:16:26 2013 -0800,Release ForwardingSortedMultiset into Guava 15.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43412779
a1940dd06109feacb7b72fed17726c329a3f54f5,83eeba6538e1b871a2f522fc2a9570eaf029bc41,Louis Wasserman,Fri Mar 8 13:14:07 2013 -0800,Simplify Multimaps.AsMap implementation, pulling up common logic from its subclasses ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43412108
9056840286b235c0a9bef8ca757e0817c954d6ba,56df0274a4a5ab8f37789eabaec0a419a4aed98a,Louis Wasserman,Fri Mar 8 13:10:57 2013 -0800,Simplify and refactor the logic to ensure that Immutable(Bi)Map.Builder and friends create entries that can be reused by RegularImmutable(Bi)Map to avoid redundant copies. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43407355
3bc46110f41082510dff11df9c9fef8d514acad1,50a7e39a635b6e60332810eb286c4967c3849a4a,Louis Wasserman,Fri Mar 8 13:08:50 2013 -0800,Add Content-Security-Policy header. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43393773
50a7e39a635b6e60332810eb286c4967c3849a4a,9a37e924161f131c79a814da407601d0a88e0b46,Louis Wasserman,Fri Mar 8 13:07:46 2013 -0800,Automated g4 rollback of changelist 42665747.
9a37e924161f131c79a814da407601d0a88e0b46,21d3cddf5a11f2f708f1d6a94f3536d907da95d5,Louis Wasserman,Fri Mar 8 13:04:35 2013 -0800,Add BloomFilter#canMergeWith(BloomFilter) which determines whether the given bloom filter can be safely merged into this one. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43357881
21d3cddf5a11f2f708f1d6a94f3536d907da95d5,fea5c4ad7429590a49cce01ce6ff226b6f15dc18,Christian Gruber,Sat Mar 2 22:18:49 2013 -0800,Automated g4 rollback of changelist 43310565.
fea5c4ad7429590a49cce01ce6ff226b6f15dc18,bff94c6599b1a1a53cfadcc11bb2829ff244e430,Christian Gruber,Sat Mar 2 22:18:49 2013 -0800,Common out ImmutableMapEntrySet implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43310565
bff94c6599b1a1a53cfadcc11bb2829ff244e430,3f948ef892b1207193cd73b213fb06e55bd30178,Christian Gruber,Sat Mar 2 22:18:49 2013 -0800,Extend AbstractCollection where appropriate in common.collect ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43309776
3f948ef892b1207193cd73b213fb06e55bd30178,1a3a560da39ad9c737af0d22df34ce7e42817546,Christian Gruber,Sat Mar 2 22:18:16 2013 -0800,Automated g4 rollback of changelist 43265767.
1a3a560da39ad9c737af0d22df34ce7e42817546,3bd2dd34618a38a7f823dd72a603c5a47905b5b1,Christian Gruber,Sat Mar 2 18:12:35 2013 -0800,Eliminate nondeterminism in memory consumption tests by forcing lazily computed views of the empty immutable collections. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43298195
0f5ac1191e8b258e747328b82f633938595e43cc,6122e688a7549b4e164ed23720f2a5b5ac0a266c,Christian Gruber,Sat Mar 2 18:10:04 2013 -0800,Remove Unsigned{Integer,Long}#asUnsigned from Guava 15.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43292361
6122e688a7549b4e164ed23720f2a5b5ac0a266c,a1858510da0d99dfc3e3622741d2134fb22e18c1,Kurt Kluever,Fri Mar 1 12:17:51 2013 -0500,Automated g4 rollback of changelist 43258188.
e17ee922de0d2285ff8bf8212823c33d8589512d,155728d070ac6f2d2ca22644f5c5affea72d7feb,Kurt Kluever,Fri Mar 1 12:16:02 2013 -0500,Simplify and deoptimize LinkedListMultimap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43258188
155728d070ac6f2d2ca22644f5c5affea72d7feb,39942eb70a09fbc879892fe4b240b6974843abc3,Kurt Kluever,Fri Mar 1 12:13:31 2013 -0500,Simplify filter() implementations in common.collect ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43252637
252e992199fdb7735e6303b289c7afde4fb2d797,ccbc3f6770998e4f795cf6ee4887120e5a2b81ab,Kurt Kluever,Fri Mar 1 12:11:46 2013 -0500,Add AbstractTable, a skeleton implementation-agnostic Table implementation, and factor out code in common between Table implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43250483
cb54c20bedf257f2eeec7e9f61105b2585ab0752,ee32a2dd64cce9318cef8b2a0e2c582118a2d236,Kurt Kluever,Fri Mar 1 12:09:06 2013 -0500,More simplification and refactoring of common code in common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43236585
ee32a2dd64cce9318cef8b2a0e2c582118a2d236,791e34c93f643597c70b747e615d9ac41c8d7f21,Kurt Kluever,Fri Mar 1 12:07:15 2013 -0500,Delete EmptyImmutableTable, which isn't clearly worth the code complexity. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43207266
791e34c93f643597c70b747e615d9ac41c8d7f21,8a6a477c15925ac0af861bb18cca13a1cec24d0a,Kurt Kluever,Fri Mar 1 12:06:24 2013 -0500,Delete EmptyImmutableMultiset, which isn't clearly worth the code complexity. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43202169
8a6a477c15925ac0af861bb18cca13a1cec24d0a,a7e66bb0852eba579b7b3dc8228b55e2a8124c7c,Kurt Kluever,Fri Mar 1 12:05:28 2013 -0500,Remove the following methods from com.google.common.primitives.UnsignedInteger and UnsignedLong: add, subtract, multiply, divide, remainder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43201569
a7e66bb0852eba579b7b3dc8228b55e2a8124c7c,a8e4dd38cfae3e31ddd270e7f97ce283bf2c15f2,Kurt Kluever,Fri Mar 1 12:04:33 2013 -0500,Remove com.google.common.io.{LimitInput,NullOutput}Stream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43198122
a8e4dd38cfae3e31ddd270e7f97ce283bf2c15f2,b2f0d0fad93f11bb86a2ce1770bcb43fd014fa06,Kurt Kluever,Fri Mar 1 12:03:38 2013 -0500,Promote StandardSystemProperty to @Beta in 15.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43197237
b2f0d0fad93f11bb86a2ce1770bcb43fd014fa06,d2cfd91e0d557bba565e2c8dadd0b5b3f475f790,Kurt Kluever,Fri Mar 1 12:02:43 2013 -0500,Delete EmptyImmutableList, replacing it with a singleton instance of RegularImmutableList.  This makes the common case for ImmutableList bimorphic instead of trimorphic, resulting in significant improvements to benchmarks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43197187
d78a229d82448bb5dacf5f58b3c60a2b7d029843,7766079f27aa546315dc59a2742350e136060c7e,Kurt Kluever,Fri Mar 1 11:59:49 2013 -0500,Delete the Ordering.from(Comparator) and Ordering.natural() overrides of sortedCopy and immutableSortedCopy, since benchmarks suggest any speed increases are minimal at best. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43178753
208def9719a79cf22f2788e808c33893726a1fbd,48efcd7ce82737d88abd2f8cb9db2c32f0878ce5,Kurt Kluever,Fri Mar 1 11:56:16 2013 -0500,Make a few small changes to ServiceManager 1. use the Monitor.enterWhen* instead of Monitor.waitFor* methods, as they are more efficient. 2. rewrite servicesByState to sort a list of Map.Entries instead of constructing a Map and sorting a copy of the EntrySet 3. Add an addListener convenience overload for when you want to use the sameThreadExecutor. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43135325
45db748d4c1ac8cd1215256ebbf3a1d645461cef,1740aac1bae09f0a2b8e7345ddfc90a10a84709b,Chris Povirk,Thu Feb 21 17:29:16 2013 -0500,Make ExecutionList smaller and faster by using a manual queue instead of a LinkedList.
1740aac1bae09f0a2b8e7345ddfc90a10a84709b,3e4c4a3affbc1be871dcfa503f5fd1c5da260626,Chris Povirk,Thu Feb 21 11:37:46 2013 -0500,Deprecate softValues. Make makeComputingMap package-private in Guava, and stop using it in the example code. (It is the only method scheduled for deletion in February or March.) Reimplement out-of-package Guava makeComputingMap callers with the traditional putIfAbsent pattern. Remove methods scheduled for deletion in Guava 15. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42902921
8b930104c5944d019536f7f419fc9c89ab2b9046,47e9a30a4a4388458127caadeb9b6318dfea509c,Chris Povirk,Thu Feb 21 11:37:40 2013 -0500,Update truth to 0.11 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42845267
e66c84b101f674401ffd4c5264b15a980f48e749,3775da660d35229a7574e5ef8b131293e3305269,Chris Povirk,Mon Feb 18 16:19:32 2013 -0500,Open source some more benchmarks. The Monitor benchmarks were left as internal when the class was migrated from Labs. My guess is that that was nothing more than "Caliper benchmarks can't be open-sourced yet." I notice that earlier CLs didn't open-source them, either. My guess is that that's just because they were excluded from the BUILD rule entirely and not merely marked with @GoogleInternal. My guess is that the same is true of the EventBus benchmark. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42749026
3775da660d35229a7574e5ef8b131293e3305269,392d2a538ddc28a69d37759a1328677cc124e046,Chris Povirk,Fri Feb 15 22:37:57 2013 -0500,Move Byte/CharStreams.concat into Byte/CharSource. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42657113
56cc7ff9d3ffd4f3e5510fdd56cf1535d884a4d1,9062bf938fde15436adddd8daf9359b033205081,Chris Povirk,Mon Feb 11 21:19:28 2013 -0500,Simplify implementation of Multimaps.unmodifiableMultimap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42395522
9062bf938fde15436adddd8daf9359b033205081,efc75f97069f3cfff48cad998801ba99c126908b,Chris Povirk,Mon Feb 11 18:09:54 2013 -0500,Optimize AbstractMapBasedMultimap.values().iterator() to avoid going via entryIterator() and allocating entries which get immediately discarded. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42383138
bb91f4e888b438d2c6bb071bfb826b229dc09faf,6950e2c5f033d256910e615ad701b969b07dbd9a,Chris Povirk,Mon Feb 11 14:58:17 2013 -0500,A rewrite of Monitor internals. - use a linked list of active guards instead of an ArrayList - never signal next waiter while this thread still counted in active guards - optimize away excess signals - other stuff rewritten to Martin's taste
35ca2ccdb761de615df2f32b30ef497595f93a68,4c376a212781ad5f8afe1e901e3668f7db50b395,Chris Povirk,Mon Feb 11 14:44:47 2013 -0500,Rewrite the ImmutableCollection.toArray() methods in terms of a package-private "copyIntoArray" method, which also lets e.g. ImmutableMultimap.values().toArray() use arraycopies, etc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42276632
4c376a212781ad5f8afe1e901e3668f7db50b395,5fd86618cac019676e7fab7cce847c1fd29198ff,Chris Povirk,Mon Feb 11 14:41:20 2013 -0500,Promote EvictingQueue from labs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42276397
5fd86618cac019676e7fab7cce847c1fd29198ff,f69200fa67f143bc9fbe4bbdb36650e6aa57a8fc,Chris Povirk,Mon Feb 11 14:37:38 2013 -0500,Rewrite ImmutableMultimap.values().iterator() not to go via the entries, so as to avoid allocating entries that promptly get discarded for the corresponding values. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42275929
a37ebc6eb5f242ccfa90cc11eef369979e932685,acca567031e047e14f965de4bfa3e2c0f80d43b6,Kurt Kluever,Thu Feb 7 10:22:56 2013 -0500,Use specialized entry types for ImmutableMap, and use these in the builders to avoid redundant copying of entries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42095809
638fcb8c799c53f55471201a639e001120b19815,9129e5e50020f84c7a859726b42ce211d2e37e5f,Kurt Kluever,Thu Feb 7 10:19:06 2013 -0500,Don't use exceptions in the control flow of AnnotatedHandlerFinder.  (Related: public Guava issue 1196.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42040968
c65fdbc3f931b34da5d7261609ad88bbefb7afd4,6687d01aee3a8485fa33b9b98c16d8d2fdccb244,Kurt Kluever,Mon Feb 4 13:03:45 2013 -0500,Conservatively simplify Tables and ImmutableTable implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41963659
c8131b0236c38b19a9fd6ab8b5f7be94918239e0,86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3,Colin Decker,Wed Jan 30 18:36:54 2013 -0500,Optimize IntMath and LongMath by using a branch-free helper implementation of the expression (foo < bar) ? 1 : 0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41793002
86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3,2be342881ace329a9ebdc31990f719301de5f7c0,Colin Decker,Wed Jan 30 18:35:46 2013 -0500,Rollback
fc6a72e81f6cbf81de64105105f296f0c84abdd0,1dc60fa85852708754ba0c394d223f5eef6f7f97,Christian Gruber,Fri Jan 25 11:10:12 2013 -0800,- Fix scheduleWithFixed(Delay|Rate). As originally implemented, scheduleWithFixed(Delay|Rate) would submit a Callable/Runnable wrapped in a FutureTask to the delegate ScheduledExecutorService and fail to run more than once due to run-once nature of FutureTask. - Implement cancel(boolean) on the returned LSFuture. - Omit FakeScheduledExecutorService changes.
61d7db20077933bfac8ba1aec1965383a5da262a,1a518b598b43486cd36cc510bf89d5b60720a4c4,Christian Gruber,Fri Jan 25 11:09:39 2013 -0800,Incorporate latest mozilla tld changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41590242
372a94bfa7992a98698affc08fc523d0b77e1bc3,f8a94b9999e42a2eb1431948ebb57ab8533eaaa5,Christian Gruber,Fri Jan 25 11:07:48 2013 -0800,Rollback
f8a94b9999e42a2eb1431948ebb57ab8533eaaa5,445460f37ae3ceddd43e18cac7fade59640f2347,Christian Gruber,Wed Jan 23 14:30:15 2013 -0800,Simplify and organize various Map implementations.  Specifically:
6addb1f214c02b8f1de65cc564f5fa1e29da59ea,d08905e9fc562c1f4d1ae0acfe6f9fb98d10f4f8,Christian Gruber,Wed Jan 23 14:26:00 2013 -0800,Make ImmutableTable serializable. Also, reduce duplication across existing Table serializers. http://code.google.com/p/guava-libraries/issues/detail?id=1264 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41522037
81b34a9fee52a8e4f4c878aeabbb404f5dd5337a,1d11559a8d86ee5f7909a293e5063689fb8b0f30,Colin Decker,Tue Jan 22 15:01:04 2013 -0500,Make ImmutableMap.Builder fail atomically on null keys or values ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41476478
1d11559a8d86ee5f7909a293e5063689fb8b0f30,f0321c523ce5450b3c8c22af39a6eaefbada0a40,Colin Decker,Tue Jan 22 13:02:37 2013 -0500,Guava issue 1001: stop reimplementing Sets.newSetFromMap, now that the backport is in place. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41471300
f1dfc6181adb562966a7937d64e1d4b0e8c48099,cc34329792125a962b7b5f800fdb1d1874631aa7,Colin Decker,Tue Jan 22 13:02:37 2013 -0500,Change Sources/Sinks to implement Input/OutputSupplier temporarily, to make migration of usages easier (make it possible to change an InputSupplier to a ByteSource without changing an API that takes an InputSupplier at the same time). The getInput/Output methods are @Deprecated since they shouldn't be called directly. Also make public methods for viewing Input/OutputSuppliers as Sources/Sinks.
cc34329792125a962b7b5f800fdb1d1874631aa7,61ac739d660eaeeec397938a6879c0c10f94a279,Colin Decker,Tue Jan 22 13:02:37 2013 -0500,Add automatic subSet tests in {Sorted,Navigable}SetTestSuiteBuilder, and override various SortedMap implementations in common/collect to return SortedSet keySets. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41348783
16eac2df5395257ad039cad1c336c41bb55bb42a,883fcd89d25adcc0f6e8ab7655c99b9f5b790b61,Colin Decker,Thu Jan 17 16:20:01 2013 -0500,Minor bug fix and simplifications in common.collect, including:
f90d07978c10519b3c73e8a0801df30122ad06b9,1da5e0cf3f30aa1eeee8c0160977b00e0a9f58e6,Colin Decker,Thu Jan 17 16:17:46 2013 -0500,Complete a TODO to avoid redundant copies of entry arrays in ImmutableMap construction pathways. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41289454
40ab4e481cfab78b02a6a1d41c66ff7d4c79462e,b99b83e93dd3f0a448db8f0284c14b0ae759d85b,Colin Decker,Wed Jan 16 14:17:54 2013 -0500,Simplify Maps.  Specifically,
b99b83e93dd3f0a448db8f0284c14b0ae759d85b,a072275f7ec6cd71835baef23020a766ba0497e6,Colin Decker,Wed Jan 16 14:16:26 2013 -0500,Split off Multimaps.filterXXX overloads for SetMultimap (and filterKeys(ListMultimap)). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41190071
a072275f7ec6cd71835baef23020a766ba0497e6,0071d72213c47537f79355468eb7b855af532340,Colin Decker,Wed Jan 16 14:15:36 2013 -0500,Simplify ImmutableCollection implementation and related code.  Specifically:
0071d72213c47537f79355468eb7b855af532340,f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc,Colin Decker,Wed Jan 16 14:14:48 2013 -0500,Simplify Iterators and Iterables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41186453
f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc,02e459aacc3b534a580cd656b2e5d167b8b45026,Colin Decker,Wed Jan 16 14:13:15 2013 -0500,Minor simplifications to Multimaps. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41184579
02e459aacc3b534a580cd656b2e5d167b8b45026,33c8b01c890c778c1b18c260c7b83001a587e5b4,Colin Decker,Mon Jan 14 17:04:55 2013 -0500,Reconcile @GwtIncompatible (and @GoogleInternal) annotations with the build-system lists of GWT-compatible (and GWT-compatible emulated) files. The main effect of this is to make InternetDomainName available under GWT in Guava. (It somehow seems to have worked anyway inside Google.) http://code.google.com/p/guava-libraries/issues/detail?id=1253 It's also necessary to make UnsignedInteger.multiply() (which is already deprecated) unavailable under GWT, since it is a simple passthrough to the times() method, which is also unavailable under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41134674
8485330b17d5cd0b93fbb2f1429c09bf2a4155ab,95cf7a7e14c39fda1585127b83dd2e5ee974875d,Chris Povirk,Sat Jan 12 18:32:51 2013 -0500,Trim lots of unused and redundant code.  In particular,
95cf7a7e14c39fda1585127b83dd2e5ee974875d,90a75c93246f0a403fc20275cb80d60e79978933,Chris Povirk,Fri Jan 11 17:47:19 2013 -0500,It's January 2013! - Remove MapMaker.softKeys. - Remove AsynchronousComputationException (slated for November 2012 deletion). - Change Unsigned* methods' expiration from a month to a version, since "one version" is what we try to do, anyway, and we had scheduled them for "January" rather than "15.0." ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41046796
01c33a7487d8c3f90608ae5cd05debf62794c25b,601991395f9ec427d999ffd739984052807f5688,Chris Povirk,Fri Jan 11 12:50:14 2013 -0500,Rollback of controversial c423bec3cc53 ("Trim gratuitous code from ImmutableList implementations"). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41031096
601991395f9ec427d999ffd739984052807f5688,b1b1560643ddbbb315a05164be60fc2e1dd32caf,Chris Povirk,Fri Jan 11 12:26:22 2013 -0500,Reduce unnecessary code in Multisets and Multimaps ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41030309
a7456bd0f0059e6ed9e99d5157550adaff96d601,c423bec3cc53943b947e13ceb81c527fb3b8e1c2,Chris Povirk,Fri Jan 11 11:55:48 2013 -0500,Simplified attempt to fix common issues with Unsafe in common libs ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40999025
c423bec3cc53943b947e13ceb81c527fb3b8e1c2,02e6a77a1f6d8e40002209236ea237ae47e7da24,Chris Povirk,Fri Jan 11 11:55:47 2013 -0500,Trim gratuitous code from ImmutableList implementations ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40997992
61c6b00569b9dbe5e9d042bb106c1ca03c5a288f,28f3cd2759061207c89c25a2635154c3adaabc2b,Chris Povirk,Fri Jan 11 11:55:33 2013 -0500,Cleans up HashingTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40973196
28f3cd2759061207c89c25a2635154c3adaabc2b,c9a720a063fa22d293dcbb329eef97402ea0319d,Chris Povirk,Fri Jan 11 11:55:33 2013 -0500,Added ClassPath.getResources(). See http://code.google.com/p/guava-libraries/issues/detail?id=1214 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40960937
f237e1e015fecb13e34739858300508dac235117,313f93c8c4ec073158317473dfbfb2aff29b1d65,Kurt Kluever,Thu Jan 3 16:54:21 2013 -0500,Write a more compact ImmutableTable implementation.
dfa609596b9a92a1df96f53b5252b080b6763185,7e10a8b03b0a87508de4beb78e427fd5ac409bbc,Kurt Kluever,Thu Jan 3 16:53:59 2013 -0500,StandardSystemProperties -> @GI ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40464798
9ede30c33a1ad7e79b54a601a79af53526a40d4f,84f80c5e683af7f2ed69e7f47a41e858fe62f413,Kurt Kluever,Thu Jan 3 16:08:07 2013 -0500,Changed ClassSanityTester.testEquals() to check against use of == on objects. We assume that the implementations should call equals()
84f80c5e683af7f2ed69e7f47a41e858fe62f413,af568193e6ee1015f38fb7c2bfed6228529f43b9,Kurt Kluever,Thu Jan 3 16:04:46 2013 -0500,Add base.StandardSystemProperties ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40325631
af568193e6ee1015f38fb7c2bfed6228529f43b9,75085833f67d07b9dcc071e0703cb1027e6c0b28,Christian Edward Gruber,Thu Dec 20 17:13:21 2012 -0500,Make Closer public and @Beta. Also, change Closer.rethrow(Throwable) to propagate IOExceptions by default and change all calls to rethrow(e, IOException.class) to rethrow(e). Add a pointer from Closeables.closeQuietly deprecation text to Closer. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40308996
39d3234f2e2130fd0f3725d4f545bf97638be412,d0186c29fa50b3cbf5823ba7c6d6e02e0b6eb9d9,Christian Edward Gruber,Wed Dec 19 23:50:37 2012 -0500,Override HashFunction#toString() where possible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40255702
d0186c29fa50b3cbf5823ba7c6d6e02e0b6eb9d9,dba37ce4fc0444ba2640eb66f4552cb3bc4bea23,Colin Decker,Wed Dec 19 12:53:22 2012 -0500,Add tests for known defaults for all HashFunctions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40223497
1bfbc64ee02ecb3b03c2d19c5bd3bebcda19c67a,2e04ac2c85300d5a95c142c402199125b466ed1a,Colin Decker,Tue Dec 18 17:30:53 2012 -0500,Reorganize LinkedListMultimap to avoid the three redundant hash maps, saving a fair amount of memory. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40210587
d6da7d86a2cab91bb3d33d983ccf5b07de14cc20,4b29948bbb7a21754223dba744ceec22a162abe4,Colin Decker,Tue Dec 18 15:56:02 2012 -0500,Ensure that recordStats works on Android, GWT, and environments which may restrict the use of sun.misc.Unsafe, as per Guava issue 1228. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40113906
4b29948bbb7a21754223dba744ceec22a162abe4,85efe36d23543385541fd76b44833cd35c9283bb,Colin Decker,Fri Dec 14 17:37:05 2012 -0500,Revert accidental doc changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40085671
85efe36d23543385541fd76b44833cd35c9283bb,7eb5783b70ffe7a5a2b47717327d78ef104f9aff,Colin Decker,Fri Dec 14 13:30:31 2012 -0500,Add more doc to BaseEncoding ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40048053
ca36f308785f8a9780a10ea48a76bd026b202fa9,39b6a72246fcde454321b03823f4981f6394a63f,Colin Decker,Thu Dec 13 19:14:52 2012 -0500,Add subRangeSet to the RangeSet interface, and add the TreeRangeSet implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40028620
39b6a72246fcde454321b03823f4981f6394a63f,2e0a1563c8d7f3197f76180ff9e905243aceede2,Colin Decker,Thu Dec 13 19:14:52 2012 -0500,Rewrite TreeRangeSet.complement() to be implemented in the same way as TreeRangeSet itself -- as a NavigableMap<Cut<C>, Range<C>> mapping lower bounds to ranges.
2e0a1563c8d7f3197f76180ff9e905243aceede2,7218498c1e19a789a5064ae750db7e929e2e8287,Colin Decker,Thu Dec 13 19:14:23 2012 -0500,Rollback LinkedListMultimap change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39937742
7218498c1e19a789a5064ae750db7e929e2e8287,a1cecc41594dd2b63c474337d3cf922b6d184854,Colin Decker,Thu Dec 13 16:02:32 2012 -0500,Optimize CharMatcher as described in Guava issue 1223. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39931458
d87ab445579e88079f321dc8af79d8688fec7b2c,5a2e0bc809a9ea9801364595f1c7681a9ac7f509,Colin Decker,Thu Dec 13 15:59:11 2012 -0500,Reorganize LinkedListMultimap to avoid the three redundant hash maps, saving a fair amount of memory. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39925816
e3dccb37908923f7bb6c88421082ce0ebccaac6d,caf4fc4fe94090803e9c7e634d9004d82b60fe3e,Colin Decker,Mon Dec 10 16:41:58 2012 -0500,Deprecate DiscreteDomains. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39870832
bf0fb34c412629d8f2b32095ee0524b732ed6410,8b5f8e0945ee9e0bbd7048945f17d2fdc2b108e0,Colin Decker,Mon Dec 10 12:29:40 2012 -0500,Make SortedMultiset.elementSet() return a NavigableSet outside GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39834726
2cd9a6a7dc9b9097de02838ec25957a2234ae934,83c496dd2363e839b582d73dd41f4d869abd3f7e,Colin Decker,Mon Dec 10 12:29:40 2012 -0500,Add MapMemoryBenchmark and SortedMapMemoryBenchmark. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39793649
b4cf74aa3a56751f25ae09eb79b68e0656d40618,57b068ec5d8cc962be3e90e173710091620ac626,Chris Povirk,Fri Dec 7 09:38:25 2012 -0500,Optimize collapseFrom and trimAndCollapseFrom so that they only allocate if necessary.  Add a few tests.  Remove the GWT workarounds for GWT bug 4491 since it appears to be fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39757514
57b068ec5d8cc962be3e90e173710091620ac626,6136894f7de5e93cfc355dd25f8174c2abc363f7,Chris Povirk,Fri Dec 7 09:38:04 2012 -0500,Shuffling in benchmark classes due to internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39747316
6136894f7de5e93cfc355dd25f8174c2abc363f7,5add864185a9582bebbb30f2566a6a466cbd75ea,Chris Povirk,Thu Dec 6 09:44:01 2012 -0500,New implementation of Objects.ToStringHelper:
133ffd3dd0d4967cb7f2d6f745b6661585c67b6b,7002f6efa3a10d614063c8e4333c249c89425247,Chris Povirk,Wed Dec 5 16:14:56 2012 -0500,Add GWT compilation test. Separate testlib GWT files into guava-testlib/blackhole-gwt, where they can be ignored for the time being. (testlib already doesn't work under GWT.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39671586
31d35bb6dd5cbb958d71bf5e0a38fc19aa35eb80,8e124bdca98fd41cae908fe07cf1fecfc8625379,Chris Povirk,Tue Dec 4 10:47:37 2012 -0500,Merge DiscreteDomains into DiscreteDomain, in advance of migration. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39581939
2459638f76d1e57824acfc013a3b7a018ba74de1,160a3a2362b8a76a6b832f1ed7a894a18158190f,Kurt Kluever,Fri Nov 30 14:37:46 2012 -0500,Change (most) methods in common.io that either return or take Input/OutputSuppliers to delegate to Sources/Sinks by wrapping suppliers as sources/sinks and vise versa. This also deprecates ByteStreams.getChecksum() and Files.getChecksum(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39480085
dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f,2eabf213074afc5b2483c687598e6a3762c0ec5f,Kurt Kluever,Thu Nov 29 12:38:54 2012 -0500,Opensource ServiceManager!
2eabf213074afc5b2483c687598e6a3762c0ec5f,406d0d589b20a5fea174d5163e4671df18bc04ec,Kurt Kluever,Thu Nov 29 12:37:08 2012 -0500,Rewrite Multimaps.filter implementations, factoring out a significantly more efficient Multimaps.filterKeys implementation in the process. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39394883
406d0d589b20a5fea174d5163e4671df18bc04ec,f0943b868f667f8f8f2207373eea30989db6e2d0,Kurt Kluever,Thu Nov 29 12:35:31 2012 -0500,Swap out truth 0.7 (and older source version) and swap in 0.10 with gwt support Lots of import changes poached from: replace_string "import org.junit.contrib.truth" "import org.truth0" replace_string "import static org.junit.contrib.truth" "import static org.truth0" manual search/replace containsAnyOrder() -> has().allOf() manual search/replace containsInOrder() -> has().allOf().inOrder() sometimes s/r contains*Order() -> has().item or has().allFrom(){.inOrder()} as appropriate other manual fixes
f0943b868f667f8f8f2207373eea30989db6e2d0,35fbd05c6f9d09db66b98285b00b77bccd3fc468,Kurt Kluever,Wed Nov 28 13:21:19 2012 -0500,Implement ImmutableRangeSet.subRangeSet(Range). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39377650
35fbd05c6f9d09db66b98285b00b77bccd3fc468,6506c4d1e0237dc5a3c875d2d10c329e902c5523,Kurt Kluever,Wed Nov 28 13:20:04 2012 -0500,Add subRangeMap to the RangeMap interface, and an implementation for TreeRangeMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39377500
6506c4d1e0237dc5a3c875d2d10c329e902c5523,6fe6d5c28d561ad6b830d0945769c8e0a1322b57,Kurt Kluever,Wed Nov 28 13:13:47 2012 -0500,Implement ImmutableRangeMap.subRangeMap(Range) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39333730
1404ead2c8e86628e4a4f3cea9441d80d220bb96,e69bcbf33dcbf5680d232c8f2193a9eb671ffc74,Kurt Kluever,Mon Nov 26 12:06:55 2012 -0500,Further LongMath.sqrt optimizations, to show that a simple truncation is in fact sufficient.  (This actually simplifies the proof.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39276105
e69bcbf33dcbf5680d232c8f2193a9eb671ffc74,5e2f597c1f2de49630a82c5488da7d5a406b69bd,Louis Wasserman,Fri Nov 23 13:03:41 2012 -0800,Optimize LongMath.binomial by accumulating into separate numerator and denominator variables whenever overflow is known to be impossible, as in the BigIntegerMath implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39205160
d982bee516bf929e9d45cd9fe699cbaf72cf62ac,c1d642e0ceb6106b0e9b35583069e3831b966abf,Louis Wasserman,Fri Nov 23 13:01:50 2012 -0800,Optimize LongMath.sqrt.
1d10f562e30a1d314ced9d3bdf510891878baad5,19d312977252b2f494f6997d5dd881f349af6292,Louis Wasserman,Wed Nov 21 11:30:54 2012 -0800,Rewrite Multimaps.transform* in terms of AbstractMultimap, and use MultimapTestSuiteBuilder on it directly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39050523
6f169cccf745b91875f33d33bef993d6ce224dc7,f2055926f98703f09e4f5ef9a6a78f3fca09ddc9,Christian Edward Gruber,Mon Nov 19 06:41:58 2012 -0500,Add more class-level documentation and examples for RangeSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38862063
a45095a38959a46331f3bdcb18ec37fec835e4f4,f6e694d95fab9147bdc4cef7cd608623d3e6a3de,Christian Edward Gruber,Thu Nov 15 15:04:14 2012 -0500,Implement Multisets.filter(Multiset, Predicate) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38740003
f6e694d95fab9147bdc4cef7cd608623d3e6a3de,50be29b83f7567a13f995dfa1377d315051ebd42,Christian Edward Gruber,Thu Nov 15 15:04:13 2012 -0500,Cache the upperCase() and lowerCase() results in the Encoding object itself, not the alphabet, so as to save an allocation from each call to lowerCase() or upperCase() after the first. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38731220
5b96fd5a6377e0d0a01b2f2da39196882043e62c,4fa056813cc1db3c594f0d0d8560d65c63c81b7d,Christian Edward Gruber,Thu Nov 15 15:03:33 2012 -0500,Refactor AbstractMultimap into a separate AbstractMultimap and AbstractMapBasedMultimap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38726867
4fa056813cc1db3c594f0d0d8560d65c63c81b7d,4c86ebcbb6d410a405de53a0940065819f1aeaf0,Christian Edward Gruber,Thu Nov 15 15:03:32 2012 -0500,Add Longs.tryParse. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38720107
0330f712f56cc53633874e95bdc1203cf881eb85,da4ca2f9535ccf93454ad7dc75165651f1c7e2c6,Christian Edward Gruber,Thu Nov 15 15:03:25 2012 -0500,Fix bug in TreeRangeMap.asMapOfRanges().get(absentRange) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38651843
54ce130a2f1438cd94277d72e5deed843115def5,2b769e0543155ac35b0edb98448d5d2cf4fa4018,Christian Edward Gruber,Thu Nov 15 12:33:53 2012 -0500,Avoid rebuilding alphabet lookup tables, etc. in BaseEncoding ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38575425
2b769e0543155ac35b0edb98448d5d2cf4fa4018,9e63a9a917369de06ed131c15dccc686808c6cc8,Chris Povirk,Mon Nov 12 14:54:32 2012 -0500,Make Crc8HashFunction @GoogleInternal, since Hashing.crc8 already is. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38565967
b7878163534069f6811e55148629f4d8af820a1d,d32629fa8393113714fe7aba16a84c9a5c90a285,Chris Povirk,Mon Nov 12 13:40:19 2012 -0500,Prepare for the same renamings for UnsignedInteger as in UnsignedLong ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38558333
d32629fa8393113714fe7aba16a84c9a5c90a285,e477a21822c16eeea92195fbd07351a32e2b7263,Chris Povirk,Mon Nov 12 13:33:22 2012 -0500,Re-write MessageDigestAlgorithmBenchmark using multiple @Params instead of different timeFoo() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38484757
2bbd22b0fecd010b73abc423f59879ea9a0679d9,33581e9571eb53d1052bf587c9f925092830b721,Chris Povirk,Mon Nov 12 13:26:22 2012 -0500,Use MessageDigest#clone() instead of MessageDigest#getInstance(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38480581
c61612cdab133e819a311f488f4df5b732d22631,1365550fd8e9eb3d2f94cf38085c65cbfe447376,Chris Povirk,Fri Nov 9 16:39:24 2012 -0500,Add ByteSource, ByteSink, CharSource and CharSink abstract classes and factory methods for creating various implementations of them.
074d64df15d82609b430a79b551b8378fb822128,633d594394afc9f2da5b1e005bc39c7cb8b10044,Chris Povirk,Fri Nov 9 16:32:48 2012 -0500,Add new UnsignedLong methods that we will shortly migrate to. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38454126
633d594394afc9f2da5b1e005bc39c7cb8b10044,f0859c91b3e7740ba0423198d9c44ac9df72824a,Chris Povirk,Fri Nov 9 15:03:50 2012 -0500,Add Crc8HashFunction to compute the CRC8. Relax restriction of >= 4 bytes for a HashCode instance. Add HashCode#padToInt Add HashCodes#fromByte ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38451830
f0859c91b3e7740ba0423198d9c44ac9df72824a,017a5145ed8eaeac92ce997c679061b129f06ef4,Chris Povirk,Fri Nov 9 14:23:57 2012 -0500,Changed Invokable to always return the source-view of parameters, even for non-static inner class constructors. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38361864
017a5145ed8eaeac92ce997c679061b129f06ef4,4cd9ad88cf9b2522561c1ed69f8f0f673d98897e,Chris Povirk,Fri Nov 9 14:23:56 2012 -0500,Add Maps.filter{Keys,Values,Entries}(NavigableMap, Predicate), since we added Sets.filter(NavigableSet, Predicate). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38357323
fd40e3a91e6ef695a5d9db92a386842354b7cfca,91634b6c9c2d65eae7bdd3928c884e58b86393f7,Chris Povirk,Fri Nov 9 14:23:54 2012 -0500,Compute CharMatcher constants lazily whenever possible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38170514
91634b6c9c2d65eae7bdd3928c884e58b86393f7,c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b,Chris Povirk,Fri Nov 9 14:23:54 2012 -0500,Add streaming encoding and decoding to BaseEncoding. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38154034
c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b,6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd,Chris Povirk,Fri Nov 9 14:23:53 2012 -0500,Rewrite ImmutableBiMap to save ~35% on memory consumption, following the ideas of our HashBiMap rewrite.
6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd,f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d,Chris Povirk,Fri Nov 9 14:23:53 2012 -0500,Make TreeMultimap.asMap() and keySet() return NavigableMap/NavigableSet, falling back to SortedMap/SortedSet on GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38143211
f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d,36abf9172e9abe2eb736cc5cec10d100dbcd0450,Chris Povirk,Fri Nov 9 14:23:52 2012 -0500,Return a NavigableSet from TreeMultimap.get ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38054420
960729e6012e9b310ba8407f85b31243f2679529,ae42810de5790eb2d4e91807e37dd50eb6582c98,Chris Povirk,Fri Nov 9 14:23:43 2012 -0500,Avoid the fragile assumption in SortedMapTestSuiteBuilder that all tested maps are Map<String, String> ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38041962
043e4f75cc56f564a0d0ca3345176e637de8469e,7a8e4a867899c77e535eb88250e2df0015b704ed,Chris Povirk,Fri Nov 9 14:16:02 2012 -0500,Implement ImmutableRangeSet.asSet(DiscreteDomain). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38034818
e9d5cc93fe6c07b927bede3dee356030494529e3,961b89eb28dc4bb7eb38efe9cbbb4202c859980c,Chris Povirk,Thu Nov 1 16:45:25 2012 -0400,Export TestingExecutorsTest to Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37556826
961b89eb28dc4bb7eb38efe9cbbb4202c859980c,69ad96b719d7cd3d872a948d7454f17b816a21c2,Chris Povirk,Thu Nov 1 16:01:49 2012 -0400,Add TestingExecutors.noOpScheduledExecutor to common/util/concurrent/testing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37540391
4dfc92182081e9695d38772ba528faf7fef75ff6,0dbf979ceacfa3006bd48330aff35e8c4e7fe02f,Chris Povirk,Mon Oct 29 18:01:18 2012 -0400,Add RangeMap.span(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37068105
b7bcb4eb4d45aa80136785809f4f92de4c6c6c91,8613d366c1f379a4b75ec16a6e6ed03bb8f9ab4f,Chris Povirk,Mon Oct 29 15:12:00 2012 -0400,Try to improve Splitter documentation ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37048099
d96e425a451ee861b29ac9ef50a14513e2d57b44,9dee58b8207f65d4fc9c98ec49417c91fca3a792,Chris Povirk,Mon Oct 29 14:52:17 2012 -0400,Reorganize tests for filter methods on Iterables, Collections, Sets, etc. NOTE: This CL introduces an empty FilteredCollectionsTest class, which Maven's test runner doesn't like. We'll fix it shortly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36708171
fde657f56c4d75717ffcce670230782d84906c89,450095182d466a46e67763af2fbfd98399ccb566,Chris Povirk,Mon Oct 29 14:08:46 2012 -0400,Change ByteStreams, CharStreams and Files to use Closer.
c1a62df76bea4d050765c6ccdbe2bfe7ec4b748d,b76ffbeab2394774f8e0efc13205b38f63d1513e,Chris Povirk,Mon Oct 29 14:01:54 2012 -0400,Release a couple io test methods.
b76ffbeab2394774f8e0efc13205b38f63d1513e,ba9aa6be61a9de6096a0d571ae9fde97e57d539a,Kurt Kluever,Fri Oct 26 16:24:13 2012 -0400,Add Closer as package-private in common.io. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36681931
6fb125be7d839839562d3e9a19c8dc40d6e54265,be52ad577ab4a5c0ad8aec2a828d611c5bed2516,Kurt Kluever,Fri Oct 26 16:19:19 2012 -0400,Make TreeMultiset.elementSet() return a NavigableSet (albeit not in GWT).  Dependent on cl/36499908. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36545396
be52ad577ab4a5c0ad8aec2a828d611c5bed2516,0bc1a0c0710670c9ef940086c61e70bc4a67f429,Kurt Kluever,Fri Oct 26 16:18:02 2012 -0400,Write the initial, skeletal BaseEncoding API. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36544759
0bc1a0c0710670c9ef940086c61e70bc4a67f429,acf7e99424c7eecbb85d5e6d64fb76be6f8fb994,Kurt Kluever,Fri Oct 26 16:16:43 2012 -0400,Add tests for ImmutableSortedMultiset asList views ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36537737
acf7e99424c7eecbb85d5e6d64fb76be6f8fb994,ca5b04277d9c2b0606dc6974078ce3b06bab1967,Kurt Kluever,Fri Oct 26 16:15:31 2012 -0400,Split MultisetCollectionTest suites into the appropriate test classes ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36537481
85d2e6894a747bbcc39ac5feaecec89226446499,a52dd72a0537366f7a96a9f6ab9e042af1d80ae1,Kurt Kluever,Fri Oct 26 16:12:57 2012 -0400,Migrate IRangeMap into RangeMap's position.
a52dd72a0537366f7a96a9f6ab9e042af1d80ae1,f877b7159836ffeb3a66f86e1308bd0b58ae2f8e,Kurt Kluever,Thu Oct 25 15:11:45 2012 -0400,Add elementSet and entrySet tests to MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36498472
012065203b428fff0b5a464ba878216805b5da43,a526a03775b030d15ad29e0629871bf1bbd306ca,Kurt Kluever,Thu Oct 25 15:09:56 2012 -0400,Add ImmutableListCreationBenchmark to help evaluate the utility of pre-sized builders. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36498026
7ab7f86540743a8cfa199c79e7725c3423fc7f73,60a4fc580248199add9059979578f757f32d0b88,Kurt Kluever,Thu Oct 25 15:04:09 2012 -0400,Add tests for ImmutableSortedMap.{entrySet,keySet,values}.asList.
3c7fe205b0bef1eae7a4ce013ae909164bbe9874,9c9cb7da27bfcabd87931b46dbd48858ceefb5e7,Kurt Kluever,Wed Oct 24 18:05:40 2012 -0400,Add ImmutableMultiset.asList() tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36363737
d8aed8e6507f34de33c89434bcb64f7137112f64,e0d14af3151259d3f93ab503099d012c2f90537e,Kurt Kluever,Tue Oct 23 19:29:02 2012 -0400,Add tests for ImmutableMap.{keySet,entrySet,values}.asList ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36194340
0be8ed786405c18b16722621a25219aa3ea95a7c,ff722c806fd9a7a5710b9b4d30dca4f615b6e0cf,Kurt Kluever,Tue Oct 23 19:19:46 2012 -0400,Automated g4 rollback of changelist 35973933.
08ea2736b4529e3ca5b6bc01b6c580c8c480f3ea,7a6f520ee11370fd5e27f4ac0f87f65ebbbd5e7f,Kurt Kluever,Tue Oct 23 19:17:51 2012 -0400,Break up Collection test suites and put tests for a class in...the tests for that class.
807bf518b883ee1e2fe0d6b859c046e96471f5bc,59dbf4eaf7dcf4c07cb6d876c1d7c12e6ef8ba6a,Kurt Kluever,Tue Oct 23 19:15:05 2012 -0400,Make ListeningScheduledExecutorService.schedule* return a ListenableFuture (Originally from CL 23008243 by way of CL 22474051) Make FakeScheduleExecutorService a ListeningScheduledExecutorService ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35973933
59dbf4eaf7dcf4c07cb6d876c1d7c12e6ef8ba6a,dec6db5cab54c56d7ebb86bd309dc49f103b3894,Kurt Kluever,Tue Oct 23 19:13:57 2012 -0400,Guava issue 1012: Sets.filter for NavigableSet ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35956146
dec6db5cab54c56d7ebb86bd309dc49f103b3894,b0cbbf5aa492b86d67963e3be730164ad8857536,Kurt Kluever,Mon Oct 22 15:52:53 2012 -0400,Adding ForwardingBlockingDeque, as it's a natural fit for Guava and something which is currently missing from the library. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35939897
b0cbbf5aa492b86d67963e3be730164ad8857536,f25703b0aac57d3a5fa290d87e90bfe54e635dc2,Kurt Kluever,Mon Oct 22 15:49:26 2012 -0400,Migrate BiMap-filtering methods out of Labs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35880650
54a6c77084316f6783f9552fa4dc48a631e15327,21b1788ae0640a3c7f12bb6246c7a68b7c9f698e,Colin Decker,Fri Oct 19 14:17:16 2012 -0400,Revert GWT emulation of HashBiMap to simpler version using two HashMaps that's better for GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35829480
21b1788ae0640a3c7f12bb6246c7a68b7c9f698e,372aa2bc1636fb197107a10452c21dc5d7ff2b49,Colin Decker,Thu Oct 18 16:29:47 2012 -0400,Second try at adding MoreExecutors.platformThreadFactory(). Now if ThreadManager.currentRequestThreadFactory() throws, we fall back to Executors.defaultThreadFactory(). In particular, this happens when AppEngine is running in this JVM, but there is no AppEngine context for the current thread (i.e. we're "outside" appengine).
372aa2bc1636fb197107a10452c21dc5d7ff2b49,1d7e8094c834ba5468a887e947f1fed941bf35d2,Colin Decker,Thu Oct 18 16:29:47 2012 -0400,Add more thorough tests to MultimapTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35614504
1d7e8094c834ba5468a887e947f1fed941bf35d2,f75fbdcc8c66deb3da30f809780850a2612de4d8,Colin Decker,Thu Oct 18 16:29:47 2012 -0400,Cancelling a successfulAsList() Future should not produce an exception (even if that exception is merely logged). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35580495
c7151beeaf6399cfe596775f8eab36e4e1640cc3,b14568dd0d3facf181727b99ffd3950925d2e6cb,Colin Decker,Wed Oct 17 14:38:35 2012 -0400,Rollback MoreExecutors.plaformThreadFactory(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35478665
b14568dd0d3facf181727b99ffd3950925d2e6cb,e23af4d40fb9d2951888369d7ba27f58f64775fa,Colin Decker,Wed Oct 17 14:38:31 2012 -0400,Update Mozilla PSL. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35437775
4e9879bdc324a84617872f9cc2a321b7cde5bce1,b9e7802ee61a79dac3a698beab94fd5a72ee5cdd,Colin Decker,Wed Oct 17 14:38:31 2012 -0400,Add MoreExecutors.platformThreadFactory(), an AppEngine-aware version of Executors#defaultThreadFactory.
b9e7802ee61a79dac3a698beab94fd5a72ee5cdd,f46a285c91b2b08771d3c5e07e1050fc78d4bde1,Colin Decker,Wed Oct 17 14:37:59 2012 -0400,Add GWT src-super for HashBiMap change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35367257
f46a285c91b2b08771d3c5e07e1050fc78d4bde1,457c2bc7ff83e9b10d8ece8a53d0dd7d3d734f6f,Christian Edward Gruber,Mon Oct 15 11:53:30 2012 -0400,Basic implementation of ImmutableMap.asMultimap() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35373012
72a25f66b25db2c957bf8f287c2e54baf418d514,31eea6c64a866768951935652d824429aeba3e9f,Christian Edward Gruber,Fri Oct 12 13:03:36 2012 -0400,Rewrite HashBiMap to share entries between the forward and backward maps, yielding ~38% savings on memory.
f3ea6b8cc3ce10b4cc825b77592720c6f6b726e9,62dbc59f8ddc0ab9d29be7637f650452605da26c,Colin Decker,Tue Oct 9 11:27:19 2012 -0400,Add a benchmark comparing CRC32 and Adler32 hashing using the Checksum API directly and using the common.hash API. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34984248
62dbc59f8ddc0ab9d29be7637f650452605da26c,403eedc3226a59bb362269d5bbe27a1e3d8c1b79,Colin Decker,Tue Oct 9 11:25:51 2012 -0400,Implement DescendingImmutableSortedSet, a skeleton implementation of ImmutableSortedSet.descendingSet(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34936379
067c6a6a70ef7247869cd66e658f2a42047e4f3c,0713c76d622ff2bc814fcf80d46fee281d53e706,Colin Decker,Mon Oct 8 12:14:11 2012 -0400,Delete TransformedImmutableSet, which was a skeleton abstract class with only one subclass anyway. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34859558
45feb0e0aeffa0b8f325f25ecf7bd4567fb30d89,529b84581685a6ee66d6325f725f60d1e416515a,Colin Decker,Mon Oct 8 12:11:34 2012 -0400,Rewrite TreeRangeSet implementation to use its own, smarter complement implementation.  Most notably, complement().encloses(Range) is now a logarithmic-time operation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34639480
90c5b3cd41a7fb26f3ab6e8d27e6d330944806f3,47ab2d51c2d3bf4e72e85f597162f987f4702d1f,Colin Decker,Fri Oct 5 18:13:15 2012 -0400,Add a microbenchmark for c.g.common.base.Joiner and other common implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34581745
dbf40d91e623fd213fb2ea1b6c34910908a923c6,7d27d54759407ece6af40e20658066f4bf90bc30,Colin Decker,Thu Oct 4 11:37:51 2012 -0400,Add equals/hashCode to Suppliers, and tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34552771
15cef0c1be23bc6e878b79837174e6674017baa0,567ba59e507379edffd48e29b0de52bd8e79e378,Colin Decker,Wed Oct 3 14:09:07 2012 -0400,Speed up notably slow math tests for GWT's sake. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34540675
00ca4574869439d67450b0cc85e45026386be4df,ff2ca013a982d14b7faa229d2d93b35efb2331bf,Colin Decker,Tue Oct 2 18:19:24 2012 -0400,Add Java Checksums (CRC32, Adler32) to Hashing.
e6c7968848997ad1e4ed64db0fd8d22e276b16b8,507e694274947e3ef4dcecc45695a447330e6456,Colin Decker,Tue Oct 2 18:19:07 2012 -0400,Applied package sanity tests to common.math ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34503919
54c7c7039143abfd983c4a30b70d37c714d0d715,8a1f32cb22777269b18a4111e8bfb7bea71f6814,Colin Decker,Tue Oct 2 18:18:33 2012 -0400,Applied package sanity tests to common.eventbus ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34501606
7a1afaf1673aceddb8eca2e34a04a3ead0c2ed34,0896afdf582d0dc281f8419f24c1faa4916c010b,Colin Decker,Tue Oct 2 13:22:18 2012 -0400,Make ArrayTable gwt compatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34495130
b3b6b1d3ceb35de964d6403c5cc291c980f5478f,2f93b7811a6d05b6c18522f8b0e1f3e9d63bcfad,Colin Decker,Tue Oct 2 13:09:57 2012 -0400,Implement ImmutableRangeSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34454241
783fca80052b1be76ca83150f982eeabfbc821f8,b2a154664ce880b2ccf77ddb00f6a655437ebdf1,Chris Povirk,Fri Sep 28 17:33:03 2012 -0400,Replace SingletonImmutableMap with SingletonImmutableBiMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34396548
835a7397fabb05a764a8008f4151c97f821a29ef,0cc8b996680f45a294ed3417571a9900c2bb66f9,Chris Povirk,Thu Sep 27 12:15:16 2012 -0400,Implement ImmutableEnumMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34322860
86aa9f060deed8a128608e1b16e25a8e188aba7e,79f5075f169470c9b0ea42824ff2cfee521db54e,Chris Povirk,Wed Sep 26 13:40:39 2012 -0400,Implement Sets.cartesianProduct to iterate in lexicographical order.  In the process, Lists.cartesianProduct has been implemented on a package-private basis. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34279184
cc5366d288560046ba808761a70b8844db0f4115,dd22f0902a1a5dcd04d4d6d997faa486c923627d,Chris Povirk,Mon Sep 24 18:14:07 2012 -0400,Applied package sanity test to common/collect. Had to add publicApiOnly() because there are a lot of package-private classes that should either not be tested (the shim classes) or are already covered by another test, like the various *ContiguousSet classes covered by ContiguousSetTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34235956
dd22f0902a1a5dcd04d4d6d997faa486c923627d,3b5931ebc2b2e385cf7fa5925b97ba53377c70ec,Chris Povirk,Mon Sep 24 16:00:31 2012 -0400,Improve consistency of Javadoc for Multisets.union/intersection/sum/difference, highlighting how they differ and the mathematical operation each is based on.
3b5931ebc2b2e385cf7fa5925b97ba53377c70ec,515808097d372fbc3cbb1ea8a42097722ab86707,Chris Povirk,Mon Sep 24 13:51:57 2012 -0400,Add Multisets.union. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34224294
515808097d372fbc3cbb1ea8a42097722ab86707,ea1dee6d01bc1dea52cc2a09140be28f15c7967d,Chris Povirk,Mon Sep 24 13:35:24 2012 -0400,Add Multisets.sum and Multisets.difference. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34223499
a3df035531ff51546466335635e72500a7a95348,0cad3f743ebf787cd50d762ca024fc6995df3c40,Chris Povirk,Mon Sep 24 13:06:25 2012 -0400,Makes FreshValueGenerator more friendly to collection types especially immutable collection types. This reduces false positives and also reduces the need to set sample instances for collection types. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34163462
c49086946f6bc82689d6b1d273de4e7e02091d7f,9d265ad9f7814355df061a4a897c95c4544d611d,Chris Povirk,Mon Sep 24 12:59:49 2012 -0400,Optimize Ordering.leastOf().
4ab9205558043640770fa5888c56ff3e639903df,b59f363f5a3d8ce18637f4ad1b53a559ad2c5643,Kurt Kluever,Thu Sep 20 14:20:35 2012 -0400,Added testEquals() to AbstractPackageSanityTests.
b59f363f5a3d8ce18637f4ad1b53a559ad2c5643,76a9837992dbb4e4509e3445129521cb440db7da,Kurt Kluever,Tue Sep 18 20:07:54 2012 -0400,Refactor RangeSet into an interface and an abstract skeleton ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34047917
d8f98873aa2449c056dc1b145e35e898d128e544,a990ff7317596a86537fbe78f5ee513c05f23c07,Kurt Kluever,Tue Sep 18 20:03:28 2012 -0400,Eliminate EmptyImmutableMap, using ImmutableBiMap.of() everywhere instead. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34006338
54a16dda14ba2892574f50016a37947784d668b7,c8730f9ef8e5e767e7d6331dcce8ba6ddb808326,Chris Povirk,Tue Sep 11 12:33:21 2012 -0400,Change the default executor of the AbstractScheduledService so that it is shutdown when the service reaches a terminal state.  This ensures that a stopped service cannot prevent the JVM from exiting. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33759240
ec5a8f11d23c88d9dcac9a7c361e3f5bc7281dce,96bf55c5668041ce99b9dbd33d79128304acc2fe,Chris Povirk,Mon Sep 10 14:15:23 2012 -0400,Extracted FreshValueGenerator from ForwardingWrapperTester to a stand-alone class so it can be reused for automated equals testing.
4fa019eb30ecddc4790c890dcd2e0992cb8d6806,6e54496483e64309430a0d54cbf24d9440e77bb3,Chris Povirk,Fri Sep 7 16:22:06 2012 -0400,Fix thread-safety of EventBus.
6e54496483e64309430a0d54cbf24d9440e77bb3,76357ba760c72630dcba79c0164fdbb6b963ff05,Chris Povirk,Fri Sep 7 16:18:29 2012 -0400,Added AbstractPackageSanityTests to apply automated sanity tests for an entire package.
76357ba760c72630dcba79c0164fdbb6b963ff05,764dc1c8004cf1ddd9e8571323b54259ce90d0a3,Chris Povirk,Fri Sep 7 16:14:55 2012 -0400,Changed AbstractInvocationHandler#equals() and hashCode() to delegate to the invocation handler, to allow customization. I needed it to create dynamic proxies that works for SerializableTester.reserializeAndAssert(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33639720
764dc1c8004cf1ddd9e8571323b54259ce90d0a3,cce57e79b54651567f0fede33f2ad4348a30ff60,Chris Povirk,Fri Aug 31 16:09:35 2012 -0400,Release Futures.withFallback to Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33473424
cce57e79b54651567f0fede33f2ad4348a30ff60,ae758e0347c5ca9cee84c5738411852c4960bd2f,Chris Povirk,Fri Aug 31 16:06:36 2012 -0400,Reconcile the cancellation semantics for Futures.combine, successfulAsList, allAsList, and withFallback to be consistent with Futures.transform.  Now, all cancellations are back-propagated to the input futures.  We also expose the interruption state in AbstractFuture with a protected method.  To ensure the interruption state is correct and threadsafe, we add an additional state to AbstractFuture's inner Sync class to atomically distinguish between cancelled and interrupted. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33468640
ae758e0347c5ca9cee84c5738411852c4960bd2f,9e56171b52b8a6019f488974dfef05603903ee21,Chris Povirk,Fri Aug 31 16:03:30 2012 -0400,Add tests for ConcurrentSkipList{Map,Set} and for a TreeMap with no comparator. The latter requires suppressions for the same reason that our no-comparator TreeSet tests do: The first element is wrongly permitted to be inserted even if it's null. Also, fix up a few misnamed methods and a copy-pasted doc comment. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33468471
9e56171b52b8a6019f488974dfef05603903ee21,d024c5066fb410169350f8a62668d9fbf075a3e4,Chris Povirk,Fri Aug 31 11:11:34 2012 -0400,Changed NullPointerTester to use Invokable ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33440442
d024c5066fb410169350f8a62668d9fbf075a3e4,6995e685d84ad06cb8632517fdbc487246183a95,Chris Povirk,Fri Aug 31 11:11:14 2012 -0400,Added  TypeToken#method() and constructor() to return Invokable<> with types resolved;
b84265625c1f685c855cca2458ee99f418f2845d,8f48177132547cee2943c93837d76b898154d722,Chris Povirk,Wed Aug 29 18:12:31 2012 -0400,Graduate labs.reflect.Invokable and labs.reflect.Parameter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33397919
20ffd6da5a0dbdea592cc9db648bb10ece5941a8,e0dfd519ba1f707f517e5423634371f2f15fcb2b,Chris Povirk,Tue Aug 28 18:39:17 2012 -0400,Benchmark Splitter#on char vs String length==1, char wins by a bit ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33356556
e0dfd519ba1f707f517e5423634371f2f15fcb2b,917b46b8e54e554524555e547e9c9c2373104f1a,Chris Povirk,Tue Aug 28 14:39:54 2012 -0400,Added ClassPath for exploring class path from a given ClassLoader. The class.path system property is what the system class loader uses. The 'meat' of the code is actually copied from AbstractModulePackageInfoSource from test suite builder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33345052
d13f68f9a102bfacedb7bbbc6837b63342966633,f765a77000e4a65abadb7073e5282f08c3bc99fb,Kurt Kluever,Thu Aug 23 19:48:49 2012 -0400,Make ServiceManagerTest @GoogleInternal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33204393
f765a77000e4a65abadb7073e5282f08c3bc99fb,aa476d6a91520d3e52f652a3974bce3ac4fb805d,Kurt Kluever,Thu Aug 23 19:48:04 2012 -0400,Implement ServiceManager, the new better CompositeService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33185556
aa476d6a91520d3e52f652a3974bce3ac4fb805d,e0e16abaa961f819426bea28743841222679d4dd,Kurt Kluever,Thu Aug 23 19:47:18 2012 -0400,Add an autoIncrementStep to FakeTicker, similar to the autoIncrementStep in FakeClock
e0e16abaa961f819426bea28743841222679d4dd,ce1cff2cc01e8914af1085c0c41ccc4352f22555,Kurt Kluever,Thu Aug 23 19:45:43 2012 -0400,Added forwarder tests for various Forwarding* classes in util/concurrent. Added ForwardingObjectTester to test any subclass of ForwardingObject. Since it has to use EasyMock partial mock, I had to place it under javatests/. Along the way, fixed a few oversights in ForwardingWrapperTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33148165
595d06ebec81b7b695e557f57f5f754e06d390db,3b9b68187965f2c16f7f3e85ae3cbbff36431dae,Kurt Kluever,Thu Aug 23 19:43:26 2012 -0400,Add Futures.allAsMap and Futures.successfulAsMap as analogues to {all,successful}AsList. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33120330
3b9b68187965f2c16f7f3e85ae3cbbff36431dae,1101d3ffa6fb2a74c00258ee9bda9e1b4df0ed1d,Kurt Kluever,Thu Aug 23 19:42:40 2012 -0400,Added ForwardingWrapperTester to test forwarders. It lacks guava annotations. Please advise. Thanks ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33116315
fa58649127265dd91f3b2b947b4fc27a7fd89c59,c399bb5be8c6b477656a31927545dbd46eafbc7d,Kurt Kluever,Tue Aug 21 00:30:58 2012 -0400,Remove final switch from CaseFormat. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33061765
6005ac6c861ca93c8c57239522357318d6cec894,08d3526fc19293cf099e0c50dbf3bbc915f2e3f2,Kurt Kluever,Tue Aug 21 00:28:43 2012 -0400,Added null check from NullPointerTester-generated proxies.
08d3526fc19293cf099e0c50dbf3bbc915f2e3f2,bece04b513ab288376d66fbf6e9999091e364d25,Kurt Kluever,Tue Aug 21 00:27:59 2012 -0400,Copy LimitInputStream implementation to ByteStreams. Deprecate LimitInputStream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33000215
bece04b513ab288376d66fbf6e9999091e364d25,3bb7e198e8a73f4932fa92c679e7a0861480a9d3,Kurt Kluever,Tue Aug 21 00:27:13 2012 -0400,Add method to CaseFormat enum instead of using a switch. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32995795
a62c8082b9cd897becaf67550667e427c09efd5a,09c626ed9f63b409692c81c65febedd45e362a14,Kurt Kluever,Tue Aug 21 00:20:27 2012 -0400,Add toMap, index and uniqueIndex to FluentIterable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32953942
a0069d290f4fb061bd9c8a918357389a25e0025a,1af87fe81cd282cf8593066ca2f9fa690092bd78,Kurt Kluever,Tue Aug 21 00:18:58 2012 -0400,Some more tests for MoreExecutors ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32929661
1af87fe81cd282cf8593066ca2f9fa690092bd78,e8959ed0f4f1617c22668e55a7f4989b751b776a,Kurt Kluever,Tue Aug 21 00:17:30 2012 -0400,Rewrite Futures.immediate*Future with simple immutable Future implementations, and change Futures.immediateFailingFuture to not rethrow on Error.  This speeds up the creation of immediate futures by a factor of 10, which is significant for, e.g. the upcoming asynchronous cache, which uses many more immediate futures, particularly for the translation layer between CacheLoader and AsyncCacheLoader. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32923067
776dbe60960fc16412142001804a427131d9ba05,4ff74fe7e9378cf3de1ec5c164ba50dd9db654d8,Kurt Kluever,Tue Aug 21 00:15:59 2012 -0400,Add ByteStreams#limit(InputStream, long) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32916484
4ff74fe7e9378cf3de1ec5c164ba50dd9db654d8,e276741577ff69f2bd37de5abe4369df65a14edb,Kurt Kluever,Tue Aug 21 00:15:15 2012 -0400,Delegate the Ranges implementations to Range.  (I don't know why I didn't do this in the first place.)  Also clean up common.collect code to use Range and update the docs throughout.
e276741577ff69f2bd37de5abe4369df65a14edb,fb8059d8e01b69600ec5f489543742cd09ddae63,Kurt Kluever,Tue Aug 21 00:13:45 2012 -0400,Added some tests covering some edge cases in Futures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32879297
963e8a39ace0e027d2544a5c19c8ca75ee3334c6,d8bba0411227ef89ec2a0553e1a33a3a9f8f6559,Christian Edward Gruber,Mon Aug 13 16:59:26 2012 -0400,Add tryParse implementation for Doubles and Floats.
99d4056a60fb19b277518bac594bac3415d881c5,10165243c859057a926263a9bffa31d5127881a7,Christian Edward Gruber,Mon Aug 13 16:46:48 2012 -0400,Added idempotence test to ExecutionListTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32776278
ee75797a03415a1f42c0237fd140691ce9249deb,4135d369da714b34a293f52bbe81ca28eaab3423,Christian Edward Gruber,Mon Aug 13 16:34:43 2012 -0400,Fixed a race deadlock bug in AbstractServiceTest: when notifyStopped() is called after getStateHistory(), the latter takes the synchronization lock and also waiting on the latch; the former cannot count down the latch because it can't grab the synchronization lock. Also added missing tests for throwing exception from doStart(), doStop(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32768098
557bd5139be6ab5575a8674caa10a2cb54b23ae0,6e66293b8d3899ef3b3b3445123a5fe6cb065595,Christian Edward Gruber,Mon Aug 13 16:26:40 2012 -0400,Added tests for stop-while-starting and stop-before-start to AbstractExecutionThreadServiceTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32766077
6e66293b8d3899ef3b3b3445123a5fe6cb065595,b9a4d75354aa1e45021d152e82e6797f84d2e3f4,Christian Edward Gruber,Mon Aug 13 10:34:52 2012 -0400,Add exception unit tests for AbstractIdleService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32745827
b9a4d75354aa1e45021d152e82e6797f84d2e3f4,f7382c77eed0cb9231b73cbe0378987bee18bc5e,Christian Edward Gruber,Mon Aug 13 10:30:27 2012 -0400,Add to[Set, etc.] methods to replace the toImmutable[Set, etc.] methods on FluentIterable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32739379
5e983f3030df67659b3f5ea48dd659173f6cd0a4,85cc9fd3ab8fff110d00436778ad3aeb6cfb21da,Christian Edward Gruber,Thu Aug 9 18:41:09 2012 -0400,Use File API for getting extension rather than simple string parsing. Add NullPointerTester and fixed the surprising number of casings where we weren't checkNotNull'ing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32708936
85cc9fd3ab8fff110d00436778ad3aeb6cfb21da,4c88a393a8ea0ca9c96ff7b441211326b9379424,Christian Edward Gruber,Thu Aug 9 18:40:50 2012 -0400,Adds Queues.synchronizedQueue (@Beta) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32690991
4c88a393a8ea0ca9c96ff7b441211326b9379424,cc58fac6cd000bcf73f5544d9eb3e23d00573863,Christian Edward Gruber,Thu Aug 9 17:50:17 2012 -0400,Further CharMatcher optimizations, eliminating more unused code and especially identifying when the negation is better to precompute than the matcher directly.
cc58fac6cd000bcf73f5544d9eb3e23d00573863,7a4dbb34caf46ab31b18ba9d944d5c5a86c1baf1,Christian Edward Gruber,Thu Aug 9 17:45:57 2012 -0400,Add missing c.g.c.collect.testing manual emulations. Withdraw c.g.c.escape manual emulations. Add internal tests that make it less likely that we'll miss manual emulations in the future. (It's still pretty likely, though, since the error occurs only if someone creates the fileset and associated test but forgets to update the build rule....) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32681009
7a4dbb34caf46ab31b18ba9d944d5c5a86c1baf1,ae1843743b5771b69961e118ef9b845ef5549c51,Christian Edward Gruber,Thu Aug 9 17:41:24 2012 -0400,Split CloseablesTest into CloseablesTest and FlushablesTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32662484
5fe4eb68ef980694d8cbbeb34a6914c05696cee7,2b9233884efbf6b5e79a77c61c043a58403157be,Christian Edward Gruber,Tue Aug 7 14:52:27 2012 -0400,A few small cleanups to BloomFilter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32612086
ecfa6f67f323c23f10a1ceed7596e095618fa044,31149b438ec49d6f98123e11d1666c545ba18f90,Colin Decker,Mon Aug 6 14:41:30 2012 -0400,Copy factory methods from Ranges to Range. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32544574
aa3ae3bec18db352d23ff77672d066e5b022f056,6510d48005dd21d67f7655eae0689a6104117642,Colin Decker,Fri Aug 3 13:26:05 2012 -0400,Expire entries at insertion+duration instead of insertion+duration+1 to be consistent with the GWT emulation and, we hope, with common sense. Update tests that rely on the current expiration behavior (as identified by global TAP). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32533539
49eb0f4d7efcd9f2e1c07c4b19f9342457943aec,26eace75a0b5cb8ce765b4f3f5ebcedaf198bfb4,Colin Decker,Thu Aug 2 18:49:40 2012 -0400,6799892: Add FinalizableReferenceQueue.close method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32452934
60b819dc1291788a3dce17cd95d8f4a7d0a8b9bf,52e80110a3beaf786167ab689ae52aa24f4f4b68,Colin Decker,Tue Jul 31 21:30:14 2012 -0400,Total rewrite of emulated CacheBuilder to emulated LocalCache. Features added include recordStats, expireAfterAccess, ticker, and removalListener.
52e80110a3beaf786167ab689ae52aa24f4f4b68,6d877d9216c9687a4c2065201b3c18e8d43f7e39,Chris Povirk,Fri Jul 27 18:00:45 2012 -0400,More tests for ObjectArrays. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32321913
464b0cfab7c3b6713c35e6f3ae7426542668c77b,107f0ade32cf19661befb9359159227464ab4065,Chris Povirk,Fri Jul 27 17:15:19 2012 -0400,Guava issue 1049: minor optimizations for CharMatcher
107f0ade32cf19661befb9359159227464ab4065,dfc51048f5493eb483f323bb427eef3d76e4685f,Chris Povirk,Fri Jul 27 17:07:18 2012 -0400,Automated rollback of dfc51048f549.
dfc51048f5493eb483f323bb427eef3d76e4685f,c19946804421d2319eab08987f914dd6536c3beb,Chris Povirk,Fri Jul 27 15:44:46 2012 -0400,Changes implementation of emulated CacheBuilder and instead emulated LocalCache. Features added include recordStats, expireAfterAccess, ticker, and removalListener. RefreshAfterWrite was implemented but removed due to reliance on reload() and returned futures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32318049
7b176de81383878df912e715a2f308550e05d2d1,92d87c98a24b147a4290e970288fc1cd4d040e0f,Chris Povirk,Thu Jul 26 15:04:22 2012 -0400,Add Maps.asMap(NavigableMap, Function) to complete the set of asMap views.
84f2f1c4e6ffb73f97705ca6b22feecd178748e5,bf177f504cc8732d7259980bb067e12f72cd114a,Chris Povirk,Wed Jul 25 15:38:33 2012 -0400,Use normal, compile-time @GwtIncompatible stripping instead of unusual, runtime UOE throwing for getMethod calls. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32236275
41301671896d0755f6f04b2b61e7e9a2a8b86410,81abc0864e77e320c47d16b7da00097c6c87c677,Chris Povirk,Wed Jul 25 13:52:22 2012 -0400,Expose {Int,Long}Math.mean in Guava 14.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32230548
28ad89ad97af3800cdb335d973e8f2064a1137e4,ecac7768c22ab1d4093b6a00b16aca1d067e5f08,Chris Povirk,Tue Jul 24 18:15:34 2012 -0400,Remove AbstractLinkedIterator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32198902
7bb7ca9ab7e5b4ce7f43249c57b58a16f8c4bc4f,51ce6ddf7a1c10a558a534789ee5027e4a3edc01,Chris Povirk,Tue Jul 24 10:35:15 2012 -0400,Remove c.g.c.base.Equivalences. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32160887
2fdf6321178d99e7a13fd9ce31de7b459c95957a,cc36cdedb53cc4d2fb3efb897c2d3c4a30535b0e,Chris Povirk,Mon Jul 23 18:44:57 2012 -0400,Assorted cleanup: - Remove out-of-date CharMatcher comment. - Merge ContiguousSetNonGwtTest into ContiguousSetTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32157893
f2242dbc8a99accda1f70c0f178cfa5f5b847dc8,f51d8fa33a59b6f817fabffbe729a8992359e15f,Kurt Kluever,Tue Jul 17 14:15:48 2012 -0400,Updating putString(String) spec and default implementation, to avoid forcing implementations to inefficiently deal with unpaired surrogate characters. This is an incompatible change for inputs with such characters. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31932872
f7c152e19c6df9a7b28ee3a41f1a1c3d71491a23,514296296fb73c8bb5821beec3a9089801313de0,Kurt Kluever,Mon Jul 16 14:29:51 2012 -0400,Remove unused code. From Louis: http://codereview.appspot.com/6343051/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31920587
514296296fb73c8bb5821beec3a9089801313de0,9a351e61a59c83dd4ec00adc0a1518b7731c1ff3,Gregory Kick,Fri Jul 13 10:56:58 2012 -0500,Made TypeResolver @Beta and added clearer document. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31858151
9a351e61a59c83dd4ec00adc0a1518b7731c1ff3,52f8d08af67b86d479498bfac62d1915c6c0d1c9,Gregory Kick,Fri Jul 13 10:56:58 2012 -0500,Rephrase to stop suggesting that there are only two overloads of transform(). Also, publicly release a comment in the Future.addListener Javadoc about addCallback, which was publicly released in Guava 10 (and already mentioned publicly elsewhere in the ListenableFuture doc). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31833262
314727b81a4f45210ab53ebd46b695150ea36f8c,eebb4d038a9fa2b9780e5c5d0fc046aeadb08c9b,Gregory Kick,Fri Jul 13 10:31:09 2012 -0500,Fix a bug with CharStreams.copy not clearing its buffer after reading.
9fe3f63fdfabcfd57676fc709928ae2ccb891cd2,d5ae395da2e15d222db7a4e36145d375843e0c05,Gregory Kick,Thu Jul 12 09:56:27 2012 -0500,Add SortedSet overload for Maps.asMap(SortedSet, Function).
db5977647f55e4e8065d3971d216f0a0d1a42541,a7e1248b491f0e5067686555e33e45e2ffc60a0a,Colin Decker,Mon Jul 2 17:31:19 2012 -0400,Remove MapMaker: strongKeys(), strongValues(), and valueEquivalence() from MapMaker and friends. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31583111
7eec09ede5fa6ccdb1cb19558833c6857b037171,4f08e59ad9541f9d3f8fad6addbc9fed7aaf00cb,Colin Decker,Mon Jul 2 12:37:51 2012 -0400,Introduce an immutable object to encapsulate the mutable state of AbstractService.  This will allow us to perform state queries (isRunning, failureCause, state()) without grabbing a lock.
0361f84dc72d8e55d458cb814f9397fb3a980cba,8d5659ad0e137d3a594014793264292a75b48bb9,Colin Decker,Mon Jul 2 12:36:29 2012 -0400,Change the AbstractService so that listeners are called without the lock held. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31519707
8d5659ad0e137d3a594014793264292a75b48bb9,59e0fa707b40686406ea2c9812785391beb13367,Colin Decker,Mon Jul 2 12:35:48 2012 -0400,Fix 2 bugs in the AbstractService implementation of listeners. 1. Ensure that the futures are updated before listeners are called consistently 2. Fix a bug that would cause the running() callback to be invoked when the Service was transitioning from STARTING -> STOPPING directly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31519336
59e0fa707b40686406ea2c9812785391beb13367,feb65a5d30e43d8b4198c150c764b588aa337bd9,Colin Decker,Fri Jun 29 11:08:02 2012 -0400,A few small cleanups to the murmur3 hash functions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31507627
feb65a5d30e43d8b4198c150c764b588aa337bd9,d4e7d7b6ffd6967264e907a73cb5fe709e20c8bd,Colin Decker,Thu Jun 28 15:30:51 2012 -0400,Open source a few more of the benchmarks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31487288
3da9b56d5a58247c15f1c55b5d9dd17d123d6163,46c545d7a79d375e37cc077aff8df7f72fd8a126,Colin Decker,Tue Jun 26 14:25:06 2012 -0400,Add @GI to failureCause overrides. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31400072
f280c64ba31c0e5271cfeac606713ab829416d81,7827f648225f88d47470d272f7b56b543f78d21d,Colin Decker,Tue Jun 26 14:25:06 2012 -0400,Optimize BigIntegerMath.log10 by using the log2 to get an initial approximation of the log10. From Louis: http://codereview.appspot.com/6329066/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31397137
a364f16500ab36088ce75aa86945c978ee2da3ff,4d4704e384b5505e058665d9620cd80dd05ad806,Colin Decker,Tue Jun 26 14:23:58 2012 -0400,Expose TypeResolverTest; various internal reshuffling. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31366061
d1000f80b04267f9d562fec407612f0a856d4a7d,21e013010b9de96f6a14107bd2ffc6da71bdcb26,Colin Decker,Tue Jun 26 13:56:36 2012 -0400,Add @since to Striped. Add @GI to Service#failureCause. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31355804
21e013010b9de96f6a14107bd2ffc6da71bdcb26,8634dfafb850b8150c14de0fc9c24cfcd05093cc,Colin Decker,Mon Jun 25 12:14:32 2012 -0400,Fix the formatting of the javadoc in j/c/g/c/util/concurrent/Service.  Rewrap everything to 100 cols. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31314728
749abea7237ad23efc4f0099619dcacfba411667,cdc0a08dc8f4b65b1a0597ce7c3cd1b3ef96c969,Chris Povirk,Fri Jun 22 10:33:55 2012 -0400,Update to latest Mozilla PSL.
cdc0a08dc8f4b65b1a0597ce7c3cd1b3ef96c969,8cc93151a9fa7d3c86bd5a1ec7e4665147493f8c,Chris Povirk,Fri Jun 22 10:31:03 2012 -0400,Delete Navigable* and Navigable*Test. Move transformEntries and transformValues implementations into Maps. Move synchronizedNavigable* implementations into Synchronized. Move unmodifiableNavigable* tests into MapsTests/SetsTests. Also, open-source synchronizedNavigable{Set,Map} tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31268670
36d07cffd58bc09fe7caff77dd1ea7d3dc64bf45,09582e5bebf124e27336568e8539efb2c0fcae3d,Chris Povirk,Wed Jun 20 18:51:19 2012 -0400,Graduate Sets.filter (SortedSet overload) from @Beta. Graduate Maps.filter* (SortedMap overloads) from @Beta. Graduate Multimaps.filter* from @Beta. Release CycleDetectingLockFactory as @Beta. Release UnsignedLong_CustomFieldSerializer to make UnsignedLong GWT-serializable in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31229567
179325f2eda54c77305bced834a2d87a9255dc85,99c2135a38efa787e2b85bb0ca24ffb0244d21a4,Chris Povirk,Wed Jun 20 12:29:36 2012 -0400,Begin migrating methods from Navigable{Maps,Sets} to {Maps,Sets}. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31212696
7c773aad63e3433cdd128dc99b947439e5f678b5,3d812f0b4dd11b055b5b372e4947b1cab21caa7b,Chris Povirk,Wed Jun 20 11:40:07 2012 -0400,Release HostAndPortTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31209654
3d812f0b4dd11b055b5b372e4947b1cab21caa7b,e9f938f5698467f14e43c48f3b9a7db4a5d00dde,Chris Povirk,Tue Jun 19 18:22:09 2012 -0400,Add a state transition listening mechanism to Service and implement in AbstractService.
cb140e39acac7da75a7f28bcf406c9ff9086c7cf,0f400b0ddb59279c5dbf5427e336b47bb8bdd89d,Chris Povirk,Tue Jun 19 17:31:04 2012 -0400,Release RateLimiter as @Beta after cleaning up the todos a bit. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31183139
1fff815a61e85ea84ab45b353a15058320c6ba9f,3e6a1dff154c407fd38a45796a7c0caf28966ba1,Chris Povirk,Tue Jun 19 15:26:50 2012 -0400,Implement Maps.asMap(Set, Function) view.
18fb2a20cfc43d5e17b93fd2e683aeda468abf84,c2baa95a5dd23a4e0f061bcf17766e6619d5aadd,Chris Povirk,Tue Jun 19 12:28:05 2012 -0400,Open source lots of Caliper benchmarks! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31147973
33ba073c98f56b4918bf539af8b70c3f272b8943,c8a6b01dfdc58b8f1eab1d7e369656dc2981029f,Chris Povirk,Tue Jun 19 12:19:28 2012 -0400,Map *Benchmark.java files into guava-tests/benchmark (they aren't buildable externally yet, but will be some day). Open source a few Set-related benchmarks as a preliminary test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31143691
507da39b4b26d3b0abde85045dc2345e9f2f8c6e,49791e17582dcd77a73ebbc930e2109922231e29,Kurt Kluever,Thu Jun 14 14:04:52 2012 -0400,Added min, max, lexicographicalComparator tests ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31034294
730a302debc8b19c49bd84f57df7ba7d2534cc34,b01348bb5a1cee6848b64e52032c96bf3dc605a1,Kurt Kluever,Wed Jun 13 16:08:48 2012 -0400,Mark Hashing#weightedConsistentHash tests as @GoogleInternal ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31002683
63bbd7b239879a96614e03f3986f2c83f56850dd,7fb563e8edb365b8bd941b76eb94ca3bf091b090,Kurt Kluever,Wed Jun 13 16:07:30 2012 -0400,Added min, max, lexicographical comparator tests to primitives.UnsignedInts ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30995925
e09a9e3dca9880fe6c5a665d7a1824c823531512,f44ab11f78a1b9f86bb37de45bb6dfb1e0516507,Kurt Kluever,Wed Jun 13 16:02:51 2012 -0400,Add shortcut overload for Murmur3_32HashFunction#hashInt. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30962091
f44ab11f78a1b9f86bb37de45bb6dfb1e0516507,4424ba34bb857f158a81770b7f4a0741e5f0e114,Kurt Kluever,Wed Jun 13 16:02:13 2012 -0400,Implement Hashing.weightedConsistentHash(). See: [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30960525
21e01b8f8f207558c47d97cc3a2c091d318d8441,e98dd10dee2935c433e8447a7831bc6692f9b503,Kurt Kluever,Tue Jun 12 09:48:57 2012 -0400,Make methods of Ordering no longer arranged as if by Ordering.arbitrary(). (Ok, it wasn't *that* bad.) Improve class docs a tiny bit. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30928085
8aa1ffe7c36a9f19c052dde74f6368da998e822f,c888c6bbb226998980f3fe84587f1f0606578c88,Kurt Kluever,Mon Jun 11 13:50:44 2012 -0400,Implement UnsignedInts.decode, corresponding with UnsignedLongs.decode. From Louis: http://codereview.appspot.com/6285043/ (after which I extracted a common method on Kurt's suggestion) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30829538
c888c6bbb226998980f3fe84587f1f0606578c88,80fa49a2680e9e7331e959ad9ec8b85337584f7f,Kurt Kluever,Mon Jun 11 13:50:02 2012 -0400,Reimplement LinkedHashMultimap with a custom, memory-efficient implementation. From Louis: http://codereview.appspot.com/6250063/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30828656
80fa49a2680e9e7331e959ad9ec8b85337584f7f,0c5eab22a7165f89ce52dc1da692983cd2521f88,Kurt Kluever,Mon Jun 11 13:49:22 2012 -0400,Changed TypeToken.getTypes().rawTypes() to not rely on getGeneric*() methods, to work around the GenericSignatureFromatError.
0c5eab22a7165f89ce52dc1da692983cd2521f88,50aa85dbbbea3e3826a9d7e4c9de0fd3669c625d,Kurt Kluever,Mon Jun 11 13:48:42 2012 -0400,More extensive testing for murmur hashing (in prep for shortcut speedups). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30798282
965e65f7cd47fa659931e4094c72b291c065969d,2c92ede0ed264b70e19e2edc01b9b66e9b090713,Christian Edward Gruber,Wed Jun 6 16:20:18 2012 -0400,Marks the methods in Longs regarding byte array conversions as GWT compatible, and adapts the LongsTest to run the tests in GWT mode.
61e6a48a69ba09f65499d6e0394d448e9313777c,03afbea918471a1b536c0754b10719adc0317135,Christian Edward Gruber,Wed Jun 6 16:19:56 2012 -0400,Graduate Striped out of labs ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30662139
03afbea918471a1b536c0754b10719adc0317135,a1b8356ef94c66fdd805dbf7d92e7de5feec0909,Kevin Bourrillion,Fri Jun 1 14:41:37 2012 -0700,Optimize ImmutableList,Set,SortedSet builders.  In particular, uniquify ImmutableSet/SortedSet contents in-place, and make it so that if an ImmutableSet/SortedSet is initialized to the correct size and has all unique elements, then no copying is done at all.
e2e3183e4029103d8ecca116b23dc9d207bc4e42,254bde6e0064981420de3d2aa3b888934bda6df8,Kevin Bourrillion,Thu May 31 14:38:26 2012 -0700,Fixed recursion in toArray for a couple ConcurentMultimap view collections. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30610815
d59c3da61ed7746e8b5cb36b668b1991343ff2ec,c1bce61b17ac2ed6d4c8b492df5594de40b3ce04,Kevin Bourrillion,Thu May 31 10:05:34 2012 -0700,Added TypeToInstanceMap, ImmutableTypeToInstanceMap and MutableTypeToInstanceMap, mirroring ClassToInstanceMap. One major difference, is that put() and putAll() aren't supported. This is because there is no way to check isInstance() for generic types at runtime. In addition: 1. I added ImmutableTypeToInstanceMap.of() for empty map. I've wanted similar thing for ClassToInstanceMap in the past. 2. Omitted MutableTypeToInstanceMap.create(). With diamond operator coming along soon, do we still benefit from hiding default constructor and exposing static factory? For one thing, default constructor works better with reflection-based frameworks, such as ArbitraryInstances. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30580364
c1bce61b17ac2ed6d4c8b492df5594de40b3ce04,389a868730c09be1b33a36518f41ad35e11b4385,Chris Povirk,Wed May 30 10:11:58 2012 -0400,Multimap is up next in my quest to write new classdocs for every important class we own. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30550395
3634bd3831742e5edd5c58c0cf77bb36cd67617d,46fa75fb9486ccd18c4674d00a2e002224a98c74,Chris Povirk,Tue May 29 18:58:12 2012 -0400,Fix up a few odd style nits in the UnsignedLongsTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30541742
54577caba118a72b35be0bf73f2d4453ee026523,4f95e6ed7442be451a49207e103aa6a917d9737f,Chris Povirk,Tue May 29 18:45:16 2012 -0400,Simplify ImmutableSortedMap, reducing memory consumption and simplifying code. From Louis: http://codereview.appspot.com/6218056/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30531807
c7af92815a2ba50e1b4f46538cdd20f3a2da93d6,25fd8b3c09917cd7b66a4eb01cde57ca83db478f,Chris Povirk,Thu May 24 14:35:43 2012 -0400,A few small cleanups to the Murmur3 HashFunctions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30419610
f4c4b50a822b1870c266ed8b76108b336fe47ad8,a33efc80075ea37c3f76db14d71c7b0609b10bd7,Chris Povirk,Wed May 23 15:54:20 2012 -0400,Improved the code coverage of OrderingTest and removed an unused constructor. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30356104
06e76c06ea93a4c39f4e823a6ba8e0c4b3f67c97,a2f0856bfd7a9c3a70306c3cd91906a9ebb768d8,Chris Povirk,Tue May 22 13:25:08 2012 -0400,Rewrite the ImmutableSortedMultiset implementation for improved efficiency and reduced memory consumption. From Louis: http://codereview.appspot.com/6203097/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30340746
acc41e104e59a78b8ce8d2469e97ece32055b995,5abb71a345d73c3b7d670edf40b0ff564d767163,Chris Povirk,Mon May 21 15:53:59 2012 -0400,Adds ContiguousSet.create(Range, DiscreteDomain).  Follow-up CLs will remove Range.asSet(DiscreteDomain). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30308145
5abb71a345d73c3b7d670edf40b0ff564d767163,68cc7d92bb0335af1b58f0037fbe5270cc0155ba,Chris Povirk,Mon May 21 15:47:38 2012 -0400,#intFunnel() and #longFunnel() funnels, and a PrimitiveSink --> OutputStream wrapper. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30307214
68cc7d92bb0335af1b58f0037fbe5270cc0155ba,6de50d39a296a3d5f00779dbeaf3b520791b9cda,Chris Povirk,Mon May 21 15:46:43 2012 -0400,Copy Equivalences methods to Equivalence. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30304467
6de50d39a296a3d5f00779dbeaf3b520791b9cda,b7c9182e370d1f1f8e3cf43d675a961d7b3c0790,Chris Povirk,Mon May 21 11:55:06 2012 -0400,Move the invokeAny implementation to a static method that can be used by ListentingExecutorService that don't extend AbstractListeningExecutorService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30136643
b7c9182e370d1f1f8e3cf43d675a961d7b3c0790,f2aac46b0dfd4d77358e2f3b26223a55563621b2,Chris Povirk,Mon May 21 11:48:34 2012 -0400,bug fix: don't decrement count and send spurious notification when refresh+get are concurrent with invalidate ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30128702
bbb0cffbdeabc78dd212f2320bb8e1799f895c2e,c9547ca5b186ae058e75547a95899b33274b1483,Chris Povirk,Fri May 11 09:38:48 2012 -0400,NullPointerTester hasn't thrown Exception in a while, so stop declaring that all its users throw it. (My search for users was just plain grep, so I'm sure I missed some, but this is a good start, and I'm not sure it's worth the effort to seek out more, since that will take more than 30 seconds.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29954788
c9547ca5b186ae058e75547a95899b33274b1483,46b4996a7851b808d0faca9eb90472910feaeead,Chris Povirk,Fri May 11 09:33:35 2012 -0400,Export files that were missing from Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29933483
46b4996a7851b808d0faca9eb90472910feaeead,188d2dd30d8c41cd8ea7d0087bd105ad78c450d4,Chris Povirk,Fri May 11 09:30:58 2012 -0400,Many small improvements in common.collect. From Louis: http://codereview.appspot.com/6205045/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29932528
ba8284bdfab78f544222410ffd6c0598dd125496,02a6ca4b4753c2ec922b7acc8c4ab8f9444bed4f,Chris Povirk,Tue May 8 14:07:34 2012 -0400,Remove the unnecessary "bulk" operation Features from the TestSuiteBuilders. From Louis: http://codereview.appspot.com/6196048/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29883364
e630857e486cc8f8e4599b3c6de26e202044cd4e,57fe4b972a19dcbef798880f3de4559e5a6ea956,Chris Povirk,Tue May 8 14:07:32 2012 -0400,Introduce MultimapTestSuiteBuilder, hoping to eventually migrate from AbstractMultimapTest. From Louis: http://codereview.appspot.com/6123061/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29800810
57fe4b972a19dcbef798880f3de4559e5a6ea956,3a0ce24946eeb83239615dea83011672ccbd6c5c,Chris Povirk,Tue May 8 14:07:32 2012 -0400,Switch BiMap tests all the way over to BiMapTestSuiteBuilder. From Louis: http://codereview.appspot.com/6127058/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29799739
3a0ce24946eeb83239615dea83011672ccbd6c5c,86812e5acf9c82d9c3627bc4d956086759703023,Chris Povirk,Tue May 8 14:07:31 2012 -0400,Issue 972: Ordering.allEqual(). From Emily: http://codereview.appspot.com/6061053/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29799363
86812e5acf9c82d9c3627bc4d956086759703023,1b909536f390cb3f5814cea4440f935e16091af6,Chris Povirk,Tue May 8 14:07:30 2012 -0400,Admit that the TestSuiteBuilder classes aren't *really* GWT-compatible, despite our hacks to make them appear so. Move the derived generators into separate classes that *are* GWT-compatible. Also acknowledge that a bunch of suite() aren't GWT-compatible; GWT has been ignoring them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29798619
82d26584d7c6aeeaa29a478ee4c9f2f0af80c5c4,200c82944815465525ad87c759012b1ea7efc9f6,Chris Povirk,Tue May 8 11:59:46 2012 -0400,Implement basic capacity control for immutable collection builders.  We don't expose them yet, though, until the API is agreed upon. This will likely pay off with the in-progress immutable collection rewrites, which make much more use of each other's builders internally. From Louis: http://codereview.appspot.com/6092044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29762640
a36dbdaa5863d986cba3f68ceee27e9715490ccc,4e65ce73450ce04a77f6c03757de26210bf7622f,Chris Povirk,Tue May 8 11:09:13 2012 -0400,Optimize DenseImmutableTable so that it doesn't rebuild rows and columns on the fly. From Louis: http://codereview.appspot.com/6066046/
60ddd24e73fb9ee45a13907caf3a7ce219864297,577ff976b6c1fda0f0582ec445599e4ae9998f73,Kurt Kluever,Fri Apr 27 13:08:50 2012 -0400,Export more guava-testlib tests to Guava, and move already-exported guava-testlib tests under guava-testlib.
fc5979f45d14e21d61c52f2adf9d292d2d605dc4,1d10d2732792c001603c6050dfcba72e65e847e8,Kurt Kluever,Fri Apr 27 13:06:02 2012 -0400,Cleanup grab bag: - Findbugs warnings - compiler warnings (cast, generic array, unchecked) - Javadoc warnings - unnecessary @Beta tags for package-private classes - unnecessary Platform.newArray(Class, int) indirection - Guava copyrights - exception message typo - DerivedGenerator documentation - parameterized instanceof - import sorting in files already changed ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29598347
1d10d2732792c001603c6050dfcba72e65e847e8,3ef229071cacbf3559efc65a977955ec0c8612af,Kurt Kluever,Fri Apr 27 13:04:40 2012 -0400,Mark the two deprecated digesting methods as @GoogleInternal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29595646
3ef229071cacbf3559efc65a977955ec0c8612af,7d5825f96a618f0b7edf3054019e22dfd1910902,Chris Povirk,Wed Apr 25 17:39:43 2012 -0400,Guava issue 783: Fix handler finder w.r.t. subclasses and interfaces. From Louis: http://codereview.appspot.com/5389041/
7d5825f96a618f0b7edf3054019e22dfd1910902,5c0fcc82692e2691ee821612f785656bf18a0a9e,Chris Povirk,Wed Apr 25 15:08:10 2012 -0400,CharMatcher space improvements (Small = same trick used for Whitespace, Medium = traditional hash table, large = what we do now). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29564154
548f8698683cb282d8a8d5f5a140af63562cc740,ca91565c0f3692f8efabec10dd1febf5cf4fc97d,Chris Povirk,Mon Apr 23 16:33:46 2012 -0400,Minor simplifications to the ArrayTable implementation. From Louis: http://codereview.appspot.com/6057048/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29492178
24dbee52488621b0529ed0caa0b7128c050f32da,4077f6011814ef7db2a36671864beed21034ecdb,Chris Povirk,Mon Apr 23 11:15:21 2012 -0400,Rewrite TreeMultiset in terms of a traditional AVL tree, significantly increasing speed and reducing allocation. From Louis: http://codereview.appspot.com/5700055/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29480735
4347ab06e201f5de8d58624acbf914ee9015b6c6,ed38ec2fbd739995c79ca020bfcaf04d47082e42,Gregory Kick,Fri Apr 13 12:42:46 2012 -0500,Fix coverage runs by excluding FinalizableReferenceQueue ClassLoader-unloading tests from the normal suites. (I've confirmed that the test does still run despite the suppression, which applies only to suites.) I've also edited our project definition to exclude the new target from coverage runs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29201526
97f00f81899c0faf6e63f45a92715f9797ab5b82,7a795c36f53c13d8fd93a1b031a5c13be31160d0,Gregory Kick,Fri Apr 13 12:42:45 2012 -0500,Open-source RangeSet/RangeMap classes so that Louis can rebase his http://code.google.com/r/wassermanlouis-guava/source/detail?r=fb106087948b2c0da9f5f6ed610d2df3ebb0240a&name=rangemap on top of them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29159225
06cbdb1ed84f235b51fec6acc740d8261357545d,813d692929d7ce614a073ebf22c0c1a2669b43eb,Gregory Kick,Tue Apr 10 13:57:21 2012 -0500,migrate from AtomicLong to LongAdder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29046868
813d692929d7ce614a073ebf22c0c1a2669b43eb,75225d640fa4d95f602a1b6060e37ec9ef4d8373,Gregory Kick,Tue Apr 10 13:56:27 2012 -0500,don't allow garbage collected values to be "copied" ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29043800
75225d640fa4d95f602a1b6060e37ec9ef4d8373,6d9be3db16361b8389f30bbb4aea94c36d0bf81d,Gregory Kick,Tue Apr 10 13:54:35 2012 -0500,Improve ImmutableCollection.asList(), making more asList views delegate contains() queries to the backing collection. From Louis: http://codereview.appspot.com/5785044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29041788
98db310a151c40ca2b044d062a6d1ef230a8d6eb,c50f528b2b4648dc472545c6671f44c1b9145bf3,Gregory Kick,Tue Apr 10 13:52:44 2012 -0500,Fix Guava GWT module: - Issue 961: Release java.nio.charset.Charset module to Guava. - Remove bogus @GwtCompatible annotation from ForwardingDeque... and remove commented annotation from MinMaxPriorityQueue.  (IIRC, we have a hack in one of our many levels of processing that just looks for the literal string "@GwtCompatible.") ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29041128
35e669642cecbe40f32ad4b0c2b18b9ff10f6e89,77eed532e9313671b16449facccbb3938cc9ecff,Chris Povirk,Wed Apr 4 16:57:11 2012 -0400,Add DoubleMath.fuzzyEquals and DoubleMath.fuzzyCompare (Guava issue 725). From Louis: http://codereview.appspot.com/5924043/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28988303
42422ccbd626e58696bc7bf6e4cf89142aeb0df4,63c7f635199b45982c9bbd7d06a286a0bc3d1fba,Chris Povirk,Tue Apr 3 18:24:55 2012 -0400,Optimize DoubleMath rounding implementations, avoiding branches and expensive floor/ceiling operations where possible. From Louis: http://codereview.appspot.com/5976057/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28923961
ee40820afb25d447acfce175d41246495d1e6db2,e69bde4dda3b309dcc164aa7f4ab50cfe89e9193,Chris Povirk,Tue Apr 3 18:16:37 2012 -0400,Add parseUnsignedByte, toString, and MAX_VALUE to UnsignedBytes. From Louis: http://codereview.appspot.com/5907072/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28921581
f39ad80f7783ba8a1d019ce99046c267fec71bb8,b31535bc7551c8debf7ed27f7b98ec17df6cff4e,Kurt Kluever,Mon Apr 2 12:03:38 2012 -0400,- fix @links to point to LoadingCache - internally move LoadingCache methods out of LocalManualCache - clarify use of weight in maximumWeight ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28862370
4367e2ad3c72a38ebfba05b734267df81b795211,683a0e2832a38d8ca110b8b5ba25558a673a9a7f,Charles Fry,Thu Mar 29 17:21:46 2012 -0400,Use SortedMapTestSuiteBuilder and NavigableMapTestSuiteBuilder more widely. This requires two improvements: - Generalize NullsBeforeB, intended for use with test elements "a", "b", "c", etc., to introduce NullsBeforeTwo, intended for use with test elements "one", "two", "three", .... - Do not require SortedMap keySet() to be a SortedSet (as the interface doesn't require this). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28826718
683a0e2832a38d8ca110b8b5ba25558a673a9a7f,7a2d19a43e69ceb7623ee4d2749490a69c17f2ea,Charles Fry,Thu Mar 29 14:22:16 2012 -0400,Make SortedMapTestSuiteBuilder work under GWT. There is some restructuring and additions of trivial getters in the builders, but the only real code changes are in GwtTestSuiteGenerator (and the use in ImmutableSortedMapTestSuite). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28819226
e17759dcf1575e634058443bce106b34e15215cd,390065920f44c80e567b8c71e7feec1578e1a6fa,Charles Fry,Thu Mar 29 14:12:05 2012 -0400,Bunch of small style cleanups/code cleanups to InetAddresses. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28795487
4e23ecc8ae473ebe8aacd6fe5047c856ac4ebd02,561e50586995195031e1916d3cee995ec1850a16,Charles Fry,Thu Mar 29 13:51:08 2012 -0400,Make ImmutableSortedMap implement NavigableMap. From Louis: http://codereview.appspot.com/5606043/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28789345
561e50586995195031e1916d3cee995ec1850a16,1787c68ce94219f34906ad6c1b65747245c0259f,Charles Fry,Thu Mar 29 13:46:01 2012 -0400,Make MapTestSuiteBuilder (also BiMapTestSuiteBuilder) work under GWT, and then use it there (as well as the non-GWT ImmutableSortedMapTest, where it should have been used already).
1787c68ce94219f34906ad6c1b65747245c0259f,d4f53a983e8776505cfb664340502fb7d9a24bbb,Charles Fry,Thu Mar 29 13:40:46 2012 -0400,Make KNOWN_ORDER significant for Map tests. (There are no direct Map tests using KNOWN_ORDER, but we now pass KNOWN_ORDER on to our keySet, entrySet, and values sub-suites.) Start using KNOWN_ORDER in various tests, including automatically in all SortedMap and SortedSet tests. Introduce TestStringSortedMapGenerator to save us from having to write "sort(insertionOrder, Helpers.<String, String>entryComparator(Ordering.natural().nullsFirst()));" as an order() implementation over and over. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28780249
305d4749447a41ef78efc6cfbbbc2d82c059d640,11ca41e98e8930d8a6506a08678439bc10666706,Chris Povirk,Tue Mar 27 15:33:10 2012 -0400,Split SortedMap tests out of NavigableMap tests in preparation for running the former under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28743199
11ca41e98e8930d8a6506a08678439bc10666706,ae80f64044d657af43fb4732ab5909471ee10c8e,Chris Povirk,Tue Mar 27 15:32:45 2012 -0400,Changed NullPointerTester to test inherited methods.
91c10473084d808b488b23d1fce21f72f8c3a928,1a7e408ce9f1e2c256635d6673595282fed8805a,Chris Povirk,Tue Mar 27 15:26:08 2012 -0400,Simplify ImmutableMultiset implementations. From Louis: http://codereview.appspot.com/5780044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28742978
1a7e408ce9f1e2c256635d6673595282fed8805a,d72c700e82a8aa728569ff7182aac5b63978f83f,Chris Povirk,Tue Mar 27 15:26:08 2012 -0400,retract partition and partitionWithPadding from Guava ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28741930
d72c700e82a8aa728569ff7182aac5b63978f83f,946bb1f5bf9ee7ab7702a21cb75ec3fbbeb8343f,Chris Povirk,Tue Mar 27 15:26:07 2012 -0400,Fix GWT behavior of "opportunistic" ImmutableList subclasses. The "standard" ImmutableLists were fine, but Lists.charactersOf() and TransformedImmutableList were broken. Under Java, they inherited working implementations of their methods; under GWT, they inherited versions that forwarded to an empty "delegate" collection. I've overridden all forwarding methods in the GWT emulation in order to avoid this. I've also added tests for charactersOf(), which reveal that GWT String/StringBuilder doesn't perform index checks, so I've added manual checks. TransformedImmutableList could probably stand to have some tests, too, but at least it will be exercised indirectly through the asList() views implemented atop it in Louis's coming CL, which is in fact what revealed these problems. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28741879
701837629ccc49d182a72b9cc4a979a31ee58d44,16ddbb5f52a4538ba31e9d4b5a763f45415c95bb,Chris Povirk,Tue Mar 27 15:26:04 2012 -0400,Adds a ForwardingDeque. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28714562
49ae40b145bebb8bd06a967edc03cb285577d0cc,2c5657b1ee65c4f8338d1d9b1ed595c4ab50c8fc,Chris Povirk,Fri Mar 23 23:37:21 2012 -0400,Created compact, special-case Unicode whitespace CharMatcher. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28661107
b5b4b40a9c17484828dbd7ceb28e0a468dad0b75,8cd024fe646729e855468750cf2a20e8ab0f770f,Chris Povirk,Fri Mar 23 23:10:50 2012 -0400,Fix FinalizableReferenceQueue class leak which prevented the ClassLoader that loaded FinalizableReferenceQueue from being garbage-collected subsequently. This is Guava issue http://code.google.com/p/guava-libraries/issues/detail?id=92 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28624233
8cd024fe646729e855468750cf2a20e8ab0f770f,94c047c01521965b1a1b3e94a24e95c1b55f3bfe,Chris Povirk,Fri Mar 23 23:08:22 2012 -0400,Make Collections2.orderedPermutations work under GWT again. To do so, make the minimal (I think) subset of common.math required work under GWT. This requires suppressing a few cases in the divide() tests due to GWT's non-compliant int implementation (which, for example, occasionally believes that 2147483648 is a valid int). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28659665
94c047c01521965b1a1b3e94a24e95c1b55f3bfe,323b48157718353987d1cf465c17988b6279ee48,Chris Povirk,Fri Mar 23 23:08:14 2012 -0400,Add more null values to NullValues, and rename to ArbitraryInstances. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28658308
d26ce6c5c5d775422926ba6d54242a668fb19029,4d38b1674bb23385c8ab866af98a2a31e7ab098e,Chris Povirk,Thu Mar 22 17:20:41 2012 -0400,- have Iterables return FluentIterables - allow FluentIterables to be subclassed - withdraw toImmutableSortedList from Guava (will be restored as toSortedImmutableList) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28621161
5b4c81e0606cf55ec32cf747cb7e66bc1f1946f8,f81aa60c8461401640add879ea9a627f963eb334,Chris Povirk,Thu Mar 22 17:20:40 2012 -0400,Add createConstant and createConstantUtf8 static methods. This avoids a lot of the weird initiaization ordering issues and allows us to consistently use create everywhere instead of having to rely on the constructor in some places. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28617806
b9358ae952477b4b8ba9bd97428bc6ed46acc61e,d902c949efad09bd3f9400802ae091078c04bce5,Chris Povirk,Mon Mar 19 12:26:57 2012 -0400,Make ImmutableSortedSet implement NavigableSet. (Under GWT, it still implements only SortedSet.) From Louis: http://codereview.appspot.com/5590046/
d902c949efad09bd3f9400802ae091078c04bce5,2b5830861fa281a59a072b6e8117116e3d93c5cf,Chris Povirk,Mon Mar 19 12:22:56 2012 -0400,Added default-value auto generation to NullPointerTester, for interfaces (and got rid of the manual registration of Function, Predicate and BinaryPredicate).
ed528dd50aae58fb6a3de43f6261105178a13c6f,a7f1729ad02a50fea6cb33dbca5a6d03a447da0f,Kurt Kluever,Fri Mar 16 18:27:35 2012 -0400,Range: fairly major javadoc rewriting. Meticulous math term definitions that we no longer supply here can be found on the Guava Glossary page I just created, or on wikipedia for that matter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28455770
f4cdd87a6103131b1faaa6531ee3650dd790d47e,550c3b9efb37ff248193e05e084d0f2208230eef,Kurt Kluever,Fri Mar 16 18:27:35 2012 -0400,Add superclass safety check in getSupertype(), added @Beta and @since to TypeToken and Reflection. reflect needs no GWT compatibility, so there seems to be no BUILD dark magic to do? ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28428778
ec452d24ada3b476ede4bbd9c68e71d4211c0afe,843f8d8fc37133e6870d5b2200838219a55eb83e,Kurt Kluever,Tue Mar 13 16:19:03 2012 -0400,Release FluentIterable into Guava 12.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28311090
843f8d8fc37133e6870d5b2200838219a55eb83e,fb807d78d20685fc1c1139c1ca6b8c0a3db3bca8,Kurt Kluever,Tue Mar 13 16:18:01 2012 -0400,Nuke 85 lines of code in Collections2 by adopting common.math. Which apparently fixed a size calculation bug that wasn't found due to a bad test that thought C(34,14) > MAX_VALUE.  (?)
fb807d78d20685fc1c1139c1ca6b8c0a3db3bca8,f27e2690a260db7c3c9355b75132c86e0b0a7ff8,Kurt Kluever,Tue Mar 13 16:16:59 2012 -0400,Adding a custom serialization option, when the space overhead of java serialization is significant compared to the BF size itself (i.e. for small BFs) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28310115
66b3ca82937bd6194039cda7e58825eb1d3b6683,e3ec650dd008fd92cb494ab54d152062614503c7,Kurt Kluever,Tue Mar 13 16:14:56 2012 -0400,Add MediaType matching according to the model defined in the HTTP/1.1 Accept header. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28299737
e3ec650dd008fd92cb494ab54d152062614503c7,1ef9b7d6b95602f03e729e28207ae64041c71c0c,Kurt Kluever,Mon Mar 12 12:58:31 2012 -0400,test for indexOf with two array arguments; isEmpty and other methods of BooleanArrayAsList ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28292228
bd3d46ff61aab113bac98311b77c1d5f6ce1334e,2f4db4ac381cb8405286d8d57f47ad90cd63b5f2,Charles Fry,Thu Mar 8 14:24:23 2012 -0500,Simplify ImmutableMap, providing skeleton implementations of each view. From Louis: http://codereview.appspot.com/5753064/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28206736
2f4db4ac381cb8405286d8d57f47ad90cd63b5f2,12c2f68b5661d415c8a88228c8372c1a80e3523c,Charles Fry,Thu Mar 8 14:18:59 2012 -0500,Provide a default subList() implementation in ImmutableList. From Louis: http://codereview.appspot.com/5759058/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28206673
2f830e65a6705678a41f5da1d3eb5eee86f2f2fb,0a3a6d9cd933017d738684d4197838315d9ee150,Chris Povirk,Mon Mar 5 19:36:22 2012 -0500,Complete several TODOs, and introduce TransformedIterator, which simplifies and reduces the overhead of package-internal iterator transformations. From Louis: http://codereview.appspot.com/5730052/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28112037
0a3a6d9cd933017d738684d4197838315d9ee150,707f3a276d4ea8e9d53621d137febb00cd2128da,Chris Povirk,Mon Mar 5 19:32:20 2012 -0500,Provide failure atomicity in AbstractMultimap.put. From Louis: http://codereview.appspot.com/5728049/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28110338
707f3a276d4ea8e9d53621d137febb00cd2128da,83504453b0f6f49220988bd068e11d6469488f83,Chris Povirk,Mon Mar 5 19:28:06 2012 -0500,Simplify ImmutableList and its implementations. From Louis: http://codereview.appspot.com/5731051/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28109145
8395dcbd9c9860508c9c16a7db3c07945ca346d7,cec7952f282c73c2221bddc9dd620298f906870d,Chris Povirk,Fri Mar 2 14:09:24 2012 -0500,- new @Beta classes for Guava 12.0 - @Beta graduations for Guava 12.0 - remove classes scheduled for removal in Guava 12.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28043743
cec7952f282c73c2221bddc9dd620298f906870d,a4944fb7e64392cd53159de6a42e2711e3808db1,Chris Povirk,Thu Mar 1 11:22:46 2012 -0500,BloomFilter changes: - Add copy method. - Add equals method. - Modify put method to return boolean, indicating whether the underlying BloomFilter bits may have changed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27988892
a4944fb7e64392cd53159de6a42e2711e3808db1,fefd98f33f69a4beec09606bb96a8113ead755e2,Chris Povirk,Thu Mar 1 11:22:45 2012 -0500,Roll back CL 23327883's very broken FeatureSpecificTestSuiteBuilder optimization. (We don't clone the tests, so we run all methods against the same target class (the last to be initialized).) Fix up newly failing tests (except for CompactIntegerListTest, for which I've filed a bug). Most are problems with the tests themselves: - Test suppressions weren't being carried over to tests of the reserialized collections. - Map values() collections were universally assumed to permit null queries. - EnumSet was asserted to fail fast on concurrent modification. - Many ConcurrentModificationException tests advanced the iterator past the end of size-zero or size-one collections. - It's not possible to create an empty collection that contains null. Empty collections don't contain anything :) - (Bi)MapGenerator.create is passed an Object[] containing Entry objects, not an Entry[]. - (Bi)MapGenerator.create is passed an Object[] containing Entry objects, not an Entry[]. - StandardImplForwardingNavigableMap.keySet() returned a SortedSet instead of a NavigableSet. - StandardImplForwardingNavigableMap implemented lastEntry and descendingSet in terms of one another (using the standard* methods). - Tests of null SortedMultiset values fail when run against a nullsFirst() comparator because the nulls are outside the submultiset ranges tested. - NavigableSets.synchronizedNavigableSet(SafeTreeSet) does not allow null queries. - Tables.transformValues().cellSet() permits remove operations. - collect/testing SmallTests needed their timeout increased. - CompactIntegerListTest didn't specify all the mutation operations it supports. A few are fixed by improvements to production code that arguably aren't strictly "bug fixes": - ConcurrentHashMultiset.removeAll(collectionContainingNull) threw NPE. - Maps.unmodifiableNavigableMap().subSet/headSet/tailSet returned a SortedSet instead of a NavigableSet. - NavigableMaps.unmodifiableNavigableMap().keySet() returned a SortedSet instead of a NavigableSet. - RegularContiguousSet.contains/containsAll threw NPE (which the EmptyContiguousSet equivalents did not). - WellBehavedMap.entrySet().remove(null) threw NPE instead of returning false. (The fix removes the need for Sets.transform.) A few more are real bugs: - TreeMultiset.add(null) succeeded even for comparators that do not permit null. - TreeMultiset.remove(null) failed even for comparators that permit null. - TreeMultiset iterators couldn't remove null elements. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28001960
4df8c4ce6c29346b24a8b2ad1d94ce034d5b08fc,397b9934cf8ec5e7a5b4b25972ad8c368950246f,Chris Povirk,Wed Feb 29 11:13:04 2012 -0500,Update to latest Mozilla tld data file. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27943273
3c8b80ac26c04ed731b87c99df0726e4605b5145,a1ebd775d663a1c3caab588ef5cd70eddd4be0ce,Kurt Kluever,Fri Feb 24 12:39:31 2012 -0500,Guava issue 534: static builders for COWAS/COWAL. From Louis: http://codereview.appspot.com/5273049/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27817252
a1ebd775d663a1c3caab588ef5cd70eddd4be0ce,66a4a82d359ee8ec552e0af29290081c09ad9d48,Kurt Kluever,Fri Feb 24 12:38:41 2012 -0500,remove escapers from Guava (won't make it for Guava 12) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27816445
17f6cb8aa782944d63d33232153cab4a417004d9,6d31346faa5a42f735a6b8055d6ca7a22b1ce096,Charles Fry,Thu Feb 23 16:57:02 2012 -0500,Extracted part of NullPointerTester and Stub into NullValues; Added code to call default constructor if all else failed;
6d31346faa5a42f735a6b8055d6ca7a22b1ce096,535653a2637b3d0628e7d7e8df4c26d1c480c3fa,Charles Fry,Thu Feb 23 16:56:48 2012 -0500,Make MediaType fully GWT-compatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27783220
535653a2637b3d0628e7d7e8df4c26d1c480c3fa,a331fdd7c89e1c91e696d06b80f1bd611dab0c5c,Charles Fry,Thu Feb 23 16:56:47 2012 -0500,Make Charsets GWT-compatible now that Charset is emulated. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27776341
267e41fbf208f6511c513048cbe7f7da25370b24,2daad4cb6bdd1ba3ae36f4bdab8fd4dbb7cf78a7,Charles Fry,Wed Feb 22 08:24:41 2012 -0500,add escapers back to Guava ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27739172
2daad4cb6bdd1ba3ae36f4bdab8fd4dbb7cf78a7,543c2e92b4445eb22e400d2ff89721f4a20c707e,Charles Fry,Wed Feb 22 08:24:25 2012 -0500,Release MediaType into Guava as @Beta. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27598067
543c2e92b4445eb22e400d2ff89721f4a20c707e,0823847e96b1d082e94f06327cf218e418fe2228,Charles Fry,Tue Feb 21 10:35:44 2012 -0500,Write tests to verify that HashFunction shortcuts are equivalent to the long forms.  Then fix the legacy hashing implementations to unbreak them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27678321
a122d63e9c87338b080ec48d2fcc75265339f0d7,ae671eb9a3601782256c7bf3311af719db6aa5e3,Charles Fry,Tue Feb 21 10:35:42 2012 -0500,Make the shortcut methods in the new hashing API faster by using the legacy implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27671418
da2e687edd79b6bbab3d279de529a71ed034c2e6,b0abc289340340a36a1a2deec33702331ee4a31c,Charles Fry,Wed Feb 15 13:15:42 2012 -0500,Copy Reflection.getField(Enum) to Enums.getField(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27564524
c9830858e734c11312f3d10a06390cb1bc7185c1,51a457bcc4443e4160593df00d5a8f21e6d27d25,Chris Povirk,Mon Feb 13 18:21:28 2012 -0500,Rename com.google.common.hash.Sink to PrimitiveSink. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27538021
51a457bcc4443e4160593df00d5a8f21e6d27d25,237fef61e00fe356f5e3bad6ecedfb7b924fa4f2,Chris Povirk,Mon Feb 13 15:59:20 2012 -0500,Open-source GWT emulation of CacheLoader, which was unintentionally missing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27522709
720104e72da61e660c704195eba94de8b4926304,e86741fbb4b53b8913440de9626e276db6c1466d,Chris Povirk,Thu Feb 9 20:25:15 2012 -0500,Refactor tests for BiMaps to use BiMapTestSuiteBuilder. Fix a bug with EnumBiMap in which null values throw the forward and backward maps out of sync. From Louis: http://codereview.appspot.com/5642050/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27388061
b959173880ef1bcb89d98c83c76c3eb7256d14a9,7a155b570906e2c31c5773e100839ce6a2d79679,Chris Povirk,Thu Feb 9 20:25:14 2012 -0500,Add SERIALIZABLE feature to TestSuiteBuilders. From Louis: http://codereview.appspot.com/5635044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27376846
7a155b570906e2c31c5773e100839ce6a2d79679,24449864a733812c37d5a280f1d8c2e7b14743b7,Chris Povirk,Thu Feb 9 20:24:58 2012 -0500,Release more Queues methods: newAD, newLBD ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27350067
24449864a733812c37d5a280f1d8c2e7b14743b7,1b1943f69c90fe45c6b920da04e6e6a86b4ee0ca,Chris Povirk,Thu Feb 9 20:24:58 2012 -0500,Add testConstructors(), testStaticMethods(), testInstanceMethods() that take a minimalVisibility parameter ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27341632
026ec0d4f3294d37b83894154f396a12c710535e,22fc7ff20615bebb9029184dcc0e33067035edae,Chris Povirk,Thu Feb 9 20:24:56 2012 -0500,open-source AtomicLong ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27336398
2c6e1366dee1a252a08c889ef1d4e3eb0d54acbb,eecbe53fbfaa870636a4c7144505d5863ba5fecf,Chris Povirk,Thu Feb 9 20:24:55 2012 -0500,Switching to non-power-of-2 bloom filter sizes, and making serialization more future-proof. Unfortunately, this changes the serialized form, since hashBitsPerFunction was hardwired to the BloomFilter, and that really assumed power-of-two tables. Also, this fixes a nasty exponential-slowdown bug that was in the previous version of BloomFilter (that code was added to support serialization, and deleted as part of the new strategy for serialization) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27307766
eecbe53fbfaa870636a4c7144505d5863ba5fecf,806967c3660d231e62a52674703acb51ec4e6623,Chris Povirk,Thu Feb 9 20:24:55 2012 -0500,Implemented Maps.unmodifiableNavigableMap. From Louis: http://codereview.appspot.com/5590044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27271664
7806203c8f5e3f351b9d71744c33aa115aa43725,a7a666c992819ca60ea7990ff3cf63a9a8f2210a,Chris Povirk,Thu Feb 9 20:24:53 2012 -0500,Improve ForwardingNavigableMap, adding standard* methods. Release in Guava. From Louis: http://codereview.appspot.com/5585045/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27260448
2bba62b3c9928b0e3e11c725a600689990c6af90,81c7840b444adf271634a509b11fa4080e525919,Chris Povirk,Thu Feb 9 20:24:52 2012 -0500,Add empty array and enum handling to NullPointerTester; I can also clean up the 'throws Exception' though is it better to do it in a separate CL? ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27238145
f25158e086c1a2eeb22b1ff782a3e6075c8f1752,a3bbf1bcbf797ead80e5e23f79a07e17b07aa19d,Chris Povirk,Thu Feb 9 20:24:51 2012 -0500,Updates math utilities to use JDK 6 methods where possible, addressing several TODOs. From Louis: http://codereview.appspot.com/5587044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27228554
a3bbf1bcbf797ead80e5e23f79a07e17b07aa19d,a324899e2e017a5ea275e8d2c6b2fcf95ca73613,Chris Povirk,Thu Feb 9 20:24:50 2012 -0500,Implemented Sets.unmodifiableNavigableSet. From Louis: http://codereview.appspot.com/5591044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27228500
a324899e2e017a5ea275e8d2c6b2fcf95ca73613,381584a0f4124a9316dd2d7219033d2a981a3289,Chris Povirk,Thu Feb 9 20:24:50 2012 -0500,Add legible #toString implementations for CharMatcher. From Louis: http://codereview.appspot.com/5570067/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27203019
381584a0f4124a9316dd2d7219033d2a981a3289,e25ea225661c61002c90b7c631c49b4754056f0c,Chris Povirk,Thu Feb 9 11:14:19 2012 -0500,Improve ForwardingNavigableMap, adding standard* methods. Release in Guava. From Louis: http://codereview.appspot.com/5591043/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27201643
e25ea225661c61002c90b7c631c49b4754056f0c,53abadc9336bfc8c73ec993f0c396eff701c853d,Chris Povirk,Thu Feb 9 11:14:08 2012 -0500,Rearranging of methods, plus Javadoc changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27173884
49dee297a34a74649db340facc5ca4d5cb1f9cf4,732d54fa40cada5ac2956be1af84122af8989952,Kurt Kluever,Mon Jan 30 17:37:15 2012 -0500,Test suite checking for fail-fast iterators. From Louis: http://codereview.appspot.com/5556071/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27129949
732d54fa40cada5ac2956be1af84122af8989952,46156c9b4f2af68882ca4c1907cdc90bc2d88f53,Kurt Kluever,Mon Jan 30 17:23:47 2012 -0500,Created BiMapTestSuiteBuilder. From Louis: http://code.google.com/r/wassermanlouis-guava/source/detail?r=7d23827f8dc31cda03829bcadd0d0ef419a00ed4&name=bimap-testsuitebuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27127892
3e82ff72b19d4230eba795b2760036eb18dfd4ff,e8370c5f62b108802ddb1d8fe3ce96f19884a6fe,Kurt Kluever,Mon Jan 30 17:17:07 2012 -0500,Make Optional GWT serializable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27120368
320501e0a6457802f4afc9d2f21cf394b3e173a8,edcaa9418aa5e315ba081f4b6791bd9daa926bfa,Charles Fry,Wed Jan 25 07:27:34 2012 -0500,- Eliminate serialization warning on TreeMultiset by marking AbstractSortedMultiset.comparator as @GwtTransient: http://code.google.com/p/guava-libraries/issues/detail?id=871 - Eliminate reference to long-gone "Note on element equivalence" in Multiset docs. - Fix ByteStreams.copy inconsistency over whether the output is closed: http://code.google.com/p/guava-libraries/issues/detail?id=757 - Link in Partition shouldn't contain the space after the word. - Mention unsigned types in package-info. - Standardize on "input" for name of input Future parameters in transformation methods. - Remove deprecated Futures.chain for Guava 12. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27031992
edcaa9418aa5e315ba081f4b6791bd9daa926bfa,afce494977cb4f1018b72333a6ed7d7fac3531d1,Charles Fry,Wed Jan 25 06:51:10 2012 -0500,Strip workarounds for past Google bugs from public release. In fact, stripping the allAsList/successfulAsList code is basically a bug fix, as the existing workaround allows get() to block indefinitely after the Future is done. Past discussion: https://groups.google.com[]group/java-libraries-discuss/browse_thread/thread/33a137c1707fe40b ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27022708
afce494977cb4f1018b72333a6ed7d7fac3531d1,883202c1ea5bfb52914cc1546ff38a4716c08dde,Charles Fry,Wed Jan 25 06:51:07 2012 -0500,Added new method omitNullValues() to ToStringHelper. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26991532
883202c1ea5bfb52914cc1546ff38a4716c08dde,ca8467cff1588a95df50bc8cf2ae171953e36da4,Charles Fry,Mon Jan 23 10:48:19 2012 -0500,AbstractLinkedIterator -> AbstractSequentialIterator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26926853
c27eee83a57e9b5639f9cbb251f456acd61bd534,01a5709c3de641d9055a68452c428ad5b8e624e5,Kurt Kluever,Wed Jan 11 00:51:06 2012 -0500,In forUriString(), check the IP version before giving getByAddress() a chance to collapse mapped addresses from IPv6 to IPv4.
996313a820ef2b89c1c34ae2871807b65416c6e3,4e186093dd12cb5d74b1679295b582423d42345e,Charles Fry,Thu Jan 5 08:43:44 2012 -0500,remove from Guava methods which were scheduled for deletion in release 12.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26591946
7d779571cb4f2970f6ea79b8e1853b64d9267646,422653c89062c58e9206a147d4de26811aaf3ab2,Charles Fry,Wed Jan 4 10:55:45 2012 -0500,reorganize hash tests ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26573308
7c3778f085554d9df44182b4b0cb25078d00ed85,056b64495f4a7bb64d83fbf858f742b9d0406e0f,Charles Fry,Wed Jan 4 10:52:39 2012 -0500,add new patterns ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26562202
00749f8f82776ae65d475f15c380a08795ee4640,ef63e4f4692eb168aa1a859e822cdb7b161f84b7,Kurt Kluever,Wed Dec 21 15:19:07 2011 -0500,@GoogleInternal to CycleDetectingLockFactoryTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26393155
bc5fa6eeaa254f4872465390454fe88e17f5fe2a,d0f4023bd9027b21d9ef3f8077651ad0d2c2275d,Kurt Kluever,Wed Dec 21 15:09:15 2011 -0500,CycleDetectingLockFactory creates ReentrantLocks and ReentrantReadWriteLocks that detect potential deadlock by checking for cycles in lock acquisition order. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26303617
5a212334f8e7119594d9f7dff61bb6802cf1daf2,8fce2b3fd00ec920f4621bb42b7e1862a732ed1c,Chris Povirk,Fri Dec 16 14:04:48 2011 -0500,- remove transform(Future, Function) for 11.0 as promised - fix @since formatting ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26291224
8fce2b3fd00ec920f4621bb42b7e1862a732ed1c,556976f81c236be7798e5d065a0dae09ca0cc1d3,Chris Povirk,Fri Dec 16 14:03:34 2011 -0500,Add Iterator support to c.g.common.base.Joiner ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26290845
6fcf6088fd78018dadc61536f149027247055598,2c0727049d7e7cbbe1febf5bcf6b7a4b1860dea5,Chris Povirk,Thu Dec 15 18:10:50 2011 -0500,- remove methods scheduled for deletion in 11.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26259157
2c0727049d7e7cbbe1febf5bcf6b7a4b1860dea5,735c50d1de5f1e603fe87db3fbad3d05b54976da,Charles Fry,Wed Dec 14 14:39:15 2011 -0500,Fix two aspects of the AbstractScheduledService.CustomScheduler implementation 1. Give the abstract callback method a more intuitive and convenient signature which will make it easier to ensure that weird things don't happen. 2. Handle exceptions thrown from the scheduling callback.  Previously if this method threw an exception the service would silently stop running.  Typically without any logging or notification of any kind. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26228216
f9318924b71d4ed2c59d3d835fe6a4ce3feefcbf,3bda9bf977d2df45a688cc3d4fe6aa67b666eb10,Charles Fry,Wed Dec 14 13:14:12 2011 -0500,Open source c.g.common.hash into Guava 11.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26225631
60262d5b7e4c834062b8c06c81ad5e85ae728721,484ed1848fc76d4541eacf605100e68018db5af3,Charles Fry,Wed Dec 14 08:50:17 2011 -0500,remove escapers from Guava for now ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26201712
ea728eaf52cbdcac3ab3ede7109367a9f0b34f15,8f95b6b573c6473df57cf145e5275e7f1b990100,Charles Fry,Tue Dec 13 15:50:55 2011 -0500,- Cache.get(K, Callable<V>) => get(K, Callable<? extends V>) - more clearly document how Cache methods moved to CacheLoader should be dealt with - explain what expireAfterAccess does and doesn't count as an access - recall RangeSet from Guava - tweak Queues javadoc ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26193165
e53f74d98a676e9784ed0dd83cc69f4797ea26cd,e4da692d191d2b3db21858f4b59abd70673674d3,Charles Fry,Tue Dec 13 15:50:52 2011 -0500,Use tryLock to avoid expensive calls to nanoTime when possible (only if not fair). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26172551
72b2f75013ece02c4410a63e77579ba3c30ab774,163ac499a9a7dc973e1b8293080fdf794bd07a78,Charles Fry,Fri Dec 9 11:27:09 2011 -0500,Add Ints.tryParse. The implementation is based off that of Android's java.lang.Integer#parseInt. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26080239
068891544566246bd5caea917ae3cb78f1a21747,223faeecda173159b63f15cf224b201eb2e103e8,Charles Fry,Fri Dec 9 11:27:09 2011 -0500,Remove Futures.chain internally, though it will go out in Guava r11 before being removed in r12. Roll back temporary AbstractFuturesChainTest mess from 25962636 (but restore FuturesChainTest as "FuturesTransformAsyncFunctionTest." Also, fix a copy-and-paste error in the AsyncFunction Futures.transform Javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26078097
097aa881a449c790285c1790af90382eca69c645,9db1ad6ef2aac319e91db7e6b06a9a418a4eae21,Charles Fry,Fri Dec 9 11:08:10 2011 -0500,emulate CacheBuilder in GWT, gwtifying all requistie dependencies ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26046933
b041be5124ef01b392e21a3ff0bc3d93f552156d,36048c35fc79c0265f9dfde4a27b4ffa14966772,Chris Povirk,Tue Dec 6 15:11:41 2011 -0500,Add Multimaps.filter methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25993671
2f2090bad927edb46799411a1220a88cf092f2a4,8ebc9b11b98d538e43369b75ad6f19173537717a,Chris Povirk,Tue Dec 6 12:26:48 2011 -0500,Introduce Futures.transform overloads that accept an AsyncFunction in preparation for eliminating Futures.chain. Also: - Fix Javadoc example code's rowKeyFuture confusion: http://code.google.com/p/guava-libraries/issues/detail?id=788 - Add test that the result of the preexisting Future.transform is memoized when the transformation succeeds.
d5de86dc98b759183762543e3e977743e781d923,4b9da9148906ad483af308daf48d597046d306dd,Chris Povirk,Mon Dec 5 15:46:31 2011 -0500,If {ByteStreams,CharStreams}.copy fails to close both input and output, it should log one exception while throwing the other. http://code.google.com/p/guava-libraries/issues/detail?id=667 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25920059
03b79658d4d2591bf76e9377081c16906c77fe0b,f8cdf1885e05d64889c64006c0a894062e71f581,Chris Povirk,Mon Dec 5 15:46:31 2011 -0500,trigger refresh on Cache.getIfPresent ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25908678
120633982325062f3c9952821382189e5338cb5f,287bc67cac97052b13cbbc0358aed8054b14bd4a,Kurt Kluever,Fri Dec 2 11:10:37 2011 -0500,Copy c.g.c.collect.AbstractIterator to c.g.c.base as a package-private class. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25880322
287bc67cac97052b13cbbc0358aed8054b14bd4a,c72ba765bed12267569936ffeb7c76d2f525fe2a,Kurt Kluever,Wed Nov 30 12:23:58 2011 -0500,Replace try/catch/propagate with try/finally idiom.
c72ba765bed12267569936ffeb7c76d2f525fe2a,e3676a6b21e798b632e75048209fd1eb0719a7a9,Kurt Kluever,Wed Nov 30 12:23:42 2011 -0500,Reorder some of the HTTP Headers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25806584
2b7e8589db7c8ba987c6a960114a3194a7c2fe0e,f7a1c2b042abc23e9abd885336ffed201aac5f6d,Kurt Kluever,Wed Nov 23 11:51:13 2011 -0500,Make SerializableTester.reserialize a no-op under GWT so that test authors can use it as part of larger test methods. With that done, eliminate the equivalent, awful hack in RangeTest. Further, with bug 5599623 fixed, run OrderingTest under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25672151
7cd8c61f13f3cb977abc49e5101a21d1505adef2,48cc5df92df6ae9695b2985c6da799c8b47094f6,Kurt Kluever,Fri Nov 18 13:09:58 2011 -0500,Tests for several newDataInput.readFoo methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25574201
48cc5df92df6ae9695b2985c6da799c8b47094f6,268b89eb0ddc028c4f093042060ad05fa0e107e0,Kurt Kluever,Thu Nov 17 17:13:03 2011 -0500,Mark the Queues methods that deal with ArrayDeque and LinkedBlockingDeque as internal only (they are JDK6 only). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25554993
c6de7a5f6d4f990ce38abffe1c67d413bcaef8b8,f54e659fad056b233bf134d17823a3e71ad6456b,Kurt Kluever,Thu Nov 17 17:12:43 2011 -0500,Make c.g.c.collect.Queues @Beta. Remove old TODO from Optional (unrelated change, but combined for TAP's sake). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25522897
f956ac11a48f7cdf836f6037ac9b5c1be25b3cd3,c50a8e8e0268dbdbf618c6c786d73b6a48ee5776,Kurt Kluever,Wed Nov 16 11:43:59 2011 -0500,Remove GuavaAsserts, replacing all calls with calls to Assert. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25472533
f29391d6c98f82c0e797369d9ecff3231e1c40c6,b2f584589d18c4d933025a65ebbe88505f74cb8d,Kurt Kluever,Wed Nov 16 11:20:42 2011 -0500,documentation enhancements to Cache, LoadingCache, and CacheBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25472243
2a561b1b7275e92623c6e452698453bfed20fcbd,2383c0ef29cb6c9b7ff884026baa337e094a6798,Charles Fry,Mon Nov 14 10:45:04 2011 -0500,Add Ordering.min(Iterator) and Ordering.max(Iterator). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25397156
73c5fc6ef0d1cc45cf628e7b4897674e4b4c58e1,c29d8ae455fac7d3a416e92cd60be2d1f33d11f6,Charles Fry,Mon Nov 14 10:30:03 2011 -0500,Added filter(SortedSet) to allow for the creation of a filtered SortedSet ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25393046
9c7ee3dd920286c451268a7e5a82273f77f8c7a5,2914956e0e2409a0f249048881c4c4b0f1169ec3,Charles Fry,Fri Nov 11 07:45:27 2011 -0500,Move SortedMaps.filter* to Maps. Copy tests for SortedMaps.transform* to MapsTest. Test the filter* methods under GWT, and make them available under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25351048
2914956e0e2409a0f249048881c4c4b0f1169ec3,726b42b0794e85f6936ddd31c7f864442ae1e346,Charles Fry,Thu Nov 10 10:03:51 2011 -0500,Add tests for interruption while waiting. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25335633
cbfbc3b7eda05e0286f65c147441d61432d60f62,10755664196d6018caa01bef58cb40787c1ea8c9,Charles Fry,Wed Nov 9 09:56:30 2011 -0500,Javadoc improvements: - Emphasize that an empty SetMultimap and an empty ListMultimap are equal. - ListenableFuture listeners can also run in the thread that cancels the future (hat tip to <https://plus.google.com/114212977194801425439/posts/eFxZv6ibkM9>, which tipped me off to this by describing a related bug)... plus other minor improvements. - ListeningExecutorService can throw RejectedExecutionException. - Subclasses of AbstractListeningExecutorService must implement execute() and the shutdown/termination methods. Also, fix a comment in AbstractListeningExecutorServiceTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25284749
b89023cb0d117432817e081fce8ea19bb3d758ff,caaae1c713b905fdc2268c61d80f309d8581654e,Charles Fry,Tue Nov 8 08:16:04 2011 -0500,have CacheLoader.reload return ListenableFuture ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25264832
1278d9c6ed68fde9e630678f009cfd91bf2b9ff4,ec3c0062a8918bcc53d68bc95d4bbe47a5a03b83,Charles Fry,Mon Nov 7 11:18:31 2011 -0500,introduce AtomicLongMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25201110
211d803baeeecf9f5b121cb57e3d62172935aa4e,b37e84970a242ee48062f84b93c8e9a3b3808633,Charles Fry,Mon Nov 7 11:18:31 2011 -0500,Filling in test coverage on several methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25192532
b37e84970a242ee48062f84b93c8e9a3b3808633,71b9c3f4e5e49cba693fe721f3dec6458a2957e3,Charles Fry,Mon Nov 7 11:18:31 2011 -0500,Adding tests for multiple ByteStreams methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25179180
71b9c3f4e5e49cba693fe721f3dec6458a2957e3,8b5f2e0d5acdbf7b35a14800f68660322fff59ac,Charles Fry,Mon Nov 7 11:18:31 2011 -0500,Expanding test coverage on several methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25178955
9745076bfb78c1335b94b0c2b877d6425ab2a733,3e537c1c5aea2b676eb8e5ac8c9cfc1c0c837772,Charles Fry,Thu Nov 3 10:24:32 2011 -0400,add CacheBuilder.refreshInterval ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25139834
eea6e7bfc9fe9475a6b32579a2fec75ae324ff8b,2837f9fe2b6b9943f5ea46794721ea04e6b1af53,Charles Fry,Wed Nov 2 09:01:49 2011 -0400,Use RuntimeException to make things a little more convenient for test authors.  Forcing users to deal with InterruptedException and TimeoutException does not seem sufficiently useful in a _testing_ utility.  Controversial. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25119032
2837f9fe2b6b9943f5ea46794721ea04e6b1af53,c6aa1e3c0282de8ac6c5d142cd02e65bdefd9395,Charles Fry,Wed Nov 2 08:58:16 2011 -0400,split LoadingCache out of Cache interface ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25099006
9b1de11918c7e17b02c883365b1d13532988ee05,c06d0ad496c0563030950a49122aba46a95faaf5,Charles Fry,Thu Oct 27 10:15:38 2011 -0400,Add AtomicDouble and friends.
aac333b616c49840a060f600fed3a8db49251167,c321d666797914e0bc01f106bf0bb59a7738f8b6,Charles Fry,Wed Oct 26 09:48:20 2011 -0400,add Cache.getIfPresent, Cache.put, and CacheBuilder.build() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24936790
75ac5fd70fb316fcdcf9428a5d763d8db4fbe744,77f56b0a3f6b34790c0ffe9830cbf591ff0c5752,Charles Fry,Tue Oct 25 09:12:10 2011 -0400,move LocalCache into LocalCacheInternalMap, then rename LocalCacheInternalMap to LocalCache ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24848838
77f56b0a3f6b34790c0ffe9830cbf591ff0c5752,99091e882f9c6985315f9498b2125af9141af431,Charles Fry,Tue Oct 25 09:12:09 2011 -0400,rename CustomConcurrentHashMap to MapMakerInternalMap rename LocalCacheAsMap to LocalCacheInternalMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24846402
99091e882f9c6985315f9498b2125af9141af431,3daf3f9a1cfb17447b2afcc81947b54a19a23a2d,Charles Fry,Tue Oct 25 09:12:09 2011 -0400,Introduce Tables.unmodifiable(RowSorted)Table. From Louis: http://codereview.appspot.com/5266049/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24846124
6d2ff1d9bce1a5c068ba83786ab9007d5e99b9d5,034c881e4fd9c148da7aa4aa824c503071b51ffb,Charles Fry,Fri Oct 21 08:18:27 2011 -0400,add Cache.getAll and CacheLoader.loadAll ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24824285
d099e2b65d5ae3b5fa9e31ff5206dd4b51ba2ce1,53921947d568c284669a95de482579ffe40f329e,Charles Fry,Wed Oct 19 08:42:13 2011 -0400,BigIntegerMath.factorial rewritten to be faster. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24767128
64f16597f629142dcefc2b914089a22000511802,c98da2e62ba1635fd883bfa3a8754b0c7d2ea1f5,Charles Fry,Wed Oct 19 08:42:13 2011 -0400,Move merge sorting code out of TreeBasedTable. Add mergeSorted() functionality to Iteratorables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24751437
c98da2e62ba1635fd883bfa3a8754b0c7d2ea1f5,57670278b2d635bdc4011c2f1aee9b0a198accc0,Charles Fry,Wed Oct 19 08:42:05 2011 -0400,rename CustomConcurrentHashMap to LocalCacheAsMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24749721
f2e25e258c514a4c1b58d2ba97a37b1085794936,1435b80485acc907e218d53068f41ff6dd95f8fa,Charles Fry,Fri Oct 14 11:40:25 2011 -0400,Release GcFinalization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24667108
1435b80485acc907e218d53068f41ff6dd95f8fa,fcb4a1b81a96fd658f7f25018cdf25e41ea6453e,Charles Fry,Fri Oct 14 10:25:18 2011 -0400,Run common.testing tests under GWT GWT-enable a few other classes that are trivial to GWT-enable. Open-source the common.testing tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24640713
8124eb561b979c5d4300f5694f8871d1d7a5619e,0e9af8d8fa16397ee9797f101aa35d799dc099b2,Charles Fry,Thu Oct 13 10:56:51 2011 -0400,Initial release of the escapers into Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24623640
f9736b98decdccb33084604577d6b865609322b9,d446df5924608c8d4b202488be6a842363728bf7,Charles Fry,Thu Oct 13 10:54:55 2011 -0400,only read ticker once per operation ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24604473
d446df5924608c8d4b202488be6a842363728bf7,872d2894d3b7f10013b7b80d5261a4f983abbf8c,Charles Fry,Wed Oct 12 11:10:50 2011 -0400,Reformatting-only CL: reflow ConcurrentHashMultiset to make it consistently 100 characters. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24603115
7ecaf592b89798c9d35c056cd957e3522354bdbb,6ee12c7a936073f098b809bd25f826c329385978,Charles Fry,Wed Oct 12 11:10:50 2011 -0400,Add c.g.c.net.HttpHeaders to Guava (since 11.0). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24584184
d08ed948cbf80a3633f50edbbdcbbce75deb553b,2f345c3c276773d555938699f467f722ade40441,Charles Fry,Wed Oct 12 11:10:49 2011 -0400,- allow expireAfterWrite + expireAfterAccess - throw AssertionError on computation code paths which musn't return null ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24573984
2f345c3c276773d555938699f467f722ade40441,186bf93f6405eb3ad6c63b1b8db7e49dcd81de36,Charles Fry,Wed Oct 12 11:10:49 2011 -0400,Replace evictionQueue and expirationQueue with accessQueue and writeQueue. Also tightly couple accessTime with expirationQueue, and writeTime with writeQueue. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24572156
64db350ddbb15e42b936560e636962d6abc0fd04,c4ac9f1c9742de5d3f402c02d82f435a44045093,Charles Fry,Mon Oct 10 10:27:10 2011 -0400,add Cache.get(K, Callable<V>) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24506370
c4ac9f1c9742de5d3f402c02d82f435a44045093,67ccb7b9674578700f80821d18899644a397b8b3,Charles Fry,Mon Oct 10 10:27:05 2011 -0400,only call waitForValue on loading references ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24502384
67ccb7b9674578700f80821d18899644a397b8b3,620820eb11c587909fedcd6fd6455d4e6b4a9d2d,Charles Fry,Fri Oct 7 08:56:42 2011 -0400,Add overloaded primitive methods to ToStringHelper to avoid autoboxing ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24476666
620820eb11c587909fedcd6fd6455d4e6b4a9d2d,0c60dc3c8e760b0583cde051f4253f6960fe9ea8,Charles Fry,Thu Oct 6 12:23:59 2011 -0400,un-deprecate FinalizableReferenceQueue and friends ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24467300
c88a4a8aa5bfa6e0508f3de6739831f1a76c4fa3,a767620313fe5fdb127a6c1eaabc3a6cdf28d459,Charles Fry,Mon Oct 3 17:26:21 2011 -0400,release MultisetNavigationTester ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24382979
a767620313fe5fdb127a6c1eaabc3a6cdf28d459,c660cab465638fe5b82c26b2f4b97ce1633e84d7,Charles Fry,Mon Oct 3 16:42:13 2011 -0400,Implement expireAfter*(0, *) in terms of maximumSize(0). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24379350
c660cab465638fe5b82c26b2f4b97ce1633e84d7,e4916cf1ad5e18427e76851741c88eb901d4bf8c,Charles Fry,Mon Oct 3 16:41:59 2011 -0400,fix broken Guava tests ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24377974
e4916cf1ad5e18427e76851741c88eb901d4bf8c,b49c1296eb569afcaee5b521ad2d0c7afd921d8f,Charles Fry,Mon Oct 3 16:40:37 2011 -0400,Fix TreeMultiset.subMultiset().size() overflow condition. From Louis: http://codereview.appspot.com/5153041/
6b8a5f91cdc57f2bee24a62e8a871603a48b02e4,b138010e6d5ad6effc11e7e729080cfb3e1b72de,Charles Fry,Mon Oct 3 16:40:37 2011 -0400,rename MapMakerTests to MapMakerTest for Guava's sake ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24372219
11fc7c2bb6b7deb4187a58f349032a4e375c752c,85ea2911e041fa53e3f81e36fd81dbc4cd4f2969,Charles Fry,Mon Oct 3 11:36:21 2011 -0400,remove NullCache, now that we support immediate eviction
85ea2911e041fa53e3f81e36fd81dbc4cd4f2969,00dbf54a864d873d7efd8093c6f57e4dc2992f5b,Charles Fry,Mon Oct 3 11:31:46 2011 -0400,add Cache.refresh ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24327805
00dbf54a864d873d7efd8093c6f57e4dc2992f5b,0e1b915cb9a181809b1891146e7dfb6ab069b8b9,Charles Fry,Mon Oct 3 11:21:29 2011 -0400,Replace old 'simple' Strings.repeat with more complex, but faster implementation based on binary exponentiation. Add benchmark to compare with old method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24327769
0e1b915cb9a181809b1891146e7dfb6ab069b8b9,d30cc68a0c604c0fe737777291699caf2e1b1a29,Charles Fry,Mon Oct 3 11:13:43 2011 -0400,- rename ComputingCache to LocalCache - internally refer to computation as loading ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24327248
d30cc68a0c604c0fe737777291699caf2e1b1a29,dcd0f8dda7d2458011c71054d6a40a0f8437125a,Charles Fry,Mon Oct 3 11:03:27 2011 -0400,Make IntMath @GwtCompatible so that it can be used in common.collect overflow checks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24308523
dcd0f8dda7d2458011c71054d6a40a0f8437125a,0b048ef06d395a8d2fe4a46322a3f5725c861522,Charles Fry,Mon Oct 3 10:59:24 2011 -0400,I give up. I can no longer maintain the in-place algorithm. The bugs have defeated me.
08bab65fac9237d965b1fe9d5f0afa77fcf5ca95,e5a1fab31f45cee47eaedd828e9a9e525e4da69a,Charles Fry,Mon Oct 3 10:42:39 2011 -0400,Implement a new Service base class for services that need to execute some functionality periodically. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24292212
b00fc801c438f40a9f116a2f85517944ae601f07,622cdb75f9b7a5c87d50ca0e44753f36adf2ce79,Charles Fry,Mon Oct 3 10:34:54 2011 -0400,A round of promotions/deletions/updates for Guava 11.0. Try to minimize use of MOE: magic somewhat. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24279246
622cdb75f9b7a5c87d50ca0e44753f36adf2ce79,f4cace556e08d2576de45f6d85289afcba74f521,Charles Fry,Thu Sep 29 13:00:56 2011 -0400,Rename CleanPathTest to FilesSimplifyPathTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24256474
649834561cf07e6cb630a7a6420ee6b32dbed7cd,d725feea787baab9facdd90727888981190d0d44,Charles Fry,Tue Sep 27 14:12:40 2011 -0400,Louis's changes to remove JDK6-isms from DoubleMath ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24246702
d725feea787baab9facdd90727888981190d0d44,b8c92d6a6bc75be4d4983c9901fa88d8b74e1fb5,Charles Fry,Tue Sep 27 10:29:21 2011 -0400,introduce maximumWeight ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24224790
83e45164044f16362e0d6921b6254f3c85ff3fd5,3b89bebb16858aa352b4018c54af3c2aba8902db,Charles Fry,Fri Sep 23 13:00:59 2011 -0400,Add some URI resolution tests to the simplifyPath tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24166215
27f1f61eab9e0af0eeb33ed35027ae8d93dbfcf6,0b76a315b803465779786630c967df15ba2d7630,Charles Fry,Thu Sep 22 15:41:20 2011 -0400,Release common.math package. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24109421
211010cdea45f7296d2ca60a4276d7a67ccbb575,025874e98e89f2fc5f60ba15d7f0c75b61a2d88e,Charles Fry,Tue Sep 20 16:09:44 2011 -0400,Clone of Louis's UnsignedLong(s) documentation CL. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24073780
60abb1cc79bf78d53b59cfb540f6c67dea4f9d1d,550c8c54f190cc722c46b0b9ddd7b3dc0e58e8e3,Charles Fry,Mon Sep 19 22:18:51 2011 -0400,allow all write operations on asMap view
550c8c54f190cc722c46b0b9ddd7b3dc0e58e8e3,e34196b55437eb5d687cb4d319826c1ad1f86252,Charles Fry,Mon Sep 19 22:18:22 2011 -0400,Drop in SortedTreeMultiset in place of TreeMultiset.
60dcf63ae6d58e4bd0bbab26ef5c96c736f4b1bf,75cdf1695d9d40809507991eed6a8acf6be2911b,Charles Fry,Fri Sep 16 14:40:37 2011 -0400,make tests of unreleased classes GoogleInternal
75cdf1695d9d40809507991eed6a8acf6be2911b,ad738e396e084c7068bcb17d21a169ba08bb1209,Charles Fry,Fri Sep 16 14:40:37 2011 -0400,implement basic serializability for ComputingCache
ad738e396e084c7068bcb17d21a169ba08bb1209,7d537203053ef3fdd18dbf0a4f3273e44bc977c4,Charles Fry,Fri Sep 16 14:40:37 2011 -0400,Allow nulls in GeneralRange.
7d537203053ef3fdd18dbf0a4f3273e44bc977c4,ad96fd0ccf5c0d63fbd1f2911e608e353cd3e61d,Charles Fry,Fri Sep 16 14:40:37 2011 -0400,Move SortedMaps.difference to Maps
ad96fd0ccf5c0d63fbd1f2911e608e353cd3e61d,8f6162205cf8746cf3a6c3c01a64b2af8fa028aa,Charles Fry,Fri Sep 16 14:40:37 2011 -0400,Add UnsignedInts to primitives.
312e0a94847816fb6f4c4d3b24f90522a9992802,61816638fc933cd40a152618d858e1000387b996,Charles Fry,Thu Sep 15 10:28:09 2011 -0400,add ForwardingCache
61816638fc933cd40a152618d858e1000387b996,6055146e0f6b02098512cbc686e2b43bbb63a8c4,Charles Fry,Thu Sep 15 10:08:13 2011 -0400,Reorganize methods between UnsignedLongs and UnsignedLong.	Make clear in the Javadoc the reasons to use each.
6055146e0f6b02098512cbc686e2b43bbb63a8c4,73bc67770d8636e4ea514250536fca88b21929c8,Charles Fry,Thu Sep 15 10:08:13 2011 -0400,Migrate SortedMaps.transform{Values,Entries} to Maps
5589a2c5b35b6463038121a5d4b453a5ce31fac1,0fd75ca0d5ef77b79b89ef8dc9ca72b7799258d5,Charles Fry,Thu Sep 15 10:08:12 2011 -0400,Inline BaseHolder interface into Holder and Optional. It was causing issues to	Scala users and didn't really serve any purpose anyway. This also makes it	easier to start selectively eliminating some of the methods from Holder if we	want to do that.
ef9505fc17e8bb888dfc891266192add41d7b08a,46f185a04d35d1e6c40a49d258f0247f395d8965,Charles Fry,Thu Sep 15 10:04:29 2011 -0400,Merging BlockingQueues into Queues
c24d831d266910f67eef3f54bec7abbc7b2314b9,d2eebdb1a15b401a48439ea7df44b28ac2a47861,Charles Fry,Wed Sep 7 13:24:59 2011 -0400,javadoc cleanup
4fc7c376154e26f694eead7bc6720cfe6a06653a,89adf4023d9672f209e064700e1ea47ba22eca6d,Charles Fry,Tue Sep 6 10:13:44 2011 -0400,- add cache cleanup - scrub @since tags
bc3d55804a5e98a18849e04e3fe8e53bbe310d04,c77ce7f12037fe1fee19635cc73eb6a658538119,Charles Fry,Tue Aug 30 17:49:45 2011 -0400,make more tests pass
956d3d3a40c6148de35957b1d0d4d8b268ba1ee6,c33b595b65bf2b5a83117e53139b78e5fd0af8bd,Charles Fry,Mon Aug 29 18:55:45 2011 -0400,manual sync
6923b5fac0feb7005429d0b24be93b91685f9637,709d400204a574ffbed50e874821f8a2d32ef02b,Charles Fry,Thu Aug 18 11:16:17 2011 -0400,manual sync
5560bc10e7472f94e8f50831eb0907a35628e725,d2576e967953ba6aec0cc20283d8714838bc1d75,Charles Fry,Wed Aug 17 11:14:44 2011 -0400,manual git sync
4fbef9f220a86423f6ebc131c06bac5c3bb5e731,e2899b353e58105dc6a0fd5e2605f4cdbea32abf,fry@google.com,Mon Aug 15 21:23:49 2011 +0000,manual sync
e2899b353e58105dc6a0fd5e2605f4cdbea32abf,0ae2d4fe60720233283579aea8c325bde5d60a6f,fry@google.com,Fri Aug 12 14:46:31 2011 +0000,manual sync
0ae2d4fe60720233283579aea8c325bde5d60a6f,a961ac31197d5b221898539ceaa5be61dec4d1cc,fry@google.com,Fri Aug 12 12:51:04 2011 +0000,massive manual sync
2585c71e6158b4db59e3f5cfce44c8424f2b6311,70453cbaefed33888d4b098a99c4e6fd295fd72b,guava.mirrorbot@gmail.com,Tue Aug 9 15:38:04 2011 +0000,- start throwing ExecutionError from Cache.get - allow Throwable in UncheckedExecutionException again
7a95b2151f935aa1b95875200e6a7f999c8eeb1f,9f9ffca114c92a8ba72f52033ed94c1117e1315e,guava.mirrorbot@gmail.com,Mon Aug 8 16:32:55 2011 +0000,Make SortedLists public.  It makes it much clearer what you're doing in a binary search.
4b454d968113001e544011c90fc7ba6408a68171,04cb0bd4acb8028fb66127a59ba9d0e93a5e6892,guava.mirrorbot@gmail.com,Mon Aug 8 13:49:03 2011 +0000,rollback
04cb0bd4acb8028fb66127a59ba9d0e93a5e6892,2969926e4549bccbb8ddaa8b4e93e08f9f0054f4,guava.mirrorbot@gmail.com,Mon Aug 8 13:21:10 2011 +0000,Make ListeningScheduledExecutorService.schedule* return a ListenableFuture
d0686ecae5f502ca81b611f7a8653bd94d29420e,06eab020b4ea54091ab0c0ee72b0aa7e2e2aa27c,guava.mirrorbot@gmail.com,Fri Aug 5 16:45:32 2011 +0000,SerializableTester.reserializeAndAssert checks that original.getClass() == copy.getClass(). Fix EmptyContiguousSet serialization using cgdecker's patch (which also removes a redundant "implements Serializable" from RegularContiguousSet). Also, stop using reserializeAndAssert for the few instances in which the reserialized version of an object is a different class.
f5a7c1a3e0a55b4440fccd0f5004fb7256ce1fcc,5fe70b8509b2a14787d3823b5f928ef399a7afdc,guava.mirrorbot@gmail.com,Thu Aug 4 14:59:07 2011 +0000,Instead of providing the views themselves in the "standardXXX" methods of ForwardingMap and ForwardingMultiset, provide overridable classes that represent the sensible implementations.  This is much cleaner and doesn't require awkward "iterator supplier" workarounds.
5fe70b8509b2a14787d3823b5f928ef399a7afdc,e79151ace251da007c70d1ead9e9c5992f9901e4,guava.mirrorbot@gmail.com,Thu Aug 4 14:43:52 2011 +0000,Introduce UnsignedLongs.
616b0430d73f5dfc602c6e4fb17c60288e0b480f,b5119bde43a61b7ab66d8c843a3e48326071e96b,guava.mirrorbot@gmail.com,Thu Aug 4 14:06:40 2011 +0000,add common.collect.testing to Guava
81eedd445ecba741fc53b9846c5a2e56e6eeb171,37fa1d4fcd055e99351a2542c939c74cf272f22f,guava.mirrorbot@gmail.com,Wed Aug 3 13:56:12 2011 +0000,Rework exception handling in Futures.get and Futures.getUnchecked. Add ExecutionError, and use it in Futures.get, Futures.getUnchecked, and Cache interface and implementations. Specialize UncheckedExecutionException constructors to accept only Exception, rather than Error, to encourage use of ExecutionError. Fix an unrelated typo in the MapMaker Javadoc.
c001245dd8df746d36af64391f53212d4613e4d7,4de5e3903ea31cf2bf4cd3cd7908cff83d72a054,guava.mirrorbot@gmail.com,Tue Aug 2 12:27:11 2011 +0000,Use a custom serialized form for RegularContiguousSet, as in cgdecker's original patch, to avoid using ImmutableSortedSet's very, very large serialized form.
0825f346a52ebfc8e4e2959d8d7c864d9da94a9b,5549d365b673a569043b6a6f91df099bfe07ae0a,guava.mirrorbot@gmail.com,Mon Aug 1 19:31:45 2011 +0000,- deprecate caching methods - remove unused cleanupExecutor
5549d365b673a569043b6a6f91df099bfe07ae0a,7da1a643cb05dc3e006afe087bedfb53ad2c1143,guava.mirrorbot@gmail.com,Mon Aug 1 19:28:44 2011 +0000,Make more classes serializable. Merged from cgdecker's patch for Enums.valueOfFunction, Equivalence.Wrapper, Optional, Range (and Cut), the DiscreteDomain implementations, and ContiguousSet (but skipped Holder)
b5d39b05fbca60fd285e65f2a8ce18a36bd41da3,8ecbbcc022da4728a4e301647d3a61410fcfcf3b,guava.mirrorbot@gmail.com,Mon Aug 1 16:44:37 2011 +0000,MapJoiner support for Iterable<Entry>. From cgdecker's patch, except a change in line wrapping and a reordering of methods.
8ecbbcc022da4728a4e301647d3a61410fcfcf3b,3318bf8fc09829a8b9293864a5f1fc7993249d48,guava.mirrorbot@gmail.com,Mon Aug 1 16:35:12 2011 +0000,Call only the no-arg EqualsTester constructor, addEqualityGroup, and testEquals.
3318bf8fc09829a8b9293864a5f1fc7993249d48,dae49d1c4bce831a80b5a6e033a72af57eac3f2b,guava.mirrorbot@gmail.com,Mon Aug 1 16:16:00 2011 +0000,Remove Holder.
dae49d1c4bce831a80b5a6e033a72af57eac3f2b,d0026766b1581677a406aa68e2c0bc4a18fa3c3f,guava.mirrorbot@gmail.com,Mon Aug 1 15:56:17 2011 +0000,Merge recent changes to common.testing and testing.util versions of utility classes.
414b26b365af30cc2defcdaf06a163178eed5f7f,f4f4caf04a5130bdf630d4670a4d6f2d7707cab7,guava.mirrorbot@gmail.com,Mon Aug 1 15:02:34 2011 +0000,Replace EvictionListeners with RemovalListeners
d6b8b507adb35f98a6b85e16eaa4b28f46ee5f6e,af5194696140453304a4d0d52bc8ac46823752b8,guava.mirrorbot@gmail.com,Mon Aug 1 14:24:15 2011 +0000,Fix licenses and simplify a few things in BstRangeOps
de78035826ac131e562d025a87d61fdb36c648ae,17c363a0c1ef30c17e860067c524f8da59caa307,guava.mirrorbot@gmail.com,Wed Jul 27 22:15:25 2011 +0000,move EquivalenceWrapper to Equivalence.Wrapper
dcaab87e6bc95a8e8162fecbc4a757ef534e062d,aadd54a45faff761042e29821f39b0b797dec28e,guava.mirrorbot@gmail.com,Wed Jul 27 21:29:45 2011 +0000,Unify BstInOrderPath.nextInOrder(), prevInOrder() to one function with a BstSide argument
aadd54a45faff761042e29821f39b0b797dec28e,2769293fa44aeb60819a41150e6f20cd8f8ff0b4,guava.mirrorbot@gmail.com,Wed Jul 27 21:27:59 2011 +0000,Add BstAggregate to BstRangeOps, which allows us to total distinct nodes, element occurrences, or whatever within a specific range.
2769293fa44aeb60819a41150e6f20cd8f8ff0b4,b26983651b4c13ae718e2eb22df13c4fde77cc4d,guava.mirrorbot@gmail.com,Wed Jul 27 21:26:14 2011 +0000,Implement BSTCountBasedBalancePolicies, which implements size-balancing of binary search trees.
87fa2e243109d1f28c94ddb8392411115273d4f1,13ac2cd2e2deeee5d43255885076ee56853793ee,guava.mirrorbot@gmail.com,Wed Jul 27 20:28:41 2011 +0000,Implement BSTUtilities, which provides helper methods for balance policies that insert and remove the minimum or maximum entry in a binary search tree.
13ac2cd2e2deeee5d43255885076ee56853793ee,db84b65703f9ba207a52f252b0018ddd6f40ed7b,guava.mirrorbot@gmail.com,Wed Jul 27 20:18:47 2011 +0000,Add BSTRangeOps and GeneralRange.  GeneralRange is a package-private implementation of an interval with any desired comparator, and BSTRangeOps provides operations on ranges within binary search trees.
db84b65703f9ba207a52f252b0018ddd6f40ed7b,f1569d50ec5199583cdd223bd55d1a2716d1e5ad,guava.mirrorbot@gmail.com,Wed Jul 27 20:02:31 2011 +0000,Hide flattenHierarchy() behind a MapMaker cache.
f1569d50ec5199583cdd223bd55d1a2716d1e5ad,bf3b770ff9f808b4b773ebe1961ea6ba1bab2cdc,guava.mirrorbot@gmail.com,Wed Jul 27 19:53:51 2011 +0000,Rename BSTXXX to BstXXX.  Also, move testing utilities (like the SimpleNode class) to new file BstTesting.
bf3b770ff9f808b4b773ebe1961ea6ba1bab2cdc,756dd64541365d318a69a49e751bf7448e8e38c1,guava.mirrorbot@gmail.com,Wed Jul 27 19:44:50 2011 +0000,Some additional release 10 tweaking.
b3b3eca79a5159fe4fb7a165fd2d861e853e72ba,e767cfd2cb5dda09a31ab4b15a5622c5ac971529,guava.mirrorbot@gmail.com,Wed Jul 27 19:12:21 2011 +0000,Implement BSTOperations, which does single-key query and modification operations.
e767cfd2cb5dda09a31ab4b15a5622c5ac971529,2789a742435443060abb74c2f618226fa4ea05db,guava.mirrorbot@gmail.com,Wed Jul 27 19:03:15 2011 +0000,Remove dummy <K> type parameters.
2789a742435443060abb74c2f618226fa4ea05db,8fe3740b4f3b9166153cb8031d7dbd1322b8ec90,guava.mirrorbot@gmail.com,Wed Jul 27 18:54:15 2011 +0000,- Add a new InetAddresses.toAddrString() method that produces a text-formatted IP address according to RFC5952. - Change toUriString to use this method instead of getHostAddress()
8fe3740b4f3b9166153cb8031d7dbd1322b8ec90,56967521032344e4648d54b7ad9b9d99fcb627fd,guava.mirrorbot@gmail.com,Wed Jul 27 18:45:18 2011 +0000,Implement BSTMutationResult and BSTMutationRule.
56967521032344e4648d54b7ad9b9d99fcb627fd,b508f5c6650742252aec7696c2159eb03ac1a220,guava.mirrorbot@gmail.com,Wed Jul 27 18:36:21 2011 +0000,Implement BSTInOrderPath, which extends paths in binary search trees with forward and backward inorder traversal.
b508f5c6650742252aec7696c2159eb03ac1a220,395e998b21811e68ebb26f0ecb02e722f1c99f72,guava.mirrorbot@gmail.com,Wed Jul 27 18:27:32 2011 +0000,Add BSTPath and BSTPathFactory, which provide a generic way of manipulating paths in a binary search tree.
7476dde5258cdc306f1c598f3d77bce0f898c86e,1c7c26962b76b3e066d126be70a8788e0a64d4f8,guava.mirrorbot@gmail.com,Tue Jul 26 14:12:20 2011 +0000,Create the BSTNode class and the BSTSide enum.  BSTNode is the root type of nodes in binary search trees.
1c7c26962b76b3e066d126be70a8788e0a64d4f8,23f4d6f35f6408eec2cc33badb0a7b213d5c3096,guava.mirrorbot@gmail.com,Tue Jul 26 13:41:29 2011 +0000,inline ComputingConcurrentHashMap into CustomConcurrentHashMap
23f4d6f35f6408eec2cc33badb0a7b213d5c3096,b6b9d05351c32cb9d8f52227c4ce6cdc52749ef7,guava.mirrorbot@gmail.com,Mon Jul 25 16:21:20 2011 +0000,Separate i18n support from InternetDomainName.
b6b9d05351c32cb9d8f52227c4ce6cdc52749ef7,718bad39b0bff3e26cc44ab0ef6631b911674fb5,guava.mirrorbot@gmail.com,Mon Jul 25 16:20:08 2011 +0000,release Atomics
c58ed03477bb35b7e515090534ace1245c94accc,5828d379dc7e9f673122e76d1681fbd991efaeba,guava.mirrorbot@gmail.com,Mon Jul 25 16:17:48 2011 +0000,add EventBus
0bec11dadb3e962aad6d4954dd08d374b8922614,51234d756e9ebd547f9978626ac01ef594381b7d,guava.mirrorbot@gmail.com,Tue Jul 19 19:40:46 2011 +0000,Beta changes for R10
270fb44b0f4d68acaf15c7fa0342bf688c0dbfc3,4264ac9c3ae3cf1188f6de93a83bf4a9069524ec,guava.mirrorbot@gmail.com,Mon Jul 18 20:00:24 2011 +0000,Make AbstractListeningExecutorService public. Also, make it a little more consistent with Guava style and inline the misleading newTaskFor
4264ac9c3ae3cf1188f6de93a83bf4a9069524ec,31a2ff00211e28ada5bbcfde0a171432e607cd61,guava.mirrorbot@gmail.com,Mon Jul 18 19:58:29 2011 +0000,-Fixed bug in the Objects#simpleName helper method -Wrote tests in ToStringHelperTest (since simpleName is used by toStringHelper)
31a2ff00211e28ada5bbcfde0a171432e607cd61,b21e63569b69aa02124b2df97b7571f7449d3eb0,guava.mirrorbot@gmail.com,Mon Jul 18 19:56:13 2011 +0000,Add factory methods to support the two remaining construction use cases for Ranges.
5469124a71873058c07f0999115a186f5a5300e3,ad26795b4220ccacd7f56d7cf7ea96ab669e772a,guava.mirrorbot@gmail.com,Thu Jul 14 18:00:21 2011 +0000,Add Uninterruptibles.getUninterruptibly
ad26795b4220ccacd7f56d7cf7ea96ab669e772a,b90d3753f6e127f1ebffa52471f955eabd20654f,guava.mirrorbot@gmail.com,Thu Jul 14 17:59:02 2011 +0000,A batch of minor tweaks to Range-related code/docs.
fe758695c2cf3abd61e1e22dc902bb764adba7ca,a7acd14f84eabd98f44f8df9e598d386dce17fc8,guava.mirrorbot@gmail.com,Wed Jul 13 22:10:18 2011 +0000,Sync folders for tests and test-libraries to separate "projects" in the open-source.
ab3bd3a78d8acc6922f328269b4810c1a56541ce,eff547826025edda6873becb3104d07c13f81630,guava.mirrorbot@gmail.com,Wed Jul 13 18:44:39 2011 +0000,rollback
eff547826025edda6873becb3104d07c13f81630,a7493e579b9d4febd01bbc2f856fa1186280acce,guava.mirrorbot@gmail.com,Wed Jul 13 18:43:16 2011 +0000,Make ListeningScheduledExecutorService.schedule* return a ListenableFuture
a7493e579b9d4febd01bbc2f856fa1186280acce,dbf570f8c1c9a1d62bed24d1be8d159e484e597c,guava.mirrorbot@gmail.com,Mon Jul 11 22:42:46 2011 +0000,Promotes ContiguousSet to part of the public Range api.
117a7cf8b0606c06a1ef6b95fb5b97b291458cec,457b295e7bc6f6ad15b3abe7149bf890d25ab1b6,guava.mirrorbot@gmail.com,Fri Jul 8 16:04:48 2011 +0000,make K, V the base type, and then extend to K1, V1
457b295e7bc6f6ad15b3abe7149bf890d25ab1b6,5416b3db0de8436a6388dc733623b474ea5c3e6f,guava.mirrorbot@gmail.com,Thu Jul 7 16:19:15 2011 +0000,Implement Multisets.removeOccurrences and retainOccurrences
d54d130fb1cbdc405e78adfc65339b8a3b6f26b4,bf3cbe742aa51e16bc35e4dc7f68f2b3ea7bee08,guava.mirrorbot@gmail.com,Thu Jun 30 21:01:24 2011 +0000,Add Keys, Values, and Entries skeleton implementations to Multimaps.
bf3cbe742aa51e16bc35e4dc7f68f2b3ea7bee08,5e5a6d2ad71915be42e945a97b56a96d9c525c20,guava.mirrorbot@gmail.com,Wed Jun 29 15:36:23 2011 +0000,Introduce common.cache
6acec39b056814b43cc7c055f6fe197317a24865,74798fb2cefa5d002fc3827594654740b3ee8599,guava.mirrorbot@gmail.com,Wed Jun 29 00:50:44 2011 +0000,Remove collect.Cache and all associated classes and references, soon to be added in common.cache.
74798fb2cefa5d002fc3827594654740b3ee8599,6c37b4b488b32e3b574305ad1bd6cffa35157d71,guava.mirrorbot@gmail.com,Wed Jun 29 00:37:53 2011 +0000,Add MapSplitter implementation to Splitter.
6c37b4b488b32e3b574305ad1bd6cffa35157d71,10c62d7b6e70bc4ab342287a8a57dc61d22cf28f,guava.mirrorbot@gmail.com,Wed Jun 29 00:35:58 2011 +0000,Provide package-private tailMap(E, boolean), etc. methods for ImmutableSortedSet and ImmutableSortedMap.
f1dd5f59b4c796a5165d3e4063a1ffd568272c0a,1360e12079223b1cc8b142cd52bc5b03ce6b0ebc,guava.mirrorbot@gmail.com,Tue Jun 28 15:25:42 2011 +0000,Moved UncheckedExecutionException to util/concurrent.
1360e12079223b1cc8b142cd52bc5b03ce6b0ebc,a9e38e42901ebaddf9285d8b0f5be5b5a10244f5,guava.mirrorbot@gmail.com,Sat Jun 25 00:39:10 2011 +0000,Rollback.
a9e38e42901ebaddf9285d8b0f5be5b5a10244f5,774ebd4cdc7294a47ddc47ff5701474ef0ef20f4,guava.mirrorbot@gmail.com,Fri Jun 24 23:34:31 2011 +0000,Create EmptySortedMultiset, a trivial implementation of a subMultiset whose bounds are such that it could never have any elements.
774ebd4cdc7294a47ddc47ff5701474ef0ef20f4,872769250cb5c39afe834d5cdc12de4e8e656646,guava.mirrorbot@gmail.com,Fri Jun 24 23:32:38 2011 +0000,Implement AbstractSortedMultiset, a skeleton implementation of a SortedMultiset.
872769250cb5c39afe834d5cdc12de4e8e656646,9413cf4a7bb88c5464a5a00deb853d0931c7d267,guava.mirrorbot@gmail.com,Fri Jun 24 23:30:12 2011 +0000,Make use of the new Multisets.ElementSet and EntrySet skeletons in common.collect.
9413cf4a7bb88c5464a5a00deb853d0931c7d267,7c603ae3d3d76af888ad3685c6a789ffc8c0834b,guava.mirrorbot@gmail.com,Fri Jun 24 23:27:37 2011 +0000,TreeBasedTable.row() returns a SortedMap
7c603ae3d3d76af888ad3685c6a789ffc8c0834b,b367e8a004116c66626c087ccd0b1f7ad702b54c,guava.mirrorbot@gmail.com,Fri Jun 24 22:04:02 2011 +0000,Add Uninterruptibles.joinUninterruptibly
1bf14f9852e41756fd658638bcdb9682e637d57c,94d8950f580a11390f5aa212733ef58ca358d727,guava.mirrorbot@gmail.com,Fri Jun 24 21:50:56 2011 +0000,Fix TestModuleEntryPoint.
94d8950f580a11390f5aa212733ef58ca358d727,8285ea5d073d6883eaf53595b0b9c2fd0ec182c4,guava.mirrorbot@gmail.com,Fri Jun 24 21:48:44 2011 +0000,Add SortedMultiset.ElementSet and SortedMultiset.DescendingMultiset skeleton implementations to SortedMultisets.
4453b1e930121c4a99929259115015360a4ee55b,d1cd105198f2e40eb43ceed869edf294e0a6d726,guava.mirrorbot@gmail.com,Wed Jun 22 16:47:00 2011 +0000,Changes to SortedMultiset.
d1cd105198f2e40eb43ceed869edf294e0a6d726,2ebe4b2fe66170cf77b7984bc46aaa0f66e0f5f9,guava.mirrorbot@gmail.com,Wed Jun 22 16:44:52 2011 +0000,Refactor ImmutableMultiset so that all of its implementation details are in RegularImmutableMultiset.
2ebe4b2fe66170cf77b7984bc46aaa0f66e0f5f9,0f665880c99f90936464b763fff3b23bad7e118c,guava.mirrorbot@gmail.com,Wed Jun 22 16:41:15 2011 +0000,Stopwatch/Ticker @GwtCompatible
580538910fac252b1d308d8ac6d2bf08e774673f,559a0744abb05326badf3b5a0345860f80798788,guava.mirrorbot@gmail.com,Wed Jun 22 15:20:41 2011 +0000,Refactor Maps.valuesImpl, entrySetImpl, and keySetImpl into skeleton abstract classes
2f4cae379dcc3db3437b78046b1ad0513a52791f,c5145ffbf08aabb6ee9d5ea8833a4ce18d8d72db,guava.mirrorbot@gmail.com,Wed Jun 22 14:14:59 2011 +0000,Add skeleton ElementSet and EntrySet implementations to Multisets
c5145ffbf08aabb6ee9d5ea8833a4ce18d8d72db,005d2636567e070ea0fa8b4e13e53501214087f3,guava.mirrorbot@gmail.com,Wed Jun 22 14:04:41 2011 +0000,Warning cleanup.
f397b6a97aa7ffb3f9e5ed7997d27d1d9ae44df7,466620fa6de518dae169734661d24151e6dd9993,guava.mirrorbot@gmail.com,Mon Jun 20 18:30:30 2011 +0000,Introduce a SortedMultiset interface.  It's package-internal for now.
4d14578f560048c131e6748e64898008905dd7db,78b0172b008ca1fd37363951cbeaa217a2041f94,guava.mirrorbot@gmail.com,Mon Jun 20 18:09:42 2011 +0000,Futures.get and getUnchecked.
9dde2406c8fcf61022b471d792bf4e46207a5fcc,6b5fbaa81c9c1b6c211dea7acc02f70104f68ef8,guava.mirrorbot@gmail.com,Wed Jun 15 12:51:24 2011 +0000,deprecate FinalizableReferenceQueue
6b5fbaa81c9c1b6c211dea7acc02f70104f68ef8,19ec9dd7ddea5a54271c422c886eccf290e14429,guava.mirrorbot@gmail.com,Tue Jun 14 16:21:24 2011 +0000,implement newWeakInterner using CustomInterner
19ec9dd7ddea5a54271c422c886eccf290e14429,7021c4ef7f2960780a345e1fd3b4bd180170ee04,guava.mirrorbot@gmail.com,Tue Jun 14 12:41:44 2011 +0000,- don't let Cache.asMap.get impact recency queue - add getLiveEntry, and use it in get, containsKey, and Interners
c4e15b8fc32c580afb8dc3fa6060bb67f23c92db,f61b8474810da4b2a48b0f21d0a5184f627b8398,guava.mirrorbot@gmail.com,Thu Jun 9 11:27:23 2011 +0000,split compute into getOrCompute/compute
d55e49806cc1648d260c68dad979b75833c384f8,48a9f33b1d20381dbc51e038bebda59fba094e32,guava.mirrorbot@gmail.com,Wed Jun 8 14:19:17 2011 +0000,Add Futures.lazyTransform Cleanup some small javadoc inconsistencies
48a9f33b1d20381dbc51e038bebda59fba094e32,093c91737c08de04a16d8412e84cd0089b3a47b2,guava.mirrorbot@gmail.com,Wed Jun 8 13:57:38 2011 +0000,add Files.simplifyPath
0092825a6ddccdb868f1a3b726445676b087191c,c58f5577cdaa08cdf38b19dca3beacb6d679046f,guava.mirrorbot@gmail.com,Wed Jun 8 13:07:39 2011 +0000,In CheckedFuture Javadoc, emphasize that it has checkedGet(), not that it has addListener(), since any ListenableFuture has the latter. In Futures.transform/chain Javadoc, attempt to simplify the text about cancellation, and revise and move a not always accurate statement about sameThreadExecutor().
61e205c9052232b130461d7e505d6f3982be77f0,5809efca4c4fd7dbd3c954a3c1656baecf5cf9b2,guava.mirrorbot@gmail.com,Tue Jun 7 12:47:53 2011 +0000,allow null parameters wherever possible in public ConcurrentMap methods
a13e02167e90125e6a78bf9bbd061996d05a143a,87df707d642a3cbf8037678aa4ea4c58c502fe85,guava.mirrorbot@gmail.com,Tue Jun 7 12:06:49 2011 +0000,stop using FinalizableReferenceQueue
87df707d642a3cbf8037678aa4ea4c58c502fe85,8309c2994a3ef05b91252aec8864ae371135800d,guava.mirrorbot@gmail.com,Fri Jun 3 11:16:13 2011 +0000,introduce CacheStats.createExceptionCount
30aae4f25d511a34ef41d340945234b9679fa5b0,2b295dc3ce740836534f7caf0b214c7589b0b8d0,guava.mirrorbot@gmail.com,Thu Jun 2 11:36:36 2011 +0000,Add a first pass to InetAddresses.forString() that validates the characters, and decides which address family's parser to call.
d9df723ceefa789c14d3f60b0d3b805096843823,816331252820d2b52cf1ac22fd2b1180ae6f59ee,guava.mirrorbot@gmail.com,Wed Jun 1 11:50:15 2011 +0000,- move custom queue implementations out of Segment - update (unreleased) cleanupExecutor to use ScheduledExecutorService
3ba8913b9fad819c24323943971b256151d67a80,ac4eddbe2c16062e74753f7218a3f392d0a745b6,guava.mirrorbot@gmail.com,Wed May 25 22:02:11 2011 +0000,leave a few classes/methods public but deprecated for the next release
46d4eb45009051a9c1d212c26ee4567db3e9c34d,457462e54495dc3e31d8680f1de6b9c260ad70b6,guava.mirrorbot@gmail.com,Wed May 25 01:34:02 2011 +0000,Equivalence abstract class change
457462e54495dc3e31d8680f1de6b9c260ad70b6,f681eacba59748d116ecab7b8885f545a6b4aea7,guava.mirrorbot@gmail.com,Tue May 24 19:27:00 2011 +0000,release makeCache
4bef95a137f3cdfce8e5961a8b0274ca1f83d813,6e1f1fd477562d47463279503b0551b53c640e39,guava.mirrorbot@gmail.com,Tue May 24 13:23:08 2011 +0000,Remove k12.ca.us from the under-TLD test list to fix the build.
798be897ac21ab4b861acaa44a83c0dc8185827d,46c620d094ef1f7caec153616b421b2f35798829,guava.mirrorbot@gmail.com,Mon May 23 13:27:44 2011 +0000,Immediately cleanup partially-collected entries as they are encountered. This should only happen when FinalizableReferenceQueue falls behind.
46c620d094ef1f7caec153616b421b2f35798829,c1b14ee27f5a094cf59a1cebc8510020f60788c3,guava.mirrorbot@gmail.com,Mon May 23 13:21:03 2011 +0000,LinkedListMultimap values() and entries() methods now return Lists
f7af1268fa325b985ae41ad2724133bfe0ac4341,8d93dfaccc39ae925d8ac86f8c3ed510ceedbfb3,guava.mirrorbot@gmail.com,Thu May 19 01:56:03 2011 +0000,export com.google.common.testing into guava testing
483276e6be92c9a37714335e4e12225557fc9419,425f94349f5c09a054bd2ad69c395818703ab879,guava.mirrorbot@gmail.com,Wed May 18 15:06:14 2011 +0000,Fix up @Beta, @since, etc.
cc0d96ecd04b2614cf28b66b93e24d163553ed9f,f725415eae3da91ec3ccb3a10f5351624dfcfb19,guava.mirrorbot@gmail.com,Mon May 16 12:29:18 2011 +0000,A partial round of javadoc wordsmithing on MapMaker and a small javadoc addition to MMPQ.
f725415eae3da91ec3ccb3a10f5351624dfcfb19,c8d9b916179531d0899a0411fc562eec611e5d33,guava.mirrorbot@gmail.com,Mon May 16 12:22:56 2011 +0000,introduce Stopwatch
c8d9b916179531d0899a0411fc562eec611e5d33,cf718c5842b150a0df6411a457d427b51e60ae28,guava.mirrorbot@gmail.com,Mon May 16 12:16:06 2011 +0000,- remove cleanupQueue, immediately remove entries rather than unsetting them - ignore partially-collected entries during most operations, simplifying count management
cf718c5842b150a0df6411a457d427b51e60ae28,c19921758fe661962e3f5f5c697453475171e213,guava.mirrorbot@gmail.com,Fri May 13 12:20:21 2011 +0000,- release Cache and AbstractCache in @Beta - rename CacheStatsCounter to AbstractCache.StatsCounter - rename CacheStatsCounterImpl to AbstractCache.SimpleStatsCounter
c19921758fe661962e3f5f5c697453475171e213,58c90ae66c33501b0d301e2307aeb53c5082bf6d,guava.mirrorbot@gmail.com,Fri May 13 12:19:19 2011 +0000,- make removalNotification public - unit tests for removal notification - remove unused EvictionListeners class
58c90ae66c33501b0d301e2307aeb53c5082bf6d,c7b17cede87c16cb4cf7059441fa67585ace18a2,guava.mirrorbot@gmail.com,Fri May 13 12:18:12 2011 +0000,introduce CacheLoader
c7b17cede87c16cb4cf7059441fa67585ace18a2,bc47900d640c2264fb8a9f0cf799c3985adb9a27,guava.mirrorbot@gmail.com,Thu May 12 14:44:51 2011 +0000,release Holder to go with Optional; misc improvements to Optional.
6981740800b04aa5df81f3d80ae561953e7b1e56,a6339e3b12f563a1c1129b9fafc87a830a17b493,guava.mirrorbot@gmail.com,Wed May 11 22:24:42 2011 +0000,Improvements to Optional: or/or/orNull methods.
00bbec0d0e197a6b3f577530623aaf269c00db69,c87142e306811f7ac9094d43de45dca4339a2898,guava.mirrorbot@gmail.com,Wed May 11 22:01:52 2011 +0000,Now users can create an Interner by providing the underlying MapMaker.
df76d9fa660f672e95d621ae5b20b4ff7adf1769,1e894ebb3ba63e1ea06af2c7ae15b30693ab29a4,guava.mirrorbot@gmail.com,Wed May 11 21:59:05 2011 +0000,introduce RemovalNotification for use by RemovalListener
1e894ebb3ba63e1ea06af2c7ae15b30693ab29a4,ef80c224861e3a676e2b6545a68781053b549ed5,guava.mirrorbot@gmail.com,Fri May 6 11:44:31 2011 +0000,rollback
ef80c224861e3a676e2b6545a68781053b549ed5,f52ed9ee8e39c679e07ee118dfb7f7dfc3179659,guava.mirrorbot@gmail.com,Fri May 6 11:09:21 2011 +0000,Turn Equivalence to abstract class.
f52ed9ee8e39c679e07ee118dfb7f7dfc3179659,e3b22f92567bc66425772f5deb2e1f9d2d7b13d8,guava.mirrorbot@gmail.com,Fri May 6 11:07:26 2011 +0000,Fix issue 572 and issue 614
9246aef36f6cdd59db4b6495a9f7a57891736e6d,3295847aa0f463fd082b5dd1b54eba6a4c8aa06c,guava.mirrorbot@gmail.com,Thu May 5 11:41:40 2011 +0000,introduce CacheStatsCounter/Impl, to facilitate stats counting
892f2a51c0f1a8405832c339ffe90142ae94c1e6,859a3816b268781af1802719a7d0a5a2158121ee,guava.mirrorbot@gmail.com,Wed May 4 11:25:39 2011 +0000,prepare for MapMaker.removalListener
6739a534dfbc82ad6eaf8db9fcaf47bc1ea79bed,d3abdd9e76ef0dc23650da95f60e03fd1b2ed60d,guava.mirrorbot@gmail.com,Tue May 3 12:16:56 2011 +0000,- don't enqueue cleanupExeuctor work on every operation - pull put into ComputingSegment - call postWriteCleanup after every unlock
fdff38befd3294746b465993be5db36d98f2a34b,b1e632ac78c6074ada75233462452780a93762de,guava.mirrorbot@gmail.com,Mon May 2 15:08:01 2011 +0000,Add missing tests in com.google.common.base.
b1e632ac78c6074ada75233462452780a93762de,ba41093b42024d072743904adf0a6dd2417451df,guava.mirrorbot@gmail.com,Mon May 2 15:01:53 2011 +0000,Add Tables.transformValues().
7b42834aa30de9ab058584b2787227d9988ac1a3,1ef7f793742b940281e513ab5bb6d1c819d495dd,guava.mirrorbot@gmail.com,Mon May 2 14:31:13 2011 +0000,rollback previous change
1ef7f793742b940281e513ab5bb6d1c819d495dd,75214c924d9c39facb61183b0247619fcfebc92b,guava.mirrorbot@gmail.com,Mon May 2 14:09:08 2011 +0000,- don't enqueue cleanupExeuctor work on every operation - pull put into ComputingSegment - call postWriteCleanup after every unlock
6d60ccc7204ec520780b6899359132eba4edc407,f7fba870bc4fdce22e491dba2ee0d619eb0ea2cf,guava.mirrorbot@gmail.com,Mon May 2 12:56:09 2011 +0000,Make AbstractFuture implement ListenableFuture in preparation for changing all AbstractListenableFuture users to AbstractFuture and removing the former. Merge both classes' Javadoc into AbstractFuture, and tweak it some more.
a9d192cbe41d23f9417ddccf8ff0fe6cc628663e,53bcea501aab53f77cf6f313f5794b8f3e9cbca8,guava.mirrorbot@gmail.com,Thu Apr 28 14:45:31 2011 +0000,Rollback previous change.
53bcea501aab53f77cf6f313f5794b8f3e9cbca8,65b86a4b57abbc844279a307339a4a615d57bb42,guava.mirrorbot@gmail.com,Thu Apr 28 14:19:12 2011 +0000,- remove cleanupQueue - immediately remove entries rather than unsetting them - don't enqueue cleanupExeuctor work on every operation
65b86a4b57abbc844279a307339a4a615d57bb42,a0753a617325b308d2d8b2158182eb717e787d3a,guava.mirrorbot@gmail.com,Thu Apr 28 14:04:58 2011 +0000,- test null computations - move ComputingMapAdapter into ComputingConcurrentHashMap - restore the while() loop around wait()
a0753a617325b308d2d8b2158182eb717e787d3a,c6f8f2035d5f2287e391849ac66996e2fc04bcf7,guava.mirrorbot@gmail.com,Thu Apr 28 13:55:42 2011 +0000,Fix Maps.transformValues() when map views have iterators that don't support remove()
c6f8f2035d5f2287e391849ac66996e2fc04bcf7,44e73ae5701e5e61e53d1f55a9fd30f5c283a067,guava.mirrorbot@gmail.com,Wed Apr 27 13:14:41 2011 +0000,Add a HostAndPort Java class. Update HostSpecifier to use this class.
6c3eec595a9a8d2ec0277cfa46e9592637ae24c3,294ae439736e9aa3f87ce727929b2bb6f225dc43,guava.mirrorbot@gmail.com,Wed Apr 27 13:02:44 2011 +0000,Release Listening{,Scheduled}ExecutorService and MoreExecutors.listeningDecorator as @Beta by using Jsr166AbstractExecutorService. Make MoreExecutors.sameThreadExecutor implement ListeningExecutorService. Also, revert a few Guava-fications of non-Guava @since tags.
ef2231dbccbafe2b1ed1b49c2a190b550b09e7df,aed324cc5bcc6b50d5624d734d8cfb6336be84c4,guava.mirrorbot@gmail.com,Tue Apr 26 14:46:49 2011 +0000,- move null computation checking out of CustomConcurrentHashMap - avoid indirection of ForwardingMap in ComputingMapAdapter
aed324cc5bcc6b50d5624d734d8cfb6336be84c4,6b0878bb361f990e8125db56e1905ea43d35ad45,guava.mirrorbot@gmail.com,Tue Apr 26 00:49:50 2011 +0000,- call postReadCleanup during view iteration - don't lock for spurious read cleanup
ac41a695df586611cc94b58b0a4694b45fb0367f,195c219da43c9e72d4f203bde6af55b6b9c44955,guava.mirrorbot@gmail.com,Fri Apr 22 18:43:54 2011 +0000,always call postReadCleanup after compute
8bd124ef4b414552fcdc6ba7a52aa677c60f6fee,e7eb1829e0979fb691a7668ecd15116a9afd7e2e,guava.mirrorbot@gmail.com,Fri Apr 22 14:35:06 2011 +0000,new Beta additions for r10
e7eb1829e0979fb691a7668ecd15116a9afd7e2e,0fbb5fd987e669919e77023b5f44319cbf1a1fc4,guava.mirrorbot@gmail.com,Fri Apr 22 14:27:55 2011 +0000,introduce AbstractReferenceEntry to cleanup partial ReferenceEntry implementations
6febfcaeb5cee048529e38cb781a8dc7a06252c4,5ef30df12a54b06d59416feeb53ae1891d9579ff,guava.mirrorbot@gmail.com,Wed Apr 20 13:21:42 2011 +0000,adopt ConcurrentHashMap's new containsValue, without the locking
2abfb185dc4979580376486777093b82e4ae5222,b146e2bb8d049de9f23e2784da4ddfac37671565,fry@google.com,Fri Apr 15 17:22:23 2011 +0000,directory reorganization in preparation for deeper maven integration
9b9bb4b435386a8ba7f1c74786e0f260e3cd205f,f4bfb429f2609ddf95e215a71eee37f92513e06c,guava.mirrorbot@gmail.com,Thu Apr 14 12:56:02 2011 +0000,Add Table. Add AbstractLinkedIterator. Add ForwardingNavigable*, but strip from public release. Standardize on <ul> instead of our current <dl>/<ul> mix.
f4bfb429f2609ddf95e215a71eee37f92513e06c,c320dfaaea46ba3c20c68d04bd935379ee17cdf3,guava.mirrorbot@gmail.com,Thu Apr 14 12:55:22 2011 +0000,Add Predicates.assignableFrom.
c320dfaaea46ba3c20c68d04bd935379ee17cdf3,e7c525b3310b07221b263ff48b3978d4ed54f811,guava.mirrorbot@gmail.com,Thu Apr 14 12:47:46 2011 +0000,make Segment a static nested class
e7c525b3310b07221b263ff48b3978d4ed54f811,a7aa10ddb815ce7996f3fae103bfd3823b1336ed,guava.mirrorbot@gmail.com,Thu Apr 14 12:37:16 2011 +0000,update @since syntax to specify "Guava release 0x"
a7aa10ddb815ce7996f3fae103bfd3823b1336ed,c2fea903c81ef754117cf32142e93a32a59edef8,guava.mirrorbot@gmail.com,Thu Apr 14 12:11:40 2011 +0000,fix indentation
c2fea903c81ef754117cf32142e93a32a59edef8,babe3c2090831cb1a83f66ea2a0b15799150ea12,guava.mirrorbot@gmail.com,Thu Apr 14 11:59:55 2011 +0000,reformat to 100 columns
babe3c2090831cb1a83f66ea2a0b15799150ea12,770b137ad233eb366548bbcf71646d751469005c,guava.mirrorbot@gmail.com,Wed Apr 13 22:01:34 2011 +0000,complete sync
5c0b425d75f0ea1e5702f9b93298f45a32d35641,3ee8e542b02a448c07dbe25ae038597b07856b1b,guava.mirrorbot@gmail.com,Tue Apr 12 19:57:26 2011 +0000,(Re)Add Uninterruptibles with support for CountDownLatch.await() and sleep()
3f70b40ba5ac8b9a48f06513e9d474bcc78a957e,c094199109215123e123908f5420de898717d35c,guava.mirrorbot@gmail.com,Tue Apr 12 19:15:55 2011 +0000,Re-source this class.
e918d249a188f3ca45879729b764b9cbed379205,5d1e93275b75bafc5b401f50eafdcdc4b3e7b8fb,guava.mirrorbot@gmail.com,Tue Apr 12 18:23:44 2011 +0000,sync new changes
5d1e93275b75bafc5b401f50eafdcdc4b3e7b8fb,42e0ea4c7ea08343c0e75342d1374a390dd93d5d,guava.mirrorbot@gmail.com,Tue Apr 12 12:59:30 2011 +0000,don't lock on pending computation
dd96b4930181fc70bd7c90beded3a272f251db35,d0d1aac3cdb69a32c84e4dc5e20ab2c2e6891b6b,guava.mirrorbot@gmail.com,Thu Mar 24 18:38:08 2011 +0000,Fix a second case of "childless uncle" bug causing heap corruption.
363b1a236e9952d81f75301cf5122e9af3869460,f6258adeccaf8de1eee71f524780bb248299d780,guava.mirrorbot@gmail.com,Tue Mar 22 11:59:37 2011 +0000,- replace removeEntry with reclaimKey/unsetKey - extract tryExpiredEntries - introduce notifyKeyReclaimed, rename valueReclaimed to notifyValueReclaimed - don't create notification entries for discarding queue
4cdf3278c56489ff77e4c37bf919bc59df7902e2,5098b1d5721cb1533c3bbc5f03a2d5ccb1ebbf63,guava.mirrorbot@gmail.com,Mon Mar 21 15:28:46 2011 +0000,only expireEntries on reads when an expired entry is encountered
036ebbac7132b8ae7156a7939d77578f668b3c35,2e52abd38ed4b5aecc80fc6b935461a7898679b1,guava.mirrorbot@gmail.com,Sat Mar 19 03:38:17 2011 +0000,- Make AbstractService's Futures implement ListenableFuture by reimplementing the custom Transition class on top of AbstractListenableFuture. - Remove asciiHtmlEscaper, replaced with Html.htmlContentEscaper. - Make Service.start() and stop() return a ListenableFuture. - Eliminate the distinction between Range and DiscreteRange and move operations that used to live in DiscreteRange into ContiguousSet. - Preserve strict/lenient validation when deriving IDN instances from other IDN instances. No test changes yet; wanted to get feedback on the approach first. - Add a deprecated version of Ranges.integers() and Ranges.longs() to temporarily fix builds. - MapMaker: 	- containsValue should fail on collected key 	- refine expiration javadocs 	- structure all reads similarly, documenting more assumptions 	- more white-box tests - Use constants in UriEscapers instead of PercentEscaper, deprecating the latter. - Make Javadoc (and occasionally FindBugs) happier. - Rename package.html files to package-info.html, which are preferred as for JDK 5 (see `man javadoc`). - Avoid stack overflow. - Make InternetDomainName lenient validation a little less lenient. - Remove all usages of Ranges.longs() and Ranges.integers().
2e52abd38ed4b5aecc80fc6b935461a7898679b1,8004d22b04cbd0973c2d617307a4e7cd3ba8e2a4,guava.mirrorbot@gmail.com,Thu Mar 17 13:14:25 2011 +0000,Remove util.concurrent.Service.
8004d22b04cbd0973c2d617307a4e7cd3ba8e2a4,36fbe99a2fe26186397b806f267a6a96d28b4646,guava.mirrorbot@gmail.com,Thu Mar 17 13:13:26 2011 +0000,Add new Enums class with #valueOfFunction.
36fbe99a2fe26186397b806f267a6a96d28b4646,35db821fe4aece89dce426b6aa6876e988919db4,guava.mirrorbot@gmail.com,Wed Mar 16 20:45:20 2011 +0000,Add GWT support for MapMaker#maximumSize.
2b8393de107d8e15c6ed7e7796af31b01d9ae22b,e4b62b62d5d17e3e7e8cb87a0f96b4683b558e54,guava.mirrorbot@gmail.com,Wed Mar 16 16:18:46 2011 +0000,don't lock to calculate size and containsValue
efc3bcd50ef740e3dabc0a15eabd82331242c26d,e7549e36067bd5e478f95467c6486039c88f57dc,guava.mirrorbot@gmail.com,Tue Mar 15 11:48:06 2011 +0000,Automatic addition of @Override annotations
e7549e36067bd5e478f95467c6486039c88f57dc,36543154b171a59f1587df58a05076f9bce3badb,guava.mirrorbot@gmail.com,Mon Mar 14 18:31:08 2011 +0000,- Add a class javadoc @link to Charsets.US_ASCII. Add constant definitions for MIN and MAX. Take out of @Beta. - copy Ticker into common.base - Perform stopAndWait/startAndWait uninterruptibly instead of throwing InterruptedRuntimeException. - add MapMaker.ticker(Ticker) - Clone Service from base to util.concurrent.
62a75edc672350f100a397f2c050e14dccbae7a6,c9fe165e4bc9449cc7fe61feeb86d515bf06a00a,guava.mirrorbot@gmail.com,Thu Mar 10 19:50:59 2011 +0000,Remove Futures.compose
c9ecc9d3b22f2a729f1f2898783860e39fe4efaa,3a8101d911d5a4959ec22822dd2ed5d71cec1b50,guava.mirrorbot@gmail.com,Fri Mar 4 14:43:09 2011 +0000,add ExpirationQueue and EvictionQueue to CustomConcurrentHashMap
f2674a68ac6e7ceb054e0aa19c01590548747aef,6d1a280976e58c9426fbfc3572e9221e7f136c14,guava.mirrorbot@gmail.com,Wed Mar 2 21:27:04 2011 +0000,MapMaker: - call recordRead instead of recordWrite on failed putIfAbsent/replace - unset partially-collected entries as soon as they're found - skip partially-collected entries when copying buckets
aeb7280ddd7b306ada03ac17468fcd8269b0b228,babcf3128ca0f1609beb9c7caeff3fc1cfb1be1e,guava.mirrorbot@gmail.com,Tue Mar 1 13:47:33 2011 +0000,Create Futures.transform, and forward Futures.compose to it.
48ec1301ce521f4b653a7267e3eb36818a180eab,f9d6b349e2e2a0f09f9a7dec96ea0556dc3a8abc,guava.mirrorbot@gmail.com,Mon Feb 28 14:50:21 2011 +0000,Allows for the maximumSize & expiration to be zero by using a light-weight map that stores no data.
280115ac2154c34b3e7f4b951058ab59b16ed41c,364fb82d4b6194cb9ada76b2b34a4735f1b11889,guava.mirrorbot@gmail.com,Mon Feb 28 13:36:28 2011 +0000,Use raw types less in common.collect.
096761770ce31ba97793f4d7822398e0ae1ea172,fe561b0554c29b4ffd9b9181c559b238713fa335,guava.mirrorbot@gmail.com,Sat Feb 19 03:36:43 2011 +0000,MapMaker: refactor cleanup
fe561b0554c29b4ffd9b9181c559b238713fa335,b762524d89bb420e9cefa0c52b2b2ebbf69ddf50,guava.mirrorbot@gmail.com,Sat Feb 19 03:35:15 2011 +0000,ValueFuture->SettableFuture.
b762524d89bb420e9cefa0c52b2b2ebbf69ddf50,dc85ef84a014ce90cc0d1e9479b7abea15320071,guava.mirrorbot@gmail.com,Fri Feb 18 20:27:17 2011 +0000,Improve InternetDomainName documentation on validation.
dda9d3f744073e17c1adbf8879357b273fa8241d,6c0d45c57e23ac9503ed07a558fba079d6633927,guava.mirrorbot@gmail.com,Fri Feb 18 16:02:33 2011 +0000,MapMaker: optimize cleanup when using the default executor by doing lock-requiring-cleanup under lock, instead of requiring a second lock to be taken
6c0d45c57e23ac9503ed07a558fba079d6633927,4262a5d19a69caa2ed39160799804e5eaf8652d2,guava.mirrorbot@gmail.com,Fri Feb 18 15:17:56 2011 +0000,MapMaker: - move read-time recencyQueue draining to cleanup executor - replcae recencyQueueLength with readCount
35ee006b49a5f9af9a077089ed8ac97eff8c109a,c8a557c96c5fa5c3808d6183947864fe50f9bcf0,guava.mirrorbot@gmail.com,Thu Feb 17 17:45:29 2011 +0000,MapMaker - invalidate entries containing partially collected keys - assert that expiration list is valid
9fcb76a3000ec4643120db1dd0abce84512330a5,990c74a01b91f331adfb92187d35a42d4fcb1062,guava.mirrorbot@gmail.com,Thu Feb 17 17:40:05 2011 +0000,MapMaker rollback
990c74a01b91f331adfb92187d35a42d4fcb1062,5bb0c619894468166c600bddb3a298a2dde0ca69,guava.mirrorbot@gmail.com,Thu Feb 17 16:34:45 2011 +0000,MapMaker: - invalidate entries containing partially collected keys - assert that expiration list is valid
f1d94e8d2a6892197b3e0600b6cbc3fceab600d8,452cf9ded56866c529466cc52ccba839701f47ee,guava.mirrorbot@gmail.com,Wed Feb 16 21:21:45 2011 +0000,Add ForwardingCheckedFuture
452cf9ded56866c529466cc52ccba839701f47ee,99a10191f4a6575e95bbfe1c587e98ef2b1fc486,guava.mirrorbot@gmail.com,Wed Feb 16 15:16:08 2011 +0000,MapMaker: - increment count at computation end instead of beginning - distinguish computation from partial-collection when put clobbers incomplete values - don't suppress notifications when computation encounters partially-collected values - don't remove computing entries - test many more edge cases
99a10191f4a6575e95bbfe1c587e98ef2b1fc486,2894bf82cb3e95b321acb64603f985c000eb9329,guava.mirrorbot@gmail.com,Tue Feb 15 21:38:20 2011 +0000,rollback cl/19492453
8320c63d9cc1fa5b982888dd98ab08035aec6239,8ee7b136b57d4606a784382ccd16a707e3288a10,guava.mirrorbot@gmail.com,Tue Feb 15 02:37:36 2011 +0000,MapMaker: - increment count at computation end instead of beginning - distinguish computation from partial-collection when put clobbers incomplete values - don't suppress notifications when computation encounters partially-collected values - don't remove computing entries - test many more edge cases
8ee7b136b57d4606a784382ccd16a707e3288a10,04af674ebb40c6d42a1325ab1695bd23355e63a5,guava.mirrorbot@gmail.com,Mon Feb 14 14:26:20 2011 +0000,MapMaker: - introduce default cleanup executor (not user-visible yet) - don't call recordRead on invalidated entries - expire entries when over-writting invalid entries
993e2caef44f668a72f302168c529c36d28d48cb,8bd8c25e309e9debf877449826bbdb55493dec25,guava.mirrorbot@gmail.com,Thu Feb 10 15:40:09 2011 +0000,Fix TreeBasedTable to return columns in globally sorted order.
8bd8c25e309e9debf877449826bbdb55493dec25,ec644e95cb2938ca2bf78271e524ed75409d564a,guava.mirrorbot@gmail.com,Wed Feb 9 15:38:54 2011 +0000,use invalidation+cleanup for MapMaker gc-cleanup
86cc1efc4fb32ccf49eadcbb8d8d4da1121c8571,39fbaad1df64ba579bc41031dfbde99e5f4ba1d4,guava.mirrorbot@gmail.com,Wed Feb 9 14:19:15 2011 +0000,Add examples to Futures chain() and compose() Javadoc.
39fbaad1df64ba579bc41031dfbde99e5f4ba1d4,67445d6ea580dcef646a495f23efd8f1cda4abb7,fry@google.com,Tue Feb 8 16:20:05 2011 +0000,- added Equivalences.pairwise() -	cleanup failed MapMaker computes with invalidateValue instead of racy removeEntry -	detect recursive MapMaker computation and fail fast rather than silently deadlocking -	send MapMaker notifications after unlocking related to computaiton
67445d6ea580dcef646a495f23efd8f1cda4abb7,4b5166a10e3f5d914791a51510a26f43cda286e3,fry@google.com,Thu Feb 3 18:28:05 2011 +0000,- send removal notification in MapMaker when reclaimed keys are encountered during copies
4b5166a10e3f5d914791a51510a26f43cda286e3,3fbaf56f390db1a7c442ceaeab2c3a8bc1c8fd79,fry@google.com,Thu Feb 3 15:55:25 2011 +0000,- lower default MapMaker concurrency level to 4 - remove Equivalences.nullAwareEquals()
3fbaf56f390db1a7c442ceaeab2c3a8bc1c8fd79,ad3f05ddb4028b3bfd022388783fb718dd001c5a,fry@google.com,Thu Jan 27 19:37:40 2011 +0000,Fixed bug/532. Add warnings to README.
ad3f05ddb4028b3bfd022388783fb718dd001c5a,125228dc08768d08f2456689b80f38eed3cc47aa,guava.mirrorbot@gmail.com,Wed Jan 26 00:10:31 2011 +0000,Restore CharMatcher.SINGLE_WIDTH Deprecate MapMaker.expiration Make Equivalences.equals/identity null-aware, deprecate nullAwareEquals Lists.reverse out of beta Fix some multimap javadoc problems
1c10d149117d7c19a2d603b77a3898190f784543,bd5b63e3fe3b5d505c0b422f0423094f542ff7e2,guava.mirrorbot@gmail.com,Fri Jan 21 03:24:37 2011 +0000,Revision created by MOE tool push_codebase. MOE_MIGRATION=
df76e2f933055aaca01a15790cbc19b4de3a2141,509fe0a4e7b30c00d1a7e1aae3e4de6718939c15,guava.mirrorbot@gmail.com,Sun Jan 2 22:29:57 2011 +0000,Push of latest guava code which unfortunately includes temporarily backing out the common.testing stuff, which still hasn't been figured out properly in a way that allows us to keep internal and external codebases synchronized.  That stuff may or may not be available as part of release 8 after all.
509fe0a4e7b30c00d1a7e1aae3e4de6718939c15,6a25cb512850ee84cb5ba37ee0ba9e96f7272146,guava.mirrorbot@gmail.com,Mon Dec 6 18:31:42 2010 +0000,Next gigantic code drop.
6a25cb512850ee84cb5ba37ee0ba9e96f7272146,999a06ddb6b0cb5681bbbef73beb3e934376d2a7,kevinb@google.com,Fri Oct 29 17:48:00 2010 +0000,Next giant code dump. Most interesting stuff: MinMaxPriorityQueue, Ordering.{least,greatest}Of, SortedMaps.
999a06ddb6b0cb5681bbbef73beb3e934376d2a7,6ccbb455a8549c95eca3469a165fe02c72b6bc91,kevinb@google.com,Fri Oct 15 15:45:44 2010 +0000,Add expireAfterWrite() and expireAfterAccess() to MapMaker, replacing expiration() (which will be deprecated for release 8).
6ccbb455a8549c95eca3469a165fe02c72b6bc91,697576a2b9c0a9321f7dc2a027e1e530215ee953,kevinb@google.com,Tue Oct 12 20:43:03 2010 +0000,Batch of 18 days' worth of changes, which I should be itemizing (sorry).
697576a2b9c0a9321f7dc2a027e1e530215ee953,673199352be3efcf775036e47cba86e163d8b3a8,cgruberatgoog,Fri Oct 1 22:08:06 2010 +0000,Add the most basic portion of our testing infrastructure required to make the Guava tests pass, and add a replacement for Assert.* so we can have the assertions available to the tests in this core library, without forcing a dependency on JUnit or any other testing framework.  The tests, themselves, of course, can remain dependent on JUnit.
4fdf70002a73087bcb94ac0619f819bbc6c035d8,13bc6c9bf52aa45fe4371357546b7ca66f317df2,kevinb@google.com,Fri Sep 24 20:43:47 2010 +0000,@Beta release of MapMaker.maximumSize()!
9773a7573adcb2baf9459966ae9a8fddb47327e4,e3bc0703d0a123ab5d3d2edf4124a14c8b3ba235,kevinb@google.com,Wed Sep 22 18:53:27 2010 +0000,Provide default implementations for various methods in ForwardingMap and ForwardingSortedMap.
e3bc0703d0a123ab5d3d2edf4124a14c8b3ba235,6499316bc379dc1309b6a20eba375a269fd8918a,guava.mirrorbot@gmail.com,Wed Sep 22 16:40:23 2010 +0000,Forward get call on chained future to underlying input future.
6499316bc379dc1309b6a20eba375a269fd8918a,89b32f14dea661c0812ff94b42db8ca9f81ba9ec,guava.mirrorbot@gmail.com,Thu Sep 16 20:43:42 2010 +0000,Provide default implementations for some methods in ForwardingQueue
89b32f14dea661c0812ff94b42db8ca9f81ba9ec,51eb6fc0de824525ed0aa8728359efb12d88001d,kevinb@google.com,Wed Sep 15 23:14:03 2010 +0000,Fix InternetDomainName case normalization (only ASCII characters are to be normalized to lowercase).
9fc278e12300128c14757877fe81a7d0d47808d1,4583e8bd8b7eac0e3fbef41d341d57ef5a925c5d,guava.mirrorbot@gmail.com,Tue Sep 14 23:15:15 2010 +0000,Provide default implementations for various methods for ForwardingMultiset.
4583e8bd8b7eac0e3fbef41d341d57ef5a925c5d,e899c1158b140d6b1dc845dbc16ab9bb04747a2c,guava.mirrorbot@gmail.com,Tue Sep 14 20:41:19 2010 +0000,Lists.charactersOf(CharSequence)
e899c1158b140d6b1dc845dbc16ab9bb04747a2c,48736a0b064bb5c3ba32cc13496f4a5770fccf46,guava.mirrorbot@gmail.com,Tue Sep 14 15:31:51 2010 +0000,Provide default implementations of methods as protected methods in Forwarding{Collection,List,Set}.
48736a0b064bb5c3ba32cc13496f4a5770fccf46,3291ead520514ebaa8bd19f65074aaa9a93cdd7f,guava.mirrorbot@gmail.com,Mon Sep 13 19:41:08 2010 +0000,Rework RegularImmutableSortedSet to be backed by an ImmutableList instead of an array.
3291ead520514ebaa8bd19f65074aaa9a93cdd7f,0b981c73ab5d5aad3234bcc96049060e98f2027b,guava.mirrorbot@gmail.com,Wed Sep 8 17:38:13 2010 +0000,Update ToStringHelper to do what users expect with Class<?> objects.  This addresses bug 381.
5cffe4f4d1dd5a647bc34fb29e62a16e9321a833,a938a4e30b796948fb43636d2d31c033e0584f48,guava.mirrorbot@gmail.com,Fri Sep 3 15:30:30 2010 +0000,Recognize hosts like "www.nhs.uk" as valid (since they are). This is probably not the final word on this problem.
a938a4e30b796948fb43636d2d31c033e0584f48,6937f3679ccc5d46c097819142d9dc7fe5664fc8,guava.mirrorbot@gmail.com,Thu Sep 2 18:03:36 2010 +0000,Keep the supersource version of MakMaker in sync with the server version.
ee91c47432889467d38b60703b41267c0a803897,91c77c074eb325b601071516cd98514cd1b9d355,guava.mirrorbot@gmail.com,Thu Sep 2 00:12:17 2010 +0000,Added Multimaps.transformValues and Multimaps.transformEntries
b16c7513906c7d859d5c5c8c262d054809203351,dd6db4e265b0428c787a801d6d69e29994fceaed,guava.mirrorbot@gmail.com,Wed Sep 1 22:03:59 2010 +0000,Fix up how Immutable*.copyOf() work -- they should short-circuit the copy when safe, but not when the copy takes up less memory, etc.
dd6db4e265b0428c787a801d6d69e29994fceaed,c3aafce2ec11cd26cd94df7efc132dc0431925a7,guava.mirrorbot@gmail.com,Wed Sep 1 20:27:03 2010 +0000,(implementation detail) create UnmodifiableListIterator
c3aafce2ec11cd26cd94df7efc132dc0431925a7,e6400c35ed25c87586f5c5825fe3fb91a2e6d8c6,guava.mirrorbot@gmail.com,Wed Sep 1 20:18:52 2010 +0000,And then roll forward.
e6400c35ed25c87586f5c5825fe3fb91a2e6d8c6,c74890efa59b8254d879c37803ddc888b75c3ad5,guava.mirrorbot@gmail.com,Wed Sep 1 20:03:47 2010 +0000,Roll back recent Immutable(Sorted)Set change temporarily.
c74890efa59b8254d879c37803ddc888b75c3ad5,4211cf3a0e11ba822a37ebd45a149cd959015f8c,kevinb@google.com,Tue Aug 31 23:46:58 2010 +0000,Next batch of pent-up fixes.
214ee7fe4fecfec593b97e17fff1f39d4b95ba31,803f44ac9c6a3457388394e952132fe18449cb9f,kevinb@google.com,Fri Aug 27 23:56:13 2010 +0000,3 days of pent-up improvements: - Make setException(null) throw NullPointerException instead of silently   setting the future to succeeded (with a result value of null). - Remove unnecessary type parameter from transformExceptions() and its   implementation class. - New ConcurrentHashMultiset factory method that takes a MapMaker. This allows   using soft/weak keys and expiration on the backing map. - Turns out it's annoying to not know whether it's the key or value that was   null in an ImmutableMap. - Tiny javadoc fixes, mostly concerning code snippets. - Introduce a package-private Iterables.toArray(Iterable) method as a   GWT-compatible alternative to the public Iterables.toArray(Iterable, Class),   and achieve a marginally more efficient implementation of the GWT emulation   for ImmutableSet's Builder and copyOf methods. - Make EnumBiMap and EnumHashBiMap GwtCompatible.
72ac0ffe8d04f35d5d18f56ed5d63a24414f84db,62cdc3e0cda2d55432ac1969a3cf94f9c7c42655,guava.mirrorbot@gmail.com,Thu Aug 19 00:53:58 2010 +0000,Add ImmutableSet.copyOf(Collection), following lead of ImmutableList, to make it safe with copyOf(synchronizedConcurrentList).
62cdc3e0cda2d55432ac1969a3cf94f9c7c42655,41aee888e28f25a8b74544f70545177a8c504031,guava.mirrorbot@gmail.com,Wed Aug 18 23:06:35 2010 +0000,Reduce one temp array creation for ImmutableList.of().
9d880c5120824c432ef72c611ce3358368059ec6,699b85572f607856a143ac713784ce5ee7728e61,guava.mirrorbot@gmail.com,Mon Aug 16 22:57:23 2010 +0000,Makes the result of Futures#chain() cancellable.  It will now be successfully canceled in these cases: 1. A thread calls cancel(boolean) directly on it and the Future is currently running. 2. The underlying input Future is cancelled. 3. The Future result of the Function is cancelled.
699b85572f607856a143ac713784ce5ee7728e61,6caef5478cc70849eb3be7f299d31bd1f8a6338f,guava.mirrorbot@gmail.com,Wed Aug 11 19:29:02 2010 +0000,Change InternetDomainName to reflect reality of public suffixes which are websites by changing javadoc to specify safe and unsafe usage patterns.
3fbf39a13d2fa6e515fe31b88f9d19a2068f4ad6,d2f36ca770e1fae1ce3391eb8ee7c267ae328bbb,guava.mirrorbot@gmail.com,Wed Aug 11 19:15:49 2010 +0000,implement maximumSize
a104829d30932db72f71b8d6b7218345f0faddce,395d9e81af3e5b984640e3e21e68e8059d228c66,guava.mirrorbot@gmail.com,Wed Aug 11 19:12:45 2010 +0000,Move a class to fit the existing organizational scheme in this file.
c4ec873e2c33a5c059d3a173587c7715f4deae1f,89be62265a01ba1b5c6c16559c8bc5103276c763,kevinb@google.com,Thu Aug 5 00:38:25 2010 +0000,GWT serialization stuff. Add Table classes. Minor cleanups.
89be62265a01ba1b5c6c16559c8bc5103276c763,a054c11fb7ec473d053a0912c57ffa3abb448396,kevinb@google.com,Mon Aug 2 23:11:35 2010 +0000,Performance of ImmutableMap improved, while paving the way for us to reduce its memory usage as well.
b865e673377349e3b1d5b294f4efd40787d2bee5,97963a74d9102aefc1613738cc7c218fee2e03f8,kevinb@google.com,Fri Jul 30 04:01:29 2010 +0000,Dump a bunch of GWT support classes out to guava. Add a static factory for InternetDomainName which does full RFC 3490 validation. Add MapMaker.evictionListener().
97963a74d9102aefc1613738cc7c218fee2e03f8,83055b2a783799cbeb913591e2e18eabaa2b00a4,kevinb@google.com,Tue Jul 27 20:45:37 2010 +0000,Latest code dump.
4c949e3399a80396525774a0ffc66b8af3155242,a43e794ac6d46395f7e32a6e5b5f2cd75f3d77d8,kevinb@google.com,Wed Jun 30 22:51:34 2010 +0000,Fix bug in InetAddresses and performance problem in InternetDomainName (changed from regex to CharMatcher).
cac16cfeea6c70fcf3e8787f9b9d042ec2f0376a,b293ed1fbb3d8b46bf4f2f638d46295329babccc,kevinb@google.com,Fri Jun 25 19:42:50 2010 +0000,ImmutableMultiset: - add of() overloads up to 6 elements - add copyOf(E[]) - deprecate of(E[])
52aabe5b3834a5ec6ab4785a041c3162e127c8e4,055d669ea456a8efc0731a8c8f8d095f88eb700e,kevinb@google.com,Thu Jun 17 22:58:20 2010 +0000,Revision created by MOE tool push_codebase.
5e083b830a3893f74e75acaf4eec50068b6e3b39,f082dc3b19dfc77cf02f53ba0ca1b7a5ca5ee060,dbentley@google.com,Fri Jun 4 18:29:29 2010 +0000,Updates.
f082dc3b19dfc77cf02f53ba0ca1b7a5ca5ee060,d81f4f2c1b57eeb6d85899ab54abe29e5217ef58,dbentley@google.com,Thu Jun 3 00:54:58 2010 +0000,Updates.
970ad12d61e18d5171f3a5e8e3d07c83f587d2ed,2099f93f0e0890a9ae2cf8ee3d5cb19643d89af7,kevinb@google.com,Fri May 28 22:57:27 2010 +0000,Last little fixes for release 05, will write up release notes on Monday.
8263a182d4a682974934dd26497a2f9b1e829e07,e031f621718dcd7a1baab0ba539e7495c23a735c,kevinb@google.com,Mon May 24 20:54:45 2010 +0000,Next code drop, r05 should be later today.
e031f621718dcd7a1baab0ba539e7495c23a735c,96e42b51353e959d05b4c7662ea80c43ce247be6,kevinb@google.com,Wed May 12 00:16:53 2010 +0000,Source and javadoc update; this will likely be r05. New: com.google.common.net! Fixed: MapMaker bug (expired entries were appearing in collection views)
d6627b3e58a776f42ff9d032d499d840dd4cca69,bb36e5ab340e947abfb7485f3ae7d7cced956214,kevinb@google.com,Tue Apr 27 20:22:55 2010 +0000,Adding tests for common.base, just to start the process of exposing them, although they are not yet in a compiling state (they rely on other libraries we need to copy out as well).
7ce09488d186e4f085046fb8d60578726ec429de,59f0ccef510cc7bf0d854fb2a7dd5fcc880a1e8c,kevinb@google.com,Fri Apr 23 20:13:16 2010 +0000,Big code drop in prep for cutting r04 next week.
ee071f342edd0f5240dc2667a11e717a3a9395e6,f5ad01f0326405c321a4d1a7bbafb01b7d4d5074,kevinb@google.com,Thu Apr 8 23:35:12 2010 +0000,Huge new source dump for source release 3, which will also become our first binary release shortly.
bbab2ce3c162b244119bdc22a990d7b75fdef0af,b492c5570480e6fa1162757ccec9012174dd662f,kevinb@google.com,Tue Jan 5 05:07:47 2010 +0000,ARGHGH, guess I was in the wrong directory when submitting... amateurs...
b492c5570480e6fa1162757ccec9012174dd662f,78195d6c3d33aa34af8f0d817e341e240ee9af5e,kevinb@google.com,Tue Jan 5 01:33:33 2010 +0000,Copy in the Google Collections 1.0-final sources, unmodified. Next step: refresh them with newer versions.
dc5915eb1072c61ff2c3c704af4ae36b25f97b6c,db3929bd79ef57f8da40515b663f40200a941fa8,kevinb@google.com,Tue Sep 15 19:50:59 2009 +0000,Initial code dump: version 9.09.15
db3929bd79ef57f8da40515b663f40200a941fa8,,(no author),Thu Jun 18 18:11:55 2009 +0000,Initial directory structure.
