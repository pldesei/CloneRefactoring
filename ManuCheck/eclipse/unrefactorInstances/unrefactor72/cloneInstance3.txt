(startLine=202 endLine=228 srcPath=/root/Projects/eclipse.jdt.coreFilter/1733/eclipse.jdt.core/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java)
    public void test0405() throws JavaModelException {
        ICompilationUnit sourceUnit = getCompilationUnit("Converter" , "", "test0405", "A.java"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
        ASTNode result = runConversion(sourceUnit, true);
        ASTNode node = getASTNode((CompilationUnit) result, 1, 0, 1);
        assertEquals("Wrong number of problems", 1, ((CompilationUnit) result).getProblems().length); //$NON-NLS-1$
        assertNotNull(node);
        assertTrue("Not an expression statement", node.getNodeType() == ASTNode.EXPRESSION_STATEMENT); //$NON-NLS-1$
        ExpressionStatement expressionStatement = (ExpressionStatement) node;
        Expression expression = expressionStatement.getExpression();
        assertTrue("Not a method invocation", expression.getNodeType() == ASTNode.METHOD_INVOCATION); //$NON-NLS-1$
        MethodInvocation methodInvocation = (MethodInvocation) expression;
        Expression expression2 = methodInvocation.getExpression();
        assertTrue("Not a simple name", expression2.getNodeType() == ASTNode.SIMPLE_NAME); //$NON-NLS-1$
        SimpleName simpleName = (SimpleName) expression2;
        IBinding binding  = simpleName.resolveBinding();
        assertNotNull("No binding", binding); //$NON-NLS-1$
        assertTrue("wrong type", binding.getKind() == IBinding.VARIABLE); //$NON-NLS-1$
        IVariableBinding variableBinding = (IVariableBinding) binding;
        assertEquals("Wrong name", "a", variableBinding.getName()); //$NON-NLS-1$ //$NON-NLS-2$
        SimpleName simpleName2 = methodInvocation.getName();
        assertEquals("Wrong name", "clone", simpleName2.getIdentifier()); //$NON-NLS-1$ //$NON-NLS-2$
        IBinding binding2 = simpleName2.resolveBinding();
        assertNotNull("no binding2", binding2); //$NON-NLS-1$
        assertTrue("Wrong type", binding2.getKind() == IBinding.METHOD); //$NON-NLS-1$
        IMethodBinding methodBinding = (IMethodBinding) binding2;
        assertEquals("Wrong name", "clone", methodBinding.getName()); //$NON-NLS-1$ //$NON-NLS-2$
    }    

