(startLine=530 endLine=562 srcPath=/root/Projects/eclipse.jdt.coreFilter/1710/eclipse.jdt.core/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java)
public void test009() {
    String userCode =
        "String s = \"test009\";\n";
    JDIStackFrame stackFrame = new JDIStackFrame(
        this.jdiVM, 
        this,
        userCode);

    DebugRequestor requestor = new DebugRequestor();
    char[] snippet = "s".toCharArray();
    try {
        context.evaluate(
            snippet,
            stackFrame.localVariableTypeNames(),
            stackFrame.localVariableNames(),
            stackFrame.localVariableModifiers(),
            stackFrame.declaringTypeName(),
            stackFrame.isStatic(),
            stackFrame.isConstructorCall(),
            getEnv(), 
            getCompilerOptions(), 
            requestor, 
            getProblemFactory());
    } catch (InstallException e) {
        assertTrue("No targetException " + e.getMessage(), false);
    }
    assertTrue("Should get one result but got " + requestor.resultIndex+1, requestor.resultIndex == 0);
    EvaluationResult result = requestor.results[0];
    assertTrue("Code snippet should not have problems", !result.hasProblems());
    assertTrue("Result should have a value", result.hasValue());
    assertEquals("Value", "test009".toCharArray(), result.getValueDisplayString());
    assertEquals("Type", "java.lang.String".toCharArray(), result.getValueTypeName());
}

