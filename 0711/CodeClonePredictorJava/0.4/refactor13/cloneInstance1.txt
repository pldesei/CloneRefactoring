(startLine=85 endLine=108 srcPath=/home/sonia/NewExperiment/findbugsFilter/00160/findbugs/src/java/edu/umd/cs/findbugs/detect/FindCircularDependencies.java)
		{	//Remove classes that don't have cycles
			boolean changed = true;
			while (changed) {
				changed = false;
				Iterator<Map.Entry<String, Set<String>>> it = dependencyGraph.entrySet().iterator();
				while (it.hasNext()) {
					Map.Entry<String, Set<String>> entry = it.next();
					String clsName = entry.getKey();
					Set<String> dependencies = entry.getValue();
					
					boolean foundClass = false;
					Iterator dit = dependencies.iterator();
					while (dit.hasNext()) {
						foundClass = dependencyGraph.containsKey(dit.next());
						if (foundClass)
							break;
					}
					if (!foundClass) {
						it.remove();
						changed = true;
					}
				}
			}
		}

