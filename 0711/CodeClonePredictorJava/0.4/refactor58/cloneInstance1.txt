(startLine=200 endLine=215 srcPath=/home/sonia/NewExperiment/findbugsFilter/00828/findbugs/src/java/edu/umd/cs/findbugs/detect/CheckExpectedWarnings.java)
            if (expectedBugCodes == null || expectedBugCodes.trim().length() == 0) {
                Collection<SourceLineAnnotation> bugs = countWarnings(xmethod.getMethodDescriptor(), null, minPriority, rank);
                if (expectWarnings && bugs.size() < num) {
                    BugInstance bug = new BugInstance(this, "FB_MISSING_EXPECTED_WARNING", priority).addClassAndMethod(xmethod
                            .getMethodDescriptor()).addString("any bug");
                    if (!bugs.isEmpty()) {
                        bug.addString(String.format("Expected %d bugs, saw %d", num, bugs.size()));
                    }
                    reporter.reportBug(bug);
                } else if (!expectWarnings && bugs.size() >= num)
                    for (SourceLineAnnotation s : bugs) {
                        reporter.reportBug(new BugInstance(this, "FB_UNEXPECTED_WARNING", priority).addClassAndMethod(
                                xmethod.getMethodDescriptor()).addString("any bug").add(s));

                    }
            } else {

