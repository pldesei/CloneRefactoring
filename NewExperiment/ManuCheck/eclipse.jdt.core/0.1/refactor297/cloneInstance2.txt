(startLine=1838 endLine=1862 srcPath=/home/sonia/NewExperiment/eclipse.jdt.coreFilter/00597/org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java)
			} else {
				// we don't need to use an alignment
				if (this.preferences.insert_space_before_first_initializer) {
					this.scribe.space();
				}
				expressions[0].traverse(this, scope);
				if (expressionsLength == 1) {
					if (isComma()) {
						this.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);
					}
				} else {
					for (int i = 1; i < expressionsLength; i++) {
						this.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);
						if (this.preferences.insert_space_after_comma_in_array_initializer) {
							this.scribe.space();
						}
						expressions[i].traverse(this, scope);
						if (i == expressionsLength - 1) {
							if (isComma()) {
								this.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);
							}
						}
					}
				}
			}

