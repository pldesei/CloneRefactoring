(startLine=233 endLine=249 srcPath=/home/sonia/NewExperiment/eclipse.jdt.coreFilter/00478/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java)
		for (int i = 0; i < length; i++) {
			Expression argument = arguments[i];
			if ((argument.bits & UnnecessaryCastMask) != 0) {
				TypeBinding castedExpressionType = ((CastExpression)argument).expression.resolvedType;
				// obvious identity cast
				if (castedExpressionType == parameterTypes[i]) { 
					scope.problemReporter().unnecessaryCast((CastExpression)argument);
				// widening cast, will need to check later whether it would affect method lookup
				} else {
					if (rawArgumentTypes == argumentTypes) {
						System.arraycopy(rawArgumentTypes, 0, rawArgumentTypes = new TypeBinding[length], 0, length);
					}
					// only retain widened argument types, since narrowing are thought to be ok
					rawArgumentTypes[i] = castedExpressionType; 
				}
			}
		}

