(startLine=2286 endLine=2315 srcPath=/home/sonia/NewExperiment/eclipse.jdt.coreFilter/00651/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java)
public void recordComment(int token) {
	// compute position
	int position = this.currentPosition;
	switch (token) {
		case TokenNameCOMMENT_BLOCK:
			position = -position;
			break;
		case TokenNameCOMMENT_LINE:
			position = -(position-1); // do not store trailing '/r' or '/n' character
			break;
	}

	// a new comment is recorded
	try {
		this.commentStops[++this.commentPtr] = position;
	} catch (IndexOutOfBoundsException e) {
		int oldStackLength = this.commentStops.length;
		int[] oldStack = this.commentStops;
		this.commentStops = new int[oldStackLength + 30];
		System.arraycopy(oldStack, 0, this.commentStops, 0, oldStackLength);
		this.commentStops[this.commentPtr] = position;
		//grows the positions buffers too
		int[] old = this.commentStarts;
		this.commentStarts = new int[oldStackLength + 30];
		System.arraycopy(old, 0, this.commentStarts, 0, oldStackLength);
	}

	//the buffer is of a correct size here
	this.commentStarts[this.commentPtr] = this.startPosition;
}

