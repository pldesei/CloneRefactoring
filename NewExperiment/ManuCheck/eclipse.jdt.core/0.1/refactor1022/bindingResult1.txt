ProjectPath:/home/sonia/NewExperiment/eclipse.jdt.coreFilter/02389
predFragLineRange:507-574
predMethodLineRange:507-574
nextLineRange:443-498
predStrMethodInvoNames:
[getCompilerOptions, put, put, runNegativeTest]
%%%%%%%%%%
AddedMethodInvo Line:444 InvoName:runNegativeTestWithLibs(new String[]{"A.java","import org.eclipse.jdt.annotation.*;\n" + "public class A {\n" + "    void array(String @NonNull[] realStringArray, String @Nullable[] maybeStringArray) {\n"+ "        @NonNull Object array;\n"+ "        array = realStringArray;  // no problem\n"+ "        realStringArray = null; 	 // problem: cannot assign null as @NonNull array\n"+ "        array = maybeStringArray; // problem: array can be null\n"+ "        maybeStringArray = null;  // no problem\n"+ "    }\n"+ "    void leaf(String @NonNull[] realStringArray, String @Nullable[] maybeStringArray, boolean b) {\n"+ "        @NonNull String string;\n"+ "        string = realStringArray[0];  // problem: unchecked conversion\n"+ "        realStringArray[0] = null; 	 // no problem\n"+ "        if (b)\n"+ "            string = maybeStringArray[0]; // problems: indexing nullable array & unchecked conversion\n"+ "        else\n"+ "            maybeStringArray[0] = null; 	 // problem: indexing nullable array\n"+ "        maybeStringArray[0] = null; 	 // problem protected by previous dereference\n"+ "    }\n"+ "}\n"},"----------\n" + "1. ERROR in A.java (at line 6)\n" + "	realStringArray = null; 	 // problem: cannot assign null as @NonNull array\n"+ "	                  ^^^^\n"+ "Null type mismatch: required \'String @NonNull[]\' but the provided value is null\n"+ "----------\n"+ "2. ERROR in A.java (at line 7)\n"+ "	array = maybeStringArray; // problem: array can be null\n"+ "	        ^^^^^^^^^^^^^^^^\n"+ "Null type mismatch (type annotations): required '@NonNull Object' but this expression has type 'String @Nullable[]'\n"+ "----------\n"+ "3. WARNING in A.java (at line 12)\n"+ "	string = realStringArray[0];  // problem: unchecked conversion\n"+ "	         ^^^^^^^^^^^^^^^^^^\n"+ "Null type safety (type annotations): The expression of type 'String' needs unchecked conversion to conform to \'@NonNull String\'\n"+ "----------\n"+ "4. ERROR in A.java (at line 15)\n"+ "	string = maybeStringArray[0]; // problems: indexing nullable array & unchecked conversion\n"+ "	         ^^^^^^^^^^^^^^^^\n"+ "Potential null pointer access: this expression has a '@Nullable' type\n"+ "----------\n"+ "5. WARNING in A.java (at line 15)\n"+ "	string = maybeStringArray[0]; // problems: indexing nullable array & unchecked conversion\n"+ "	         ^^^^^^^^^^^^^^^^^^^\n"+ "Null type safety (type annotations): The expression of type 'String' needs unchecked conversion to conform to \'@NonNull String\'\n"+ "----------\n"+ "6. ERROR in A.java (at line 17)\n"+ "	maybeStringArray[0] = null; 	 // problem: indexing nullable array\n"+ "	^^^^^^^^^^^^^^^^\n"+ "Potential null pointer access: this expression has a '@Nullable' type\n"+ "----------\n")
PackageName:org.eclipse.jdt.core.tests.compiler.regression
QualifiedClassName:org.eclipse.jdt.core.tests.compiler.regression.AbstractNullAnnotationTest
ClassName:AbstractNullAnnotationTest
InvokedFilePath:/home/sonia/NewExperiment/eclipse.jdt.coreFilter/02389/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractNullAnnotationTest.java
InvokedMethodSig:void runNegativeTestWithLibs(java.lang.String[], java.lang.String) 
