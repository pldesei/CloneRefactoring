(startLine=1889 endLine=1939 srcPath=/home/sonia/NewExperiment/jrubyFilter/00608/src/org/jruby/RubyString.java)
    public IRubyObject rindex(IRubyObject[] args) {
        int pos;
        boolean offset = false;
        
        if(Arity.checkArgumentCount(getRuntime(), args, 1, 2) == 2) {
            pos = RubyNumeric.fix2int(args[1]);
            if(pos < 0) {
                pos += value.length();
                if(pos < 0) {
                    if(args[0] instanceof RubyRegexp) {
                        getRuntime().getCurrentContext().getPreviousFrame().setBackRef(getRuntime().getNil());
                    }
                    return getRuntime().getNil();
                }
            }
            if(pos > this.value.realSize) {
                pos = this.value.realSize;
            }

        } else {
            pos = this.value.realSize;
        }

        if (args[0] instanceof RubyRegexp) {
            RubyRegexp sub = (RubyRegexp)args[0];
            if(sub.getByteListSource().realSize > 0) {
                pos = sub.adjust_startpos(this, pos, true);
                pos = sub.search(this, pos, true);
            }
            if(pos >= 0) {
                return getRuntime().newFixnum(pos);
            }
        } else if (args[0] instanceof RubyFixnum) {
            char c = (char) ((RubyFixnum) args[0]).getLongValue();
            pos = value.lastIndexOf(c, pos);
        } else {
            IRubyObject tmp = args[0].checkStringType();

            if (tmp.isNil()) throw getRuntime().newTypeError("type mismatch: " + args[0].getMetaClass().getName() + " given");

            ByteList sub = ((RubyString) tmp).value;

            if (sub.length() > value.length()) return getRuntime().getNil();
            // the empty string is always found at the beginning of a string (or at the end when rindex)
            if (sub.realSize == 0) return getRuntime().newFixnum(pos);

            pos = value.lastIndexOf(sub, pos);
        }

        return pos == -1 ? getRuntime().getNil() : getRuntime().newFixnum(pos);
    }

