(startLine=455 endLine=476 srcPath=/home/sonia/NewExperiment/jrubyFilter/01181/src/org/jruby/runtime/invokedynamic/InvokeDynamicSupport.java)
    public static IRubyObject invocationFallback(JRubyCallSite site, ThreadContext context, IRubyObject caller, IRubyObject self, String name, IRubyObject arg0) throws Throwable {
        RubyClass selfClass = pollAndGetClass(context, self);
        CacheEntry entry = selfClass.searchWithCache(name);
        if (methodMissing(entry, site.callType(), name, caller)) {
            return callMethodMissing(entry, site.callType(), context, self, name, arg0);
        }
        
        MethodHandle target = getTarget(site, selfClass, name, entry, 1);
        
        if (target == null || ++site.failCount > RubyInstanceConfig.MAX_FAIL_COUNT) {
            site.setTarget(target = createFail(FAIL_1, site, name, entry.method));
        } else {
            target = postProcess(site, target);
            if (site.getTarget() != null) {
                site.setTarget(createGWT(TEST_1, target, site.getTarget(), entry, site, false));
            } else {
                site.setTarget(createGWT(TEST_1, target, FALLBACK_1, entry, site));
            }
        }

        return (IRubyObject)target.invokeWithArguments(context, caller, self, name, arg0);
    }

