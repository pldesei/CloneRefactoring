(startLine=121 endLine=163 srcPath=/root/NewExperiment/elasticsearchFilter/00730/src/test/java/org/elasticsearch/test/integration/gateway/none/RecoverAfterNodesTests.java)
    public void testRecoverAfterDataNodes() {
        logger.info("--> start master_node (1)");
        startNode("master1", settingsBuilder().put("gateway.recover_after_data_nodes", 2).put("node.data", false).put("node.master", true));
        assertThat(client("master1").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA),
                hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));

        logger.info("--> start data_node (1)");
        startNode("data1", settingsBuilder().put("gateway.recover_after_data_nodes", 2).put("node.data", true).put("node.master", false));
        assertThat(client("master1").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA),
                hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));
        assertThat(client("data1").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA),
                hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));

        logger.info("--> start master_node (2)");
        startNode("master2", settingsBuilder().put("gateway.recover_after_data_nodes", 2).put("node.data", false).put("node.master", true));
        assertThat(client("master1").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA),
                hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));
        assertThat(client("data1").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA),
                hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));
        assertThat(client("master2").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA),
                hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));

        logger.info("--> start data_node (2)");
        startNode("data2", settingsBuilder().put("gateway.recover_after_data_nodes", 2).put("node.data", true).put("node.master", false));
        assertThat(client("master1").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA).isEmpty(),
                equalTo(true));
        assertThat(client("master2").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA).isEmpty(),
                equalTo(true));
        assertThat(client("data1").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA).isEmpty(),
                equalTo(true));
        assertThat(client("data2").admin().cluster().prepareState().setLocal(true).execute().actionGet()
                .state().blocks().global(ClusterBlockLevel.METADATA).isEmpty(),
                equalTo(true));
    }

