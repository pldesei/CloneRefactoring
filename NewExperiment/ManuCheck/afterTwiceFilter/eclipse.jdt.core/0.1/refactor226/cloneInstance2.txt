(startLine=381 endLine=407 srcPath=/home/sonia/NewExperiment/eclipse.jdt.coreFilter/00260/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java)
			if (fields != null) {
				for (int i = 0, count = fields.length; i < count; i++) {
					if (fields[i].isStatic()) {
						staticFieldInfo =
							fields[i].analyseCode(
								staticInitializerScope,
								staticInitializerContext,
								staticFieldInfo);
						// in case the initializer is not reachable, use a reinitialized flowInfo and enter a fake reachable
						// branch, since the previous initializer already got the blame.
						if (staticFieldInfo == FlowInfo.DeadEnd) {
							staticInitializerScope.problemReporter().initializerMustCompleteNormally(
								fields[i]);
							staticFieldInfo = FlowInfo.initial(maxFieldCount).markAsFakeReachable(true);
						}
					} else {
						nonStaticFieldInfo =
							fields[i].analyseCode(initializerScope, initializerContext, nonStaticFieldInfo);
						// in case the initializer is not reachable, use a reinitialized flowInfo and enter a fake reachable
						// branch, since the previous initializer already got the blame.
						if (nonStaticFieldInfo == FlowInfo.DeadEnd) {
							initializerScope.problemReporter().initializerMustCompleteNormally(fields[i]);
							nonStaticFieldInfo = FlowInfo.initial(maxFieldCount).markAsFakeReachable(true);
						}
					}
				}
			}

