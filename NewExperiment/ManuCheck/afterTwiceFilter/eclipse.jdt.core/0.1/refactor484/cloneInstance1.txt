(startLine=636 endLine=665 srcPath=/home/sonia/NewExperiment/eclipse.jdt.coreFilter/01175/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java)
public int literalIndexForMethod(char[] declaringClass, char[] selector, char[] signature, boolean isInterface) {
	int index = getFromCache(declaringClass, selector, signature);
	if (index == -1) {
		int classIndex;
		if ((classIndex = classCache.get(declaringClass)) < 0) {
			// The entry doesn't exit yet
			int nameIndex = literalIndex(declaringClass);
			classIndex = classCache.put(declaringClass, this.currentIndex++);
			if (index > 0xFFFF){
				this.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());
			}
			writeU1(ClassTag);
			// Then add the 8 bytes representing the long
			writeU2(nameIndex);
		}
		int nameAndTypeIndex = literalIndexForMethod(selector, signature);
		index = putInCache(declaringClass, selector, signature, currentIndex++);
		if (index > 0xFFFF){
			this.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());
		}
		// Write the interface method ref constant into the constant pool
		// First add the tag
		writeU1(isInterface ? InterfaceMethodRefTag : MethodRefTag);
		// Then write the class index
		writeU2(classIndex);
		// The write the nameAndType index
		writeU2(nameAndTypeIndex);		
	}
	return index;
}

