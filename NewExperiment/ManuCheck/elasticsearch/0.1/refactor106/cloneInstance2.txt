(startLine=180 endLine=201 srcPath=/root/NewExperiment/elasticsearchFilter/00763/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestParser.java)
                } else if ("stupid_backoff".equals(fieldName)) {
                    ensureNoSmoothing(suggestion);
                    double theDiscount = 0.4;
                    while ((token = parser.nextToken()) != Token.END_OBJECT) {
                        if (token == XContentParser.Token.FIELD_NAME) {
                            fieldName = parser.currentName();
                        }
                        if (token.isValue()) {
                            if ("discount".equals(fieldName)) {
                                theDiscount = parser.doubleValue();
                            }
                        }
                    }
                    final double discount = theDiscount; 
                    suggestion.setModel( new WordScorer.WordScorerFactory() {
                        @Override
                        public WordScorer newScorer(IndexReader reader, String field, double realWordLikelyhood, BytesRef separator) throws IOException {
                            return new StupidBackoffScorer(reader, field, realWordLikelyhood, separator, discount);
                        }
                    });
                   
                } else {

