(startLine=163 endLine=231 srcPath=/home/sonia/NewExperiment/jmeterFilter/00399/src/protocol/jms/org/apache/jmeter/protocol/jms/sampler/SubscriberSampler.java)
    private SampleResult sampleWithListener() {
        SampleResult result = new SampleResult();
        result.setDataType(SampleResult.TEXT);
        StringBuilder buffer = new StringBuilder();
        StringBuilder propBuffer = new StringBuilder();
        int cnt;
        int loop = getIterationCount();

        
        result.setSampleLabel(getName());
        try {
            initListenerClient();
        } catch (JMSException ex) {
            result.sampleStart();
            result.sampleEnd();
            result.setResponseCode("000");
            result.setResponseMessage(ex.toString());
            return result;
        } catch (NamingException ex) {
            result.sampleStart();
            result.sampleEnd();
            result.setResponseCode("000");
            result.setResponseMessage(ex.toString());
            return result;
        }

        long until = 0L;
        if (timeout > 0) {
            until = timeout + System.currentTimeMillis(); 
        }
        result.sampleStart();
        while (!interrupted
                && (until == 0 || System.currentTimeMillis() < until)
                && queue.size() < loop) {// check this last as it is the most expensive
            try {
                Thread.sleep(0, 50);
            } catch (InterruptedException e) {
                log.debug(e.getMessage());
            }
        }
        result.sampleEnd();
       
        int read = 0;
        for(cnt = 0; cnt < loop ; cnt++) {
            Message msg = queue.poll();
            if (msg != null) {
                read++;
                extractContent(buffer, propBuffer, msg);
            }
        }
        if (getReadResponseAsBoolean()) {
            result.setResponseData(buffer.toString().getBytes());
        } else {
            result.setBytes(buffer.toString().getBytes().length);
        }
        result.setResponseHeaders(propBuffer.toString());
        result.setDataType(SampleResult.TEXT);
        result.setSuccessful(true);
        if (read == 0) {
            result.setResponseCode("404"); // Not found
        } else {
            result.setResponseCodeOK();
        }
        result.setResponseMessage(read + " messages received");
        result.setSamplerData(loop + " messages expected");
        result.setSampleCount(read);

        return result;
    }

