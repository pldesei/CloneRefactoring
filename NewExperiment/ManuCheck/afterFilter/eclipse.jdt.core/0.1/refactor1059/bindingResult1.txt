ProjectPath:/home/sonia/NewExperiment/eclipse.jdt.coreFilter/02701
predFragLineRange:498-510
predMethodLineRange:332-516
nextLineRange:332-513
predStrMethodInvoNames:
[compilerOptions, enclosingReceiverType, resolveType, checkIllegalNullAnnotation, isRawType, enclosingType, illegalQualifiedParameterizedTypeAllocation, problemReporter, resolveType, illegalUsageOfWildcard, problemReporter, diamondNotWithExplicitTypeArguments, problemReporter, resolveType, setExpressionContext, genericInferenceError, problemReporter, resolveType, findMethod, isValidBinding, original, createParameterizedGenericMethod, environment, original, original, isOrEnclosedByPrivateType, isDefinedInMethod, isValidBinding, canBeInstantiated, cannotInstantiate, problemReporter, inferConstructorOfElidedParameterizedType, isValidBinding, cannotInferElidedTypes, problemReporter, definesTargetType, resolvePolyExpressionArguments, findConstructorBinding, isValidBinding, isValidBinding, invalidConstructor, problemReporter, missingTypeInConstructor, problemReporter, isMethodUseDeprecated, deprecatedMethod, problemReporter, checkInvocationArguments, original, unnecessaryTypeArgumentsForMethodInvocation, problemReporter, isParameterizedTypeWithActualArguments, checkTypeArgumentRedundancy, checkImplicitNullAnnotations, environment, typeVariables, original, checkNullConstraints, getTypeAnnotations, createAnnotatedType, environment, getTypeAnnotations]
%%%%%%%%%%
AddedMethodInvo Line:499 InvoName:ImplicitNullAnnotationVerifier.ensureNullnessIsKnown(this.binding,scope)
PackageName:org.eclipse.jdt.internal.compiler.lookup
QualifiedClassName:org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier
ClassName:ImplicitNullAnnotationVerifier
InvokedFilePath:/home/sonia/NewExperiment/eclipse.jdt.coreFilter/02701/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java
InvokedMethodSig:public static void ensureNullnessIsKnown(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.Scope) 
