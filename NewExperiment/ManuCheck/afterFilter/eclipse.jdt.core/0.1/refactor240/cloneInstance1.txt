(startLine=163 endLine=176 srcPath=/home/sonia/NewExperiment/eclipse.jdt.coreFilter/00349/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java)
			if (methods != null) {
				UnconditionalFlowInfo outerInfo = flowInfo.copy().unconditionalInits().discardFieldInitializations();
				FlowInfo constructorInfo = fieldInfo.unconditionalInits().discardNonFieldInitializations().addInitializationsFrom(outerInfo);
				for (int i = 0, count = methods.length; i < count; i++) {
					AbstractMethodDeclaration method = methods[i];
					if (method.ignoreFurtherInvestigation)
						continue;
					if (method.isConstructor()) { // constructor
						((ConstructorDeclaration)method).analyseCode(scope, initializerContext, constructorInfo.copy());
					} else { // regular method
						method.analyseCode(scope, null, flowInfo.copy());
					}
				}
			}

