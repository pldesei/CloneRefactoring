(startLine=1396 endLine=1436 srcPath=/home/sonia/NewExperiment/eclipse.jdt.coreFilter/00588/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java)
	public void test033() {
		try {
			String sourceA =
				"public class A {\n" +
				"	public static void main(String[] args) {\n" +
				"		boolean b = false;\n" +
				"		int i = 6;\n" +
				"		if ((i == 6) \n" +
				"		   & !b) {   	\n" +
				"		   	System.out.println(i);\n" +
				"		   }\n" +
				"	}\n" +
				"}";
			compileAndDeploy(sourceA, "A");
			IClassFileReader classFileReader = ToolFactory.createDefaultClassFileReader(EVAL_DIRECTORY + File.separator + "A.class", IClassFileReader.ALL);
			IMethodInfo[] methodInfos = classFileReader.getMethodInfos();
			assertEquals("wrong size", 2, methodInfos.length);
			IMethodInfo methodInfo = methodInfos[1];
			assertEquals("wrong name", "main", new String(methodInfo.getName()));
			ICodeAttribute codeAttribute = methodInfo.getCodeAttribute();
			assertNotNull("No code attribute", codeAttribute);
			ILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();
			assertNotNull("No code line number attribute", lineNumberAttribute);
			int[][] lineNumberTable = lineNumberAttribute.getLineNumberTable();
			assertEquals("wrong size", 6, lineNumberTable.length);
			assertEquals("wrong pc[0]", 0, lineNumberTable[0][0]);
			assertEquals("wrong line[0]", 3, lineNumberTable[0][1]);
			assertEquals("wrong pc[1]", 2, lineNumberTable[1][0]);
			assertEquals("wrong line[1]", 4, lineNumberTable[1][1]);
			assertEquals("wrong pc[2]", 5, lineNumberTable[2][0]);
			assertEquals("wrong line[2]", 5, lineNumberTable[2][1]);
			assertEquals("wrong pc[3]", 16, lineNumberTable[3][0]);
			assertEquals("wrong line[3]", 6, lineNumberTable[3][1]);
			assertEquals("wrong pc[4]", 29, lineNumberTable[4][0]);
			assertEquals("wrong line[4]", 7, lineNumberTable[4][1]);
			assertEquals("wrong pc[5]", 36, lineNumberTable[5][0]);
			assertEquals("wrong line[5]", 9, lineNumberTable[5][1]);
		} finally {
			removeTempClass("A");
		}
	}

