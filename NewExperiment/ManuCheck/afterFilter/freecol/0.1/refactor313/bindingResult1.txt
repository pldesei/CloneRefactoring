ProjectPath:/root/NewExperiment/freecolFilter/00940
predFragLineRange:901-911
predMethodLineRange:846-1217
nextLineRange:867-956
predStrMethodInvoNames:
[create, fine, getName, setDisplayUnitCount, getUnitCount, checkForUnequippedExpertPioneer, checkForUnarmedExpertSoldier, getWorkLocationPlans, sort, getUnitList, isPerson, add, setLocation, getTile, placeExpertsInWorkPlaces, getGoodsType, getSpecification, getFoodProduction, getFoodConsumption, size, get, getWorkLocation, getGoodsType, isLand, getWorkTile, hasAbility, iterator, hasNext, next, getProductionOf, getWorkLocation, getSkillLevel, getSkillLevel, canAdd, getWorkLocation, setLocation, getWorkLocation, setWorkType, getGoodsType, remove, remove, getFoodProduction, getFoodConsumption, size, get, getGoodsType, iterator, hasNext, next, getWorkLocation, getProductionOf, getWorkLocation, getGoodsType, getUnitProductivity, getSkillLevel, getSkillLevel, canAdd, getWorkLocation, setLocation, getWorkLocation, setWorkType, getGoodsType, remove, remove, getFoodProduction, getFoodConsumption, getFoodProduction, getFoodConsumption, getGoodsCount, getCurrentWorkLocations, getUnitCount, getUnitList, getWorkType, getProductionOf, getProductionOf, getUnit, getSkillLevel, getSkillLevel, getUnit, getProduction, getProduction, getUnit, getProductionOf, setWorkType, setLocation, getTile, getAIUnit, getMission, setMission, getUnitIterator, next, hasNext, next, getExpertProduction, getType, getWorkType, setLocation, getTile, getAIUnit, getMission, setMission, getFoodProduction, getFoodConsumption, getCurrentWorkLocations, getUnitCount, isProductive, getUnitIterator, next, hasNext, next, getExpertProduction, getType, getWorkType, getRawMaterial, getWorkType, getBestVacantTile, getGoodsType, getSpecification, getBuildingForProducing, getBestVacantTile, setLocation, setWorkType, setLocation, getTile, getGoodsTypeList, getSpecification, getNetProductionOf, getGoodsCount, isStorable, getWarehouseCapacity, getUnitIterator, getWarehouseCapacity, hasNext, next, getWorkType, getLocation, setLocation, getTile, getGoodsCount, getNetProductionOf, getWarehouseCapacity, isFarmed, getBestVacantTile, getProductionOf, getGoodsCount, getNetProductionOf, getWarehouseCapacity, setLocation, getTile, setLocation, setWorkType, setLocation, size, get, getWorkLocation, getGoodsType, isLand, getWorkTile, hasAbility, iterator, hasNext, next, getProductionOf, getWorkLocation, getSkillLevel, getSkillLevel, canAdd, getWorkLocation, setLocation, getWorkLocation, setWorkType, getGoodsType, remove, remove, iterator, hasNext, next, setLocation, getTile, getAIUnit, getMission, setMission, decideBuildable, createTileImprovementPlans, createWishes, adjustProductionAndManufacture, checkConditionsForHorseBreed, getUnitCount, getUnitCount, getTile, warning, getName, getFirstUnit, getTile, getGoodsType, getSpecification, setLocation, getBuildingForProducing, setWorkType, setMission, getAIUnit, getName, setDisplayUnitCount]
%%%%%%%%%%
AddedMethodInvo Line:871 InvoName:wishes.isEmpty()
PackageName:java.util
QualifiedClassName:java.util.ArrayList<net.sf.freecol.server.ai.Wish>
ClassName:ArrayList<Wish>
InnerClass
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/test/src/java/util/ArrayList<net.java
InvokedMethodSig:public boolean isEmpty() 
%%%%%%%%%%
AddedMethodInvo Line:873 InvoName:colony.governmentChange(newPopulation)
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Colony
ClassName:Colony
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Colony.java
InvokedMethodSig:public int governmentChange(int) 
%%%%%%%%%%
AddedMethodInvo Line:876 InvoName:colony.getOwner().getMaximumFoodConsumption()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Player
ClassName:Player
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Player.java
InvokedMethodSig:public int getMaximumFoodConsumption() 
%%%%%%%%%%
AddedMethodInvo Line:876 InvoName:colony.getOwner()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Settlement
ClassName:Settlement
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Settlement.java
InvokedMethodSig:public net.sf.freecol.common.model.Player getOwner() 
%%%%%%%%%%
AddedMethodInvo Line:878 InvoName:getNextExpert(needFood)
PackageName:net.sf.freecol.server.ai
QualifiedClassName:net.sf.freecol.server.ai.AIColony
ClassName:AIColony
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/server/ai/AIColony.java
InvokedMethodSig:private net.sf.freecol.common.model.UnitType getNextExpert(boolean) 
%%%%%%%%%%
AddedMethodInvo Line:879 InvoName:getAIMain()
PackageName:net.sf.freecol.server.ai
QualifiedClassName:net.sf.freecol.server.ai.AIObject
ClassName:AIObject
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/server/ai/AIObject.java
InvokedMethodSig:public net.sf.freecol.server.ai.AIMain getAIMain() 
%%%%%%%%%%
AddedMethodInvo Line:887 InvoName:isBadlyDefended()
PackageName:net.sf.freecol.server.ai
QualifiedClassName:net.sf.freecol.server.ai.AIColony
ClassName:AIColony
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/server/ai/AIColony.java
InvokedMethodSig:public boolean isBadlyDefended() 
%%%%%%%%%%
AddedMethodInvo Line:889 InvoName:colony.getBestDefenderType()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Colony
ClassName:Colony
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Colony.java
InvokedMethodSig:public net.sf.freecol.common.model.UnitType getBestDefenderType() 
%%%%%%%%%%
AddedMethodInvo Line:891 InvoName:getAIMain()
PackageName:net.sf.freecol.server.ai
QualifiedClassName:net.sf.freecol.server.ai.AIObject
ClassName:AIObject
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/server/ai/AIObject.java
InvokedMethodSig:public net.sf.freecol.server.ai.AIMain getAIMain() 
%%%%%%%%%%
AddedMethodInvo Line:904 InvoName:colony.getCurrentlyBuilding()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Colony
ClassName:Colony
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Colony.java
InvokedMethodSig:public net.sf.freecol.common.model.BuildableType getCurrentlyBuilding() 
%%%%%%%%%%
AddedMethodInvo Line:905 InvoName:colony.getCurrentlyBuilding().getGoodsRequired()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.BuildableType
ClassName:BuildableType
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/BuildableType.java
InvokedMethodSig:public final List<net.sf.freecol.common.model.AbstractGoods> getGoodsRequired() 
%%%%%%%%%%
AddedMethodInvo Line:905 InvoName:colony.getCurrentlyBuilding()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Colony
ClassName:Colony
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Colony.java
InvokedMethodSig:public net.sf.freecol.common.model.BuildableType getCurrentlyBuilding() 
%%%%%%%%%%
AddedMethodInvo Line:906 InvoName:colony.getAdjustedNetProductionOf(goods.getType())
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Colony
ClassName:Colony
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Colony.java
InvokedMethodSig:public int getAdjustedNetProductionOf(net.sf.freecol.common.model.GoodsType) 
%%%%%%%%%%
AddedMethodInvo Line:907 InvoName:requiredGoods.incrementCount(goods.getType(),goods.getAmount())
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.TypeCountMap<net.sf.freecol.common.model.GoodsType>
ClassName:TypeCountMap<GoodsType>
InnerClass
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/test/src/net/sf/freecol/common/model/TypeCountMap<net.java
InvokedMethodSig:public java.lang.Integer incrementCount(T, int) 
%%%%%%%%%%
AddedMethodInvo Line:907 InvoName:goods.getAmount()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.AbstractGoods
ClassName:AbstractGoods
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/AbstractGoods.java
InvokedMethodSig:public final int getAmount() 
%%%%%%%%%%
AddedMethodInvo Line:914 InvoName:plan.getType().getExpendedEquipmentType().getGoodsRequired()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.BuildableType
ClassName:BuildableType
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/BuildableType.java
InvokedMethodSig:public final List<net.sf.freecol.common.model.AbstractGoods> getGoodsRequired() 
%%%%%%%%%%
AddedMethodInvo Line:914 InvoName:plan.getType().getExpendedEquipmentType()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.TileImprovementType
ClassName:TileImprovementType
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/TileImprovementType.java
InvokedMethodSig:public net.sf.freecol.common.model.EquipmentType getExpendedEquipmentType() 
%%%%%%%%%%
AddedMethodInvo Line:916 InvoName:requiredGoods.incrementCount(goods.getType(),goods.getAmount())
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.TypeCountMap<net.sf.freecol.common.model.GoodsType>
ClassName:TypeCountMap<GoodsType>
InnerClass
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/test/src/net/sf/freecol/common/model/TypeCountMap<net.java
InvokedMethodSig:public java.lang.Integer incrementCount(T, int) 
%%%%%%%%%%
AddedMethodInvo Line:916 InvoName:goods.getAmount()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.AbstractGoods
ClassName:AbstractGoods
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/AbstractGoods.java
InvokedMethodSig:public final int getAmount() 
%%%%%%%%%%
AddedMethodInvo Line:924 InvoName:building.getGoodsInputType()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Building
ClassName:Building
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Building.java
InvokedMethodSig:public net.sf.freecol.common.model.GoodsType getGoodsInputType() 
%%%%%%%%%%
AddedMethodInvo Line:925 InvoName:colony.getProductionInfo(building)
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Colony
ClassName:Colony
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Colony.java
InvokedMethodSig:public net.sf.freecol.common.model.ProductionInfo getProductionInfo(java.lang.Object) 
%%%%%%%%%%
AddedMethodInvo Line:928 InvoName:info.hasMaximumProduction()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.ProductionInfo
ClassName:ProductionInfo
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/ProductionInfo.java
InvokedMethodSig:public boolean hasMaximumProduction() 
%%%%%%%%%%
AddedMethodInvo Line:930 InvoName:requiredGoods.incrementCount(inputType,100)
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.TypeCountMap<net.sf.freecol.common.model.GoodsType>
ClassName:TypeCountMap<GoodsType>
InnerClass
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/test/src/net/sf/freecol/common/model/TypeCountMap<net.java
InvokedMethodSig:public java.lang.Integer incrementCount(T, int) 
%%%%%%%%%%
AddedMethodInvo Line:937 InvoName:goodsType.isBreedable()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.GoodsType
ClassName:GoodsType
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/GoodsType.java
InvokedMethodSig:public boolean isBreedable() 
%%%%%%%%%%
AddedMethodInvo Line:938 InvoName:requiredGoods.incrementCount(goodsType,goodsType.getBreedingNumber())
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.TypeCountMap<net.sf.freecol.common.model.GoodsType>
ClassName:TypeCountMap<GoodsType>
InnerClass
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/test/src/net/sf/freecol/common/model/TypeCountMap<net.java
InvokedMethodSig:public java.lang.Integer incrementCount(T, int) 
%%%%%%%%%%
AddedMethodInvo Line:938 InvoName:goodsType.getBreedingNumber()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.GoodsType
ClassName:GoodsType
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/GoodsType.java
InvokedMethodSig:public int getBreedingNumber() 
%%%%%%%%%%
AddedMethodInvo Line:943 InvoName:isBadlyDefended()
PackageName:net.sf.freecol.server.ai
QualifiedClassName:net.sf.freecol.server.ai.AIColony
ClassName:AIColony
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/server/ai/AIColony.java
InvokedMethodSig:public boolean isBadlyDefended() 
%%%%%%%%%%
AddedMethodInvo Line:944 InvoName:colony.getSpecification().getEquipmentTypeList()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Specification
ClassName:Specification
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Specification.java
InvokedMethodSig:public List<net.sf.freecol.common.model.EquipmentType> getEquipmentTypeList() 
%%%%%%%%%%
AddedMethodInvo Line:945 InvoName:type.isMilitaryEquipment()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.EquipmentType
ClassName:EquipmentType
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/EquipmentType.java
InvokedMethodSig:public final boolean isMilitaryEquipment() 
%%%%%%%%%%
AddedMethodInvo Line:947 InvoName:unit.canBeEquippedWith(type)
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.Unit
ClassName:Unit
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/Unit.java
InvokedMethodSig:public boolean canBeEquippedWith(net.sf.freecol.common.model.EquipmentType) 
%%%%%%%%%%
AddedMethodInvo Line:948 InvoName:type.getGoodsRequired()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.BuildableType
ClassName:BuildableType
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/BuildableType.java
InvokedMethodSig:public final List<net.sf.freecol.common.model.AbstractGoods> getGoodsRequired() 
%%%%%%%%%%
AddedMethodInvo Line:949 InvoName:requiredGoods.incrementCount(goods.getType(),goods.getAmount())
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.TypeCountMap<net.sf.freecol.common.model.GoodsType>
ClassName:TypeCountMap<GoodsType>
InnerClass
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/test/src/net/sf/freecol/common/model/TypeCountMap<net.java
InvokedMethodSig:public java.lang.Integer incrementCount(T, int) 
%%%%%%%%%%
AddedMethodInvo Line:949 InvoName:goods.getAmount()
PackageName:net.sf.freecol.common.model
QualifiedClassName:net.sf.freecol.common.model.AbstractGoods
ClassName:AbstractGoods
InvokedFilePath:/root/NewExperiment/freecolFilter/00940/src/net/sf/freecol/common/model/AbstractGoods.java
InvokedMethodSig:public final int getAmount() 
