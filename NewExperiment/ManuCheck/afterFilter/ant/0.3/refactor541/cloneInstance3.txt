(startLine=430 endLine=473 srcPath=/home/sonia/NewExperiment/antFilter/00907/src/testcases/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java)
    public void testCheckoutFileFlags() {
        String[] sTestCmdLine = { "soscmd", "-command", "CheckOutFile", "-file",
            SRC_FILE, "-server", SOS_SERVER_PATH, "-name", SOS_USERNAME,
            "-password", SOS_PASSWORD, "-database", VSS_SERVER_PATH, "-project",
            "$"+VSS_PROJECT_PATH, "-verbose", "-nocompress", "-nocache",
            "-workdir", project.getBaseDir().getAbsolutePath()
            + File.separator + LOCAL_PATH };

        Path path = new Path(project, LOCAL_PATH);

        // Set up a SOSCheckout task
        sosCheckout.setProject(project);
        sosCheckout.setVssServerPath(VSS_SERVER_PATH);
        sosCheckout.setSosServerPath(SOS_SERVER_PATH);
        sosCheckout.setProjectPath(VSS_PROJECT_PATH);
        sosCheckout.setFile(SRC_FILE);
        sosCheckout.setUsername(SOS_USERNAME);
        sosCheckout.setPassword(SOS_PASSWORD);
        sosCheckout.setLocalPath(path);
        sosCheckout.setNoCache(true);
        sosCheckout.setNoCompress(true);
        sosCheckout.setVerbose(true);
        sosCheckout.setRecursive(true);

        commandline = sosCheckout.buildCmdLine();
        String[] sGeneratedCmdLine = commandline.getCommandline();

        int i = 0;
        while (i < sTestCmdLine.length) {
            try {
                assertEquals("CheckOutFile arg # " + String.valueOf(i),
                                sTestCmdLine[i],
                                sGeneratedCmdLine[i]);
                i++;
            } catch (ArrayIndexOutOfBoundsException aioob) {
                fail("CheckOutFile missing arg");
            }

        }
        if (sGeneratedCmdLine.length > sTestCmdLine.length) {
            // We have extra elements
            fail("CheckOutFile extra args");
        }
    }

