ProjectPath:/root/NewExperiment/elasticsearchFilter/01772
predFragLineRange:46-86
predMethodLineRange:45-86
nextLineRange:50-98
predStrMethodInvoNames:
[incrementScope, createError, analyze, createError, analyze, cast, createError, getVariable, decrementScope]
%%%%%%%%%%
AddedMethodInvo Line:52 InvoName:condition.extractVariables(variables)
PackageName:org.elasticsearch.painless.node
QualifiedClassName:org.elasticsearch.painless.node.ANode
ClassName:ANode
InvokedFilePath:/root/NewExperiment/elasticsearchFilter/01772/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/ANode.java
InvokedMethodSig:abstract void extractVariables(Set<java.lang.String>) 
%%%%%%%%%%
AddedMethodInvo Line:55 InvoName:block.extractVariables(variables)
PackageName:org.elasticsearch.painless.node
QualifiedClassName:org.elasticsearch.painless.node.SBlock
ClassName:SBlock
InvokedFilePath:/root/NewExperiment/elasticsearchFilter/01772/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SBlock.java
InvokedMethodSig:void extractVariables(Set<java.lang.String>) 
%%%%%%%%%%
AddedMethodInvo Line:61 InvoName:Locals.newLocalScope(locals)
PackageName:org.elasticsearch.painless
QualifiedClassName:org.elasticsearch.painless.Locals
ClassName:Locals
InvokedFilePath:/root/NewExperiment/elasticsearchFilter/01772/modules/lang-painless/src/main/java/org/elasticsearch/painless/Locals.java
InvokedMethodSig:public static org.elasticsearch.painless.Locals newLocalScope(org.elasticsearch.painless.Locals) 
%%%%%%%%%%
AddedMethodInvo Line:95 InvoName:locals.hasVariable(Locals.LOOP)
PackageName:org.elasticsearch.painless
QualifiedClassName:org.elasticsearch.painless.Locals
ClassName:Locals
InvokedFilePath:/root/NewExperiment/elasticsearchFilter/01772/modules/lang-painless/src/main/java/org/elasticsearch/painless/Locals.java
InvokedMethodSig:public boolean hasVariable(java.lang.String) 
