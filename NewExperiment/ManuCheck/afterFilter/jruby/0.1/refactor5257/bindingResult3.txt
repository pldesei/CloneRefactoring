ProjectPath:/home/sonia/NewExperiment/jrubyFilter/01531
predFragLineRange:439-450
predMethodLineRange:437-477
nextLineRange:432-461
predStrMethodInvoNames:
[getCurrentContext, getRuntime, equalsIgnoreCase, callMethod, getInstanceVariable, callMethod, callMethod, callMethod, callMethod, decode, getClassFromPath, getRuntime, callMethod, newFixnum, getRuntime, getSHA1Digest, getRuntime, getBytes, convertToString, length, isHexString, plain, length, length, newX509ExtError, getRuntime, charAt, charAt, isHexDigit, isHexDigit, append, append, toUpperCase, toUpperCase, newX509ExtError, getRuntime, length, charAt, toString, length, length, parseInt, substring]
%%%%%%%%%%
AddedMethodInvo Line:435 InvoName:derDigest(context)
PackageName:org.jruby.ext.openssl
QualifiedClassName:org.jruby.ext.openssl.X509Extensions.ExtensionFactory
ClassName:ExtensionFactory
InnerClass
InvokedFilePath:/home/sonia/NewExperiment/jrubyFilter/01531/ext/openssl/src/main/java/org/jruby/ext/openssl/X509Extensions.java
InvokedMethodSig:private byte[] derDigest(org.jruby.runtime.ThreadContext) 
%%%%%%%%%%
AddedMethodInvo Line:444 InvoName:newExtensionError(context.runtime,oid + " = " + valuex+ ": odd number of digits")
PackageName:org.jruby.ext.openssl
QualifiedClassName:org.jruby.ext.openssl.X509Extensions
ClassName:X509Extensions
InvokedFilePath:/home/sonia/NewExperiment/jrubyFilter/01531/ext/openssl/src/main/java/org/jruby/ext/openssl/X509Extensions.java
InvokedMethodSig:private static org.jruby.exceptions.RaiseException newExtensionError(org.jruby.Ruby, java.lang.String) 
%%%%%%%%%%
AddedMethodInvo Line:450 InvoName:newExtensionError(context.runtime,oid + " = " + valuex+ ": illegal hex digit")
PackageName:org.jruby.ext.openssl
QualifiedClassName:org.jruby.ext.openssl.X509Extensions
ClassName:X509Extensions
InvokedFilePath:/home/sonia/NewExperiment/jrubyFilter/01531/ext/openssl/src/main/java/org/jruby/ext/openssl/X509Extensions.java
InvokedMethodSig:private static org.jruby.exceptions.RaiseException newExtensionError(org.jruby.Ruby, java.lang.String) 
