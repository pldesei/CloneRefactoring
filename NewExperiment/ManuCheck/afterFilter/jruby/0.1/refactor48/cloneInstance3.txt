(startLine=1136 endLine=1166 srcPath=/home/sonia/NewExperiment/jrubyFilter/00222/src/org/jruby/util/Pack.java)
                            {
                                int lByte = 0;
                                int lIndex = 0;
                                char lCurChar;
                                int lPadLength = 0;
                                if (lLength > lCurElemString.length()) { //I don't undestand this why divide by 2
                                    lPadLength = (lLength - lCurElemString.length() + 1) / 2;
                                    lLength = lCurElemString.length();
                                }
                                for (lIndex = 0; lIndex < lLength;) {
                                    lCurChar = lCurElemString.charAt(lIndex++);
                                    if (Character.isJavaIdentifierStart(lCurChar))
                                        //this test may be too lax but it is the same as in MRI
                                        lByte |= ((lCurChar & 15) + 9) & 15;
                                    else
                                        lByte |= (lCurChar & 15);
                                    if ((lIndex & 1) != 0)
                                        lByte <<= 4;
                                    else {
                                        lResult.append((char) (lByte & 0xff));
                                        lByte = 0;
                                    }
                                }
                                if ((lLength & 1) != 0) {
                                    lResult.append((char) (lByte & 0xff));
                                }

                                //do some padding, I don't understand the padding strategy
                                lLength = lResult.length();
                                lResult.setLength(lLength + lPadLength);
                            }

