(startLine=192 endLine=216 srcPath=/home/sonia/NewExperiment/jrubyFilter/00928/src/org/jruby/runtime/InterpretedBlock.java)
            RubyModule klass, boolean aValue, Binding binding, Block.Type type) {
        if (klass == null) {
            self = prepareSelf(binding);
        }
        
        Visibility oldVis = binding.getFrame().getVisibility();
        Frame lastFrame = pre(context, klass, binding);

        try {
            if (hasVarNode) {
                if (aValue) {
                    setupBlockArgs(context, varNode, value, self);
                } else {
                    setupBlockArg(context, varNode, value, self);
                }
            }
            
            // This while loop is for restarting the block call in case a 'redo' fires.
            return evalBlockBody(context, self);
        } catch (JumpException.NextJump nj) {
            return handleNextJump(context, nj, type);
        } finally {
            post(context, binding, oldVis, lastFrame);
        }
    }

