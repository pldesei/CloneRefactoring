(startLine=343 endLine=369 srcPath=/home/sonia/NewExperiment/jrubyFilter/00741/src/org/jruby/javasupport/JavaClass.java)
    public static Object coerceJavaObjectToType(ThreadContext context, Object javaObject, Class target) {
        Ruby runtime = context.getRuntime();
        
        if (isDuckTypeConvertable(javaObject.getClass(), target)) {
            RubyObject rubyObject = (RubyObject) javaObject;
            if (!rubyObject.respondsTo("java_object")) {
                IRubyObject javaUtilities = runtime.getJavaSupport().getJavaUtilitiesModule();
                IRubyObject javaInterfaceModule = Java.get_interface_module(javaUtilities, JavaClass.get(runtime, target));
                if (!((RubyModule)javaInterfaceModule).isInstance(rubyObject)) {
                    rubyObject.extend(new IRubyObject[] {javaInterfaceModule});
                }

                if (rubyObject instanceof RubyProc) {
                    // Proc implementing an interface, pull in the catch-all code that lets the proc get invoked
                    // no matter what method is called on the interface
                    rubyObject.instance_eval(context, runtime.newString("extend Proc::CatchAll"), Block.NULL_BLOCK);
                }
                JavaObject jo = (JavaObject) rubyObject.instance_eval(context, runtime.newString("send :__jcreate_meta!"), Block.NULL_BLOCK);
                return jo.getValue();
            }

            // can't be converted any more, return it
            return javaObject;
        } else {
            return javaObject;
        }
    }

