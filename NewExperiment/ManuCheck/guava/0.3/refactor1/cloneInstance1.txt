(startLine=1022 endLine=1039 srcPath=/home/sonia/NewExperiment/guavaFilter/00118/guava/src/com/google/common/util/concurrent/Futures.java)
      Future<V> future, Class<X> exceptionClass) throws X {
    checkNotNull(future);
    checkArgument(!RuntimeException.class.isAssignableFrom(exceptionClass),
        "Futures.get exception type (%s) must not be a RuntimeException",
        exceptionClass);
    try {
      return future.get();
    } catch (InterruptedException e) {
      currentThread().interrupt();
      throw newWithCause(exceptionClass, e);
    } catch (CancellationException e) {
      throw e;
    } catch (ExecutionException e) {
      throw newWithCause(exceptionClass, e.getCause());
    } catch (RuntimeException e) {
      throw newWithCause(exceptionClass, e);
    }
  }

